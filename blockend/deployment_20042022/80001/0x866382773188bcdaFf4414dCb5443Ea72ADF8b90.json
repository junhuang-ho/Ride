{"abi": [{"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "sender", "type": "address"}, {"indexed": false, "internalType": "address", "name": "priceFeed", "type": "address"}], "name": "AddedPriceFeedRemoved", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "sender", "type": "address"}, {"indexed": false, "internalType": "address", "name": "applicant", "type": "address"}], "name": "ApplicantApproved", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "sender", "type": "address"}, {"indexed": false, "internalType": "bytes32", "name": "key", "type": "bytes32"}], "name": "CurrencyRegistered", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "sender", "type": "address"}, {"indexed": false, "internalType": "bytes32", "name": "key", "type": "bytes32"}], "name": "CurrencyRemoved", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "sender", "type": "address"}, {"indexed": false, "internalType": "bytes32", "name": "keyX", "type": "bytes32"}, {"indexed": false, "internalType": "bytes32", "name": "keyY", "type": "bytes32"}], "name": "DerivedPriceFeedRemoved", "type": "event"}, {"anonymous": false, "inputs": [{"components": [{"internalType": "address", "name": "facetAddress", "type": "address"}, {"internalType": "enum Cut.FacetCutAction", "name": "action", "type": "uint8"}, {"internalType": "bytes4[]", "name": "functionSelectors", "type": "bytes4[]"}], "indexed": false, "internalType": "struct Cut.FacetCut[]", "name": "_cut", "type": "tuple[]"}, {"indexed": false, "internalType": "address", "name": "_init", "type": "address"}, {"indexed": false, "internalType": "bytes", "name": "_calldata", "type": "bytes"}], "name": "DiamondCut", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "sender", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "fee", "type": "uint256"}], "name": "FeeSetBase", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "sender", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "fee", "type": "uint256"}], "name": "FeeSetCancellation", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "sender", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "fee", "type": "uint256"}], "name": "FeeSetCostPerMetre", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "sender", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "fee", "type": "uint256"}], "name": "FeeSetCostPerMinute", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "sender", "type": "address"}, {"indexed": false, "internalType": "bytes32", "name": "key", "type": "bytes32"}, {"indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "FundsLocked", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "sender", "type": "address"}, {"indexed": false, "internalType": "address", "name": "decrease", "type": "address"}, {"indexed": false, "internalType": "address", "name": "increase", "type": "address"}, {"indexed": false, "internalType": "bytes32", "name": "key", "type": "bytes32"}, {"indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "FundsUnlocked", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "sender", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "count", "type": "uint256"}], "name": "HiveCreationCountSet", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "sender", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "duration", "type": "uint256"}], "name": "HiveDisputeDurationSet", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "sender", "type": "address"}, {"indexed": true, "internalType": "bytes32", "name": "jobId", "type": "bytes32"}], "name": "JobCleared", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "sender", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "duration", "type": "uint256"}], "name": "JobLifespanSet", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "sender", "type": "address"}, {"indexed": false, "internalType": "address", "name": "hive", "type": "address"}], "name": "LeftHive", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "sender", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "metres", "type": "uint256"}], "name": "MaxMetresUpdated", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "sender", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "duration", "type": "uint256"}], "name": "MinDisputeDurationSet", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "sender", "type": "address"}, {"indexed": false, "internalType": "address", "name": "token", "type": "address"}], "name": "NativeTokenSet", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "sender", "type": "address"}, {"indexed": false, "internalType": "bytes32", "name": "keyX", "type": "bytes32"}, {"indexed": false, "internalType": "bytes32", "name": "keyY", "type": "bytes32"}, {"indexed": false, "internalType": "address", "name": "priceFeed", "type": "address"}], "name": "PriceFeedAdded", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "sender", "type": "address"}, {"indexed": false, "internalType": "bytes32", "name": "keyX", "type": "bytes32"}, {"indexed": false, "internalType": "bytes32", "name": "keyY", "type": "bytes32"}, {"indexed": false, "internalType": "bytes32", "name": "keyShared", "type": "bytes32"}], "name": "PriceFeedDerived", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "sender", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "rating", "type": "uint256"}], "name": "RatingGiven", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "sender", "type": "address"}], "name": "RegisteredAsRunner", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "bytes32", "name": "role", "type": "bytes32"}, {"indexed": true, "internalType": "bytes32", "name": "previousAdminRole", "type": "bytes32"}, {"indexed": true, "internalType": "bytes32", "name": "newAdminRole", "type": "bytes32"}], "name": "RoleAdminChanged", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "bytes32", "name": "role", "type": "bytes32"}, {"indexed": true, "internalType": "address", "name": "account", "type": "address"}, {"indexed": true, "internalType": "address", "name": "sender", "type": "address"}], "name": "RoleGranted", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "bytes32", "name": "role", "type": "bytes32"}, {"indexed": true, "internalType": "address", "name": "account", "type": "address"}, {"indexed": true, "internalType": "address", "name": "sender", "type": "address"}], "name": "RoleRevoked", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "sender", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "min", "type": "uint256"}, {"indexed": false, "internalType": "uint256", "name": "max", "type": "uint256"}], "name": "SetRatingBounds", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "sender", "type": "address"}, {"indexed": false, "internalType": "address", "name": "user", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "banDuration", "type": "uint256"}], "name": "UserBanned", "type": "event"}, {"inputs": [{"internalType": "address", "name": "_runner", "type": "address"}, {"internalType": "string", "name": "_uri", "type": "string"}], "name": "approveApplicant", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "leaveHive", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "_maxMetresPerTrip", "type": "uint256"}], "name": "registerAsRunner", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_runner", "type": "address"}, {"internalType": "string", "name": "_uri", "type": "string"}], "name": "resetURI", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "_maxMetresPerTrip", "type": "uint256"}], "name": "updateMaxMetresPerTrip", "outputs": [], "stateMutability": "nonpayable", "type": "function"}], "allSourcePaths": {"24": "/home/ben/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Counters.sol", "25": "/home/ben/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Strings.sol", "57": "contracts/hub/facets/core/RunnerRegistry.sol", "61": "contracts/hub/interfaces/IHubLibraryEvents.sol", "70": "contracts/hub/libraries/core/LibJobBoard.sol", "72": "contracts/hub/libraries/core/LibRater.sol", "73": "contracts/hub/libraries/core/LibRequester.sol", "76": "contracts/hub/libraries/core/LibRunnerDetail.sol", "77": "contracts/hub/libraries/core/LibRunnerRegistry.sol", "78": "contracts/hub/libraries/utils/LibAccessControl.sol"}, "ast": {"absolutePath": "contracts/hub/facets/core/RunnerRegistry.sol", "exportedSymbols": {"Counters": [22175], "Cut": [5197], "IHubLibraryEvents": [5916], "LibAccessControl": [9758], "LibCurrencyRegistry": [6200], "LibCutAndLoupe": [10565], "LibHolding": [8301], "LibJobBoard": [8607], "LibRater": [8925], "LibRequester": [8950], "LibRequesterDetail": [9026], "LibRunner": [9103], "LibRunnerDetail": [9282], "LibRunnerRegistry": [9468], "RunnerRegistry": [4894], "Strings": [22378]}, "id": 4895, "license": "BUSL-1.1", "nodeType": "SourceUnit", "nodes": [{"id": 4643, "literals": ["solidity", "^", "0.8", ".2"], "nodeType": "PragmaDirective", "src": "36:23:57"}, {"absolutePath": "contracts/hub/libraries/core/LibRunnerRegistry.sol", "file": "../../libraries/core/LibRunnerRegistry.sol", "id": 4644, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 4895, "sourceUnit": 9469, "src": "61:52:57", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/hub/libraries/core/LibRunnerDetail.sol", "file": "../../libraries/core/LibRunnerDetail.sol", "id": 4645, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 4895, "sourceUnit": 9283, "src": "114:50:57", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/hub/libraries/core/LibJobBoard.sol", "file": "../../libraries/core/LibJobBoard.sol", "id": 4646, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 4895, "sourceUnit": 8608, "src": "165:46:57", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/hub/libraries/core/LibRunner.sol", "file": "../../libraries/core/LibRunner.sol", "id": 4647, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 4895, "sourceUnit": 9104, "src": "212:44:57", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/hub/libraries/utils/LibAccessControl.sol", "file": "../../libraries/utils/LibAccessControl.sol", "id": 4648, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 4895, "sourceUnit": 9759, "src": "257:52:57", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/hub/interfaces/IHubLibraryEvents.sol", "file": "../../interfaces/IHubLibraryEvents.sol", "id": 4649, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 4895, "sourceUnit": 5917, "src": "311:48:57", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [{"baseName": {"id": 4650, "name": "IHubLibraryEvents", "nodeType": "IdentifierPath", "referencedDeclaration": 5916, "src": "388:17:57"}, "id": 4651, "nodeType": "InheritanceSpecifier", "src": "388:17:57"}], "contractDependencies": [], "contractKind": "contract", "fullyImplemented": true, "id": 4894, "linearizedBaseContracts": [4894, 5916], "name": "RunnerRegistry", "nameLocation": "370:14:57", "nodeType": "ContractDefinition", "nodes": [{"anonymous": false, "id": 4655, "name": "RegisteredAsRunner", "nameLocation": "418:18:57", "nodeType": "EventDefinition", "parameters": {"id": 4654, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4653, "indexed": true, "mutability": "mutable", "name": "sender", "nameLocation": "453:6:57", "nodeType": "VariableDeclaration", "scope": 4655, "src": "437:22:57", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4652, "name": "address", "nodeType": "ElementaryTypeName", "src": "437:7:57", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "436:24:57"}, "src": "412:49:57"}, {"body": {"id": 4734, "nodeType": "Block", "src": "827:683:57", "statements": [{"expression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 4661, "name": "LibRunnerRegistry", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9468, "src": "837:17:57", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_LibRunnerRegistry_$9468_$", "typeString": "type(library LibRunnerRegistry)"}}, "id": 4663, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_requireNotRunner", "nodeType": "MemberAccess", "referencedDeclaration": 9347, "src": "837:35:57", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$__$", "typeString": "function () view"}}, "id": 4664, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "837:37:57", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4665, "nodeType": "ExpressionStatement", "src": "837:37:57"}, {"expression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 4666, "name": "LibJobBoard", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8607, "src": "884:11:57", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_LibJobBoard_$8607_$", "typeString": "type(library LibJobBoard)"}}, "id": 4668, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_requireNotActive", "nodeType": "MemberAccess", "referencedDeclaration": 8398, "src": "884:29:57", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$__$", "typeString": "function () view"}}, "id": 4669, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "884:31:57", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4670, "nodeType": "ExpressionStatement", "src": "884:31:57"}, {"assignments": [4675], "declarations": [{"constant": false, "id": 4675, "mutability": "mutable", "name": "s1", "nameLocation": "999:2:57", "nodeType": "VariableDeclaration", "scope": 4734, "src": "955:46:57", "stateVariable": false, "storageLocation": "storage", "typeDescriptions": {"typeIdentifier": "t_struct$_StorageRunnerDetail_$9137_storage_ptr", "typeString": "struct LibRunnerDetail.StorageRunnerDetail"}, "typeName": {"id": 4674, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 4673, "name": "LibRunnerDetail.StorageRunnerDetail", "nodeType": "IdentifierPath", "referencedDeclaration": 9137, "src": "955:35:57"}, "referencedDeclaration": 9137, "src": "955:35:57", "typeDescriptions": {"typeIdentifier": "t_struct$_StorageRunnerDetail_$9137_storage_ptr", "typeString": "struct LibRunnerDetail.StorageRunnerDetail"}}, "visibility": "internal"}], "id": 4679, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 4676, "name": "LibRunnerDetail", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9282, "src": "1004:15:57", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_LibRunnerDetail_$9282_$", "typeString": "type(library LibRunnerDetail)"}}, "id": 4677, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_storageRunnerDetail", "nodeType": "MemberAccess", "referencedDeclaration": 9149, "src": "1004:49:57", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_StorageRunnerDetail_$9137_storage_ptr_$", "typeString": "function () pure returns (struct LibRunnerDetail.StorageRunnerDetail storage pointer)"}}, "id": 4678, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1004:51:57", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_StorageRunnerDetail_$9137_storage_ptr", "typeString": "struct LibRunnerDetail.StorageRunnerDetail storage pointer"}}, "nodeType": "VariableDeclarationStatement", "src": "955:100:57"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 4692, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"arguments": [{"expression": {"baseExpression": {"expression": {"id": 4683, "name": "s1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4675, "src": "1092:2:57", "typeDescriptions": {"typeIdentifier": "t_struct$_StorageRunnerDetail_$9137_storage_ptr", "typeString": "struct LibRunnerDetail.StorageRunnerDetail storage pointer"}}, "id": 4684, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "runnerToRunnerDetail", "nodeType": "MemberAccess", "referencedDeclaration": 9136, "src": "1092:23:57", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_RunnerDetail_$9131_storage_$", "typeString": "mapping(address => struct LibRunnerDetail.RunnerDetail storage ref)"}}, "id": 4687, "indexExpression": {"expression": {"id": 4685, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "1116:3:57", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 4686, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "1116:10:57", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "1092:35:57", "typeDescriptions": {"typeIdentifier": "t_struct$_RunnerDetail_$9131_storage", "typeString": "struct LibRunnerDetail.RunnerDetail storage ref"}}, "id": 4688, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "uri", "nodeType": "MemberAccess", "referencedDeclaration": 9116, "src": "1092:39:57", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}], "id": 4682, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "1086:5:57", "typeDescriptions": {"typeIdentifier": "t_type$_t_bytes_storage_ptr_$", "typeString": "type(bytes storage pointer)"}, "typeName": {"id": 4681, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "1086:5:57", "typeDescriptions": {}}}, "id": 4689, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1086:46:57", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes storage pointer"}}, "id": 4690, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "1086:53:57", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"hexValue": "30", "id": 4691, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1143:1:57", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "1086:58:57", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "52756e6e657252656769737472793a20555249206e6f7420736574", "id": 4693, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1158:29:57", "typeDescriptions": {"typeIdentifier": "t_stringliteral_a3ffbdc8796e58692c8ec83baceaa3bd3c549d26387409bf786548938cab3e0d", "typeString": "literal_string \"RunnerRegistry: URI not set\""}, "value": "RunnerRegistry: URI not set"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_a3ffbdc8796e58692c8ec83baceaa3bd3c549d26387409bf786548938cab3e0d", "typeString": "literal_string \"RunnerRegistry: URI not set\""}], "id": 4680, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1065:7:57", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 4694, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1065:132:57", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4695, "nodeType": "ExpressionStatement", "src": "1065:132:57"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 4703, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 4697, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "1215:3:57", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 4698, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "1215:10:57", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 4701, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1237:1:57", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 4700, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "1229:7:57", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 4699, "name": "address", "nodeType": "ElementaryTypeName", "src": "1229:7:57", "typeDescriptions": {}}}, "id": 4702, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1229:10:57", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "1215:24:57", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "52756e6e657252656769737472793a205a65726f2061646472657373", "id": 4704, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1241:30:57", "typeDescriptions": {"typeIdentifier": "t_stringliteral_696bdf19c25f31381ff36385a165b96dfad1df6fc7ab53ca7e4a492cadc6fc75", "typeString": "literal_string \"RunnerRegistry: Zero address\""}, "value": "RunnerRegistry: Zero address"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_696bdf19c25f31381ff36385a165b96dfad1df6fc7ab53ca7e4a492cadc6fc75", "typeString": "literal_string \"RunnerRegistry: Zero address\""}], "id": 4696, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1207:7:57", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 4705, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1207:65:57", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4706, "nodeType": "ExpressionStatement", "src": "1207:65:57"}, {"expression": {"id": 4717, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"expression": {"id": 4707, "name": "s1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4675, "src": "1283:2:57", "typeDescriptions": {"typeIdentifier": "t_struct$_StorageRunnerDetail_$9137_storage_ptr", "typeString": "struct LibRunnerDetail.StorageRunnerDetail storage pointer"}}, "id": 4711, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "runnerToRunnerDetail", "nodeType": "MemberAccess", "referencedDeclaration": 9136, "src": "1283:23:57", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_RunnerDetail_$9131_storage_$", "typeString": "mapping(address => struct LibRunnerDetail.RunnerDetail storage ref)"}}, "id": 4712, "indexExpression": {"expression": {"id": 4709, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "1307:3:57", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 4710, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "1307:10:57", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "1283:35:57", "typeDescriptions": {"typeIdentifier": "t_struct$_RunnerDetail_$9131_storage", "typeString": "struct LibRunnerDetail.RunnerDetail storage ref"}}, "id": 4713, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "id", "nodeType": "MemberAccess", "referencedDeclaration": 9114, "src": "1283:38:57", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 4714, "name": "LibRunnerRegistry", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9468, "src": "1324:17:57", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_LibRunnerRegistry_$9468_$", "typeString": "type(library LibRunnerRegistry)"}}, "id": 4715, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_mint", "nodeType": "MemberAccess", "referencedDeclaration": 9376, "src": "1324:23:57", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$", "typeString": "function () returns (uint256)"}}, "id": 4716, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1324:25:57", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1283:66:57", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4718, "nodeType": "ExpressionStatement", "src": "1283:66:57"}, {"expression": {"id": 4727, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"expression": {"id": 4719, "name": "s1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4675, "src": "1359:2:57", "typeDescriptions": {"typeIdentifier": "t_struct$_StorageRunnerDetail_$9137_storage_ptr", "typeString": "struct LibRunnerDetail.StorageRunnerDetail storage pointer"}}, "id": 4723, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "runnerToRunnerDetail", "nodeType": "MemberAccess", "referencedDeclaration": 9136, "src": "1359:36:57", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_RunnerDetail_$9131_storage_$", "typeString": "mapping(address => struct LibRunnerDetail.RunnerDetail storage ref)"}}, "id": 4724, "indexExpression": {"expression": {"id": 4721, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "1396:3:57", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 4722, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "1396:10:57", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "1359:48:57", "typeDescriptions": {"typeIdentifier": "t_struct$_RunnerDetail_$9131_storage", "typeString": "struct LibRunnerDetail.RunnerDetail storage ref"}}, "id": 4725, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "maxMetresPerTrip", "nodeType": "MemberAccess", "referencedDeclaration": 9120, "src": "1359:78:57", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 4726, "name": "_maxMetresPerTrip", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4658, "src": "1440:17:57", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1359:98:57", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4728, "nodeType": "ExpressionStatement", "src": "1359:98:57"}, {"eventCall": {"arguments": [{"expression": {"id": 4730, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "1492:3:57", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 4731, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "1492:10:57", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 4729, "name": "RegisteredAsRunner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4655, "src": "1473:18:57", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$", "typeString": "function (address)"}}, "id": 4732, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1473:30:57", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4733, "nodeType": "EmitStatement", "src": "1468:35:57"}]}, "documentation": {"id": 4656, "nodeType": "StructuredDocumentation", "src": "467:195:57", "text": " registerRunner registers approved applicants (has passed background check)\n @param _maxMetresPerTrip | unit in metre\n @custom:event RegisteredAsRunner"}, "functionSelector": "3a16dbe9", "id": 4735, "implemented": true, "kind": "function", "modifiers": [], "name": "registerAsRunner", "nameLocation": "774:16:57", "nodeType": "FunctionDefinition", "parameters": {"id": 4659, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4658, "mutability": "mutable", "name": "_maxMetresPerTrip", "nameLocation": "799:17:57", "nodeType": "VariableDeclaration", "scope": 4735, "src": "791:25:57", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4657, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "791:7:57", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "790:27:57"}, "returnParameters": {"id": 4660, "nodeType": "ParameterList", "parameters": [], "src": "827:0:57"}, "scope": 4894, "src": "765:745:57", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"anonymous": false, "id": 4741, "name": "MaxMetresUpdated", "nameLocation": "1522:16:57", "nodeType": "EventDefinition", "parameters": {"id": 4740, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4737, "indexed": true, "mutability": "mutable", "name": "sender", "nameLocation": "1555:6:57", "nodeType": "VariableDeclaration", "scope": 4741, "src": "1539:22:57", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4736, "name": "address", "nodeType": "ElementaryTypeName", "src": "1539:7:57", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 4739, "indexed": false, "mutability": "mutable", "name": "metres", "nameLocation": "1571:6:57", "nodeType": "VariableDeclaration", "scope": 4741, "src": "1563:14:57", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4738, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1563:7:57", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1538:40:57"}, "src": "1516:63:57"}, {"body": {"id": 4775, "nodeType": "Block", "src": "1795:344:57", "statements": [{"expression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 4747, "name": "LibRunnerRegistry", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9468, "src": "1805:17:57", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_LibRunnerRegistry_$9468_$", "typeString": "type(library LibRunnerRegistry)"}}, "id": 4749, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_requireIsRunner", "nodeType": "MemberAccess", "referencedDeclaration": 9329, "src": "1805:34:57", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$__$", "typeString": "function () view"}}, "id": 4750, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1805:36:57", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4751, "nodeType": "ExpressionStatement", "src": "1805:36:57"}, {"expression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 4752, "name": "LibJobBoard", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8607, "src": "1851:11:57", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_LibJobBoard_$8607_$", "typeString": "type(library LibJobBoard)"}}, "id": 4754, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_requireNotActive", "nodeType": "MemberAccess", "referencedDeclaration": 8398, "src": "1851:29:57", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$__$", "typeString": "function () view"}}, "id": 4755, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1851:31:57", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4756, "nodeType": "ExpressionStatement", "src": "1851:31:57"}, {"expression": {"id": 4767, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"expression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 4757, "name": "LibRunnerDetail", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9282, "src": "1922:15:57", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_LibRunnerDetail_$9282_$", "typeString": "type(library LibRunnerDetail)"}}, "id": 4759, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_storageRunnerDetail", "nodeType": "MemberAccess", "referencedDeclaration": 9149, "src": "1922:49:57", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_StorageRunnerDetail_$9137_storage_ptr_$", "typeString": "function () pure returns (struct LibRunnerDetail.StorageRunnerDetail storage pointer)"}}, "id": 4760, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1922:51:57", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_StorageRunnerDetail_$9137_storage_ptr", "typeString": "struct LibRunnerDetail.StorageRunnerDetail storage pointer"}}, "id": 4761, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "runnerToRunnerDetail", "nodeType": "MemberAccess", "referencedDeclaration": 9136, "src": "1922:85:57", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_RunnerDetail_$9131_storage_$", "typeString": "mapping(address => struct LibRunnerDetail.RunnerDetail storage ref)"}}, "id": 4764, "indexExpression": {"expression": {"id": 4762, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2008:3:57", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 4763, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "2008:10:57", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "1922:97:57", "typeDescriptions": {"typeIdentifier": "t_struct$_RunnerDetail_$9131_storage", "typeString": "struct LibRunnerDetail.RunnerDetail storage ref"}}, "id": 4765, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "maxMetresPerTrip", "nodeType": "MemberAccess", "referencedDeclaration": 9120, "src": "1922:127:57", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 4766, "name": "_maxMetresPerTrip", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4744, "src": "2052:17:57", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1922:147:57", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4768, "nodeType": "ExpressionStatement", "src": "1922:147:57"}, {"eventCall": {"arguments": [{"expression": {"id": 4770, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2102:3:57", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 4771, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "2102:10:57", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 4772, "name": "_maxMetresPerTrip", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4744, "src": "2114:17:57", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 4769, "name": "MaxMetresUpdated", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4741, "src": "2085:16:57", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 4773, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2085:47:57", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4774, "nodeType": "EmitStatement", "src": "2080:52:57"}]}, "documentation": {"id": 4742, "nodeType": "StructuredDocumentation", "src": "1585:137:57", "text": " updateMaxMetresPerTrip updates maximum metre per trip of runner\n @param _maxMetresPerTrip | unit in metre"}, "functionSelector": "eacd7883", "id": 4776, "implemented": true, "kind": "function", "modifiers": [], "name": "updateMaxMetresPerTrip", "nameLocation": "1736:22:57", "nodeType": "FunctionDefinition", "parameters": {"id": 4745, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4744, "mutability": "mutable", "name": "_maxMetresPerTrip", "nameLocation": "1767:17:57", "nodeType": "VariableDeclaration", "scope": 4776, "src": "1759:25:57", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4743, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1759:7:57", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1758:27:57"}, "returnParameters": {"id": 4746, "nodeType": "ParameterList", "parameters": [], "src": "1795:0:57"}, "scope": 4894, "src": "1727:412:57", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 4799, "nodeType": "Block", "src": "2217:168:57", "statements": [{"expression": {"arguments": [{"expression": {"id": 4786, "name": "LibAccessControl", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9758, "src": "2261:16:57", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_LibAccessControl_$9758_$", "typeString": "type(library LibAccessControl)"}}, "id": 4787, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "HIVE_ROLE", "nodeType": "MemberAccess", "referencedDeclaration": 9503, "src": "2261:26:57", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 4783, "name": "LibAccessControl", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9758, "src": "2227:16:57", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_LibAccessControl_$9758_$", "typeString": "type(library LibAccessControl)"}}, "id": 4785, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_requireOnlyRole", "nodeType": "MemberAccess", "referencedDeclaration": 9538, "src": "2227:33:57", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$", "typeString": "function (bytes32) view"}}, "id": 4788, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2227:61:57", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4789, "nodeType": "ExpressionStatement", "src": "2227:61:57"}, {"expression": {"arguments": [{"id": 4793, "name": "_runner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4778, "src": "2352:7:57", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 4794, "name": "_uri", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4780, "src": "2361:4:57", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, {"expression": {"id": 4795, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2367:3:57", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 4796, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "2367:10:57", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}, {"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 4790, "name": "LibRunnerRegistry", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9468, "src": "2316:17:57", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_LibRunnerRegistry_$9468_$", "typeString": "type(library LibRunnerRegistry)"}}, "id": 4792, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_approveApplicant", "nodeType": "MemberAccess", "referencedDeclaration": 9467, "src": "2316:35:57", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_string_memory_ptr_$_t_address_$returns$__$", "typeString": "function (address,string memory,address)"}}, "id": 4797, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2316:62:57", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4798, "nodeType": "ExpressionStatement", "src": "2316:62:57"}]}, "functionSelector": "72c23df2", "id": 4800, "implemented": true, "kind": "function", "modifiers": [], "name": "approveApplicant", "nameLocation": "2154:16:57", "nodeType": "FunctionDefinition", "parameters": {"id": 4781, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4778, "mutability": "mutable", "name": "_runner", "nameLocation": "2179:7:57", "nodeType": "VariableDeclaration", "scope": 4800, "src": "2171:15:57", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4777, "name": "address", "nodeType": "ElementaryTypeName", "src": "2171:7:57", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 4780, "mutability": "mutable", "name": "_uri", "nameLocation": "2202:4:57", "nodeType": "VariableDeclaration", "scope": 4800, "src": "2188:18:57", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 4779, "name": "string", "nodeType": "ElementaryTypeName", "src": "2188:6:57", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "2170:37:57"}, "returnParameters": {"id": 4782, "nodeType": "ParameterList", "parameters": [], "src": "2217:0:57"}, "scope": 4894, "src": "2145:240:57", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 4825, "nodeType": "Block", "src": "2492:224:57", "statements": [{"expression": {"arguments": [{"expression": {"id": 4810, "name": "LibAccessControl", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9758, "src": "2536:16:57", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_LibAccessControl_$9758_$", "typeString": "type(library LibAccessControl)"}}, "id": 4811, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "HIVE_ROLE", "nodeType": "MemberAccess", "referencedDeclaration": 9503, "src": "2536:26:57", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 4807, "name": "LibAccessControl", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9758, "src": "2502:16:57", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_LibAccessControl_$9758_$", "typeString": "type(library LibAccessControl)"}}, "id": 4809, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_requireOnlyRole", "nodeType": "MemberAccess", "referencedDeclaration": 9538, "src": "2502:33:57", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$", "typeString": "function (bytes32) view"}}, "id": 4812, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2502:61:57", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4813, "nodeType": "ExpressionStatement", "src": "2502:61:57"}, {"expression": {"id": 4823, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"expression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 4814, "name": "LibRunnerDetail", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9282, "src": "2591:15:57", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_LibRunnerDetail_$9282_$", "typeString": "type(library LibRunnerDetail)"}}, "id": 4816, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_storageRunnerDetail", "nodeType": "MemberAccess", "referencedDeclaration": 9149, "src": "2591:49:57", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_StorageRunnerDetail_$9137_storage_ptr_$", "typeString": "function () pure returns (struct LibRunnerDetail.StorageRunnerDetail storage pointer)"}}, "id": 4817, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2591:51:57", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_StorageRunnerDetail_$9137_storage_ptr", "typeString": "struct LibRunnerDetail.StorageRunnerDetail storage pointer"}}, "id": 4818, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "runnerToRunnerDetail", "nodeType": "MemberAccess", "referencedDeclaration": 9136, "src": "2591:85:57", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_RunnerDetail_$9131_storage_$", "typeString": "mapping(address => struct LibRunnerDetail.RunnerDetail storage ref)"}}, "id": 4820, "indexExpression": {"id": 4819, "name": "_runner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4802, "src": "2677:7:57", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "2591:94:57", "typeDescriptions": {"typeIdentifier": "t_struct$_RunnerDetail_$9131_storage", "typeString": "struct LibRunnerDetail.RunnerDetail storage ref"}}, "id": 4821, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "uri", "nodeType": "MemberAccess", "referencedDeclaration": 9116, "src": "2591:111:57", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 4822, "name": "_uri", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4804, "src": "2705:4:57", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "src": "2591:118:57", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "id": 4824, "nodeType": "ExpressionStatement", "src": "2591:118:57"}]}, "functionSelector": "29d317e4", "id": 4826, "implemented": true, "kind": "function", "modifiers": [], "name": "resetURI", "nameLocation": "2437:8:57", "nodeType": "FunctionDefinition", "parameters": {"id": 4805, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4802, "mutability": "mutable", "name": "_runner", "nameLocation": "2454:7:57", "nodeType": "VariableDeclaration", "scope": 4826, "src": "2446:15:57", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4801, "name": "address", "nodeType": "ElementaryTypeName", "src": "2446:7:57", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 4804, "mutability": "mutable", "name": "_uri", "nameLocation": "2477:4:57", "nodeType": "VariableDeclaration", "scope": 4826, "src": "2463:18:57", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 4803, "name": "string", "nodeType": "ElementaryTypeName", "src": "2463:6:57", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "2445:37:57"}, "returnParameters": {"id": 4806, "nodeType": "ParameterList", "parameters": [], "src": "2492:0:57"}, "scope": 4894, "src": "2428:288:57", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"anonymous": false, "id": 4832, "name": "LeftHive", "nameLocation": "2728:8:57", "nodeType": "EventDefinition", "parameters": {"id": 4831, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4828, "indexed": true, "mutability": "mutable", "name": "sender", "nameLocation": "2753:6:57", "nodeType": "VariableDeclaration", "scope": 4832, "src": "2737:22:57", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4827, "name": "address", "nodeType": "ElementaryTypeName", "src": "2737:7:57", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 4830, "indexed": false, "mutability": "mutable", "name": "hive", "nameLocation": "2769:4:57", "nodeType": "VariableDeclaration", "scope": 4832, "src": "2761:12:57", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4829, "name": "address", "nodeType": "ElementaryTypeName", "src": "2761:7:57", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "2736:38:57"}, "src": "2722:53:57"}, {"body": {"id": 4892, "nodeType": "Block", "src": "2811:482:57", "statements": [{"expression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 4835, "name": "LibRunnerRegistry", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9468, "src": "2821:17:57", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_LibRunnerRegistry_$9468_$", "typeString": "type(library LibRunnerRegistry)"}}, "id": 4837, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_requireIsRunner", "nodeType": "MemberAccess", "referencedDeclaration": 9329, "src": "2821:34:57", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$__$", "typeString": "function () view"}}, "id": 4838, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2821:36:57", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4839, "nodeType": "ExpressionStatement", "src": "2821:36:57"}, {"expression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 4840, "name": "LibJobBoard", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8607, "src": "2867:11:57", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_LibJobBoard_$8607_$", "typeString": "type(library LibJobBoard)"}}, "id": 4842, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_requireNotActive", "nodeType": "MemberAccess", "referencedDeclaration": 8398, "src": "2867:29:57", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$__$", "typeString": "function () view"}}, "id": 4843, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2867:31:57", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4844, "nodeType": "ExpressionStatement", "src": "2867:31:57"}, {"assignments": [4849], "declarations": [{"constant": false, "id": 4849, "mutability": "mutable", "name": "s1", "nameLocation": "2983:2:57", "nodeType": "VariableDeclaration", "scope": 4892, "src": "2939:46:57", "stateVariable": false, "storageLocation": "storage", "typeDescriptions": {"typeIdentifier": "t_struct$_StorageRunnerDetail_$9137_storage_ptr", "typeString": "struct LibRunnerDetail.StorageRunnerDetail"}, "typeName": {"id": 4848, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 4847, "name": "LibRunnerDetail.StorageRunnerDetail", "nodeType": "IdentifierPath", "referencedDeclaration": 9137, "src": "2939:35:57"}, "referencedDeclaration": 9137, "src": "2939:35:57", "typeDescriptions": {"typeIdentifier": "t_struct$_StorageRunnerDetail_$9137_storage_ptr", "typeString": "struct LibRunnerDetail.StorageRunnerDetail"}}, "visibility": "internal"}], "id": 4853, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 4850, "name": "LibRunnerDetail", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9282, "src": "2988:15:57", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_LibRunnerDetail_$9282_$", "typeString": "type(library LibRunnerDetail)"}}, "id": 4851, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_storageRunnerDetail", "nodeType": "MemberAccess", "referencedDeclaration": 9149, "src": "2988:49:57", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_StorageRunnerDetail_$9137_storage_ptr_$", "typeString": "function () pure returns (struct LibRunnerDetail.StorageRunnerDetail storage pointer)"}}, "id": 4852, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2988:51:57", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_StorageRunnerDetail_$9137_storage_ptr", "typeString": "struct LibRunnerDetail.StorageRunnerDetail storage pointer"}}, "nodeType": "VariableDeclarationStatement", "src": "2939:100:57"}, {"assignments": [4855], "declarations": [{"constant": false, "id": 4855, "mutability": "mutable", "name": "hive", "nameLocation": "3058:4:57", "nodeType": "VariableDeclaration", "scope": 4892, "src": "3050:12:57", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4854, "name": "address", "nodeType": "ElementaryTypeName", "src": "3050:7:57", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 4862, "initialValue": {"expression": {"baseExpression": {"expression": {"id": 4856, "name": "s1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4849, "src": "3065:2:57", "typeDescriptions": {"typeIdentifier": "t_struct$_StorageRunnerDetail_$9137_storage_ptr", "typeString": "struct LibRunnerDetail.StorageRunnerDetail storage pointer"}}, "id": 4857, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "runnerToRunnerDetail", "nodeType": "MemberAccess", "referencedDeclaration": 9136, "src": "3065:23:57", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_RunnerDetail_$9131_storage_$", "typeString": "mapping(address => struct LibRunnerDetail.RunnerDetail storage ref)"}}, "id": 4860, "indexExpression": {"expression": {"id": 4858, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "3089:3:57", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 4859, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "3089:10:57", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3065:35:57", "typeDescriptions": {"typeIdentifier": "t_struct$_RunnerDetail_$9131_storage", "typeString": "struct LibRunnerDetail.RunnerDetail storage ref"}}, "id": 4861, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "hive", "nodeType": "MemberAccess", "referencedDeclaration": 9118, "src": "3065:40:57", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "3050:55:57"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 4869, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 4864, "name": "hive", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4855, "src": "3123:4:57", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 4867, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3139:1:57", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 4866, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3131:7:57", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 4865, "name": "address", "nodeType": "ElementaryTypeName", "src": "3131:7:57", "typeDescriptions": {}}}, "id": 4868, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3131:10:57", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "3123:18:57", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "52756e6e657252656769737472793a2063616c6c6572206e6f7420696e2068697665", "id": 4870, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3143:36:57", "typeDescriptions": {"typeIdentifier": "t_stringliteral_92597c7c06c8818bd72836ddc81663797979b9eb5e0df48d35f2971b48ffcf6f", "typeString": "literal_string \"RunnerRegistry: caller not in hive\""}, "value": "RunnerRegistry: caller not in hive"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_92597c7c06c8818bd72836ddc81663797979b9eb5e0df48d35f2971b48ffcf6f", "typeString": "literal_string \"RunnerRegistry: caller not in hive\""}], "id": 4863, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "3115:7:57", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 4871, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3115:65:57", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4872, "nodeType": "ExpressionStatement", "src": "3115:65:57"}, {"expression": {"id": 4884, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"expression": {"id": 4873, "name": "s1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4849, "src": "3191:2:57", "typeDescriptions": {"typeIdentifier": "t_struct$_StorageRunnerDetail_$9137_storage_ptr", "typeString": "struct LibRunnerDetail.StorageRunnerDetail storage pointer"}}, "id": 4877, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "runnerToRunnerDetail", "nodeType": "MemberAccess", "referencedDeclaration": 9136, "src": "3191:23:57", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_RunnerDetail_$9131_storage_$", "typeString": "mapping(address => struct LibRunnerDetail.RunnerDetail storage ref)"}}, "id": 4878, "indexExpression": {"expression": {"id": 4875, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "3215:3:57", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 4876, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "3215:10:57", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3191:35:57", "typeDescriptions": {"typeIdentifier": "t_struct$_RunnerDetail_$9131_storage", "typeString": "struct LibRunnerDetail.RunnerDetail storage ref"}}, "id": 4879, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "hive", "nodeType": "MemberAccess", "referencedDeclaration": 9118, "src": "3191:40:57", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "30", "id": 4882, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3242:1:57", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 4881, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3234:7:57", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 4880, "name": "address", "nodeType": "ElementaryTypeName", "src": "3234:7:57", "typeDescriptions": {}}}, "id": 4883, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3234:10:57", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "3191:53:57", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 4885, "nodeType": "ExpressionStatement", "src": "3191:53:57"}, {"eventCall": {"arguments": [{"expression": {"id": 4887, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "3269:3:57", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 4888, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "3269:10:57", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 4889, "name": "hive", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4855, "src": "3281:4:57", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}], "id": 4886, "name": "LeftHive", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4832, "src": "3260:8:57", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$", "typeString": "function (address,address)"}}, "id": 4890, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3260:26:57", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4891, "nodeType": "EmitStatement", "src": "3255:31:57"}]}, "functionSelector": "d5708b93", "id": 4893, "implemented": true, "kind": "function", "modifiers": [], "name": "leaveHive", "nameLocation": "2790:9:57", "nodeType": "FunctionDefinition", "parameters": {"id": 4833, "nodeType": "ParameterList", "parameters": [], "src": "2799:2:57"}, "returnParameters": {"id": 4834, "nodeType": "ParameterList", "parameters": [], "src": "2811:0:57"}, "scope": 4894, "src": "2781:512:57", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}], "scope": 4895, "src": "361:2934:57", "usedErrors": []}], "src": "36:3260:57"}, "bytecode": "608060405234801561001057600080fd5b50610cad806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806329d317e41461005c5780633a16dbe91461007157806372c23df214610084578063d5708b9314610097578063eacd78831461009f575b600080fd5b61006f61006a3660046109e8565b6100b2565b005b61006f61007f366004610ab2565b61013e565b61006f6100923660046109e8565b61028d565b61006f6102cc565b61006f6100ad366004610ab2565b6103bf565b6100fd6040516020016100e290602080825260099082015268484956455f524f4c4560b81b604082015260600190565b6040516020818303038152906040528051906020012061042a565b6001600160a01b0382166000908152600080516020610c588339815191526020908152604090912082516101399260019092019184019061094f565b505050565b610146610436565b61014e6104ae565b336000908152600080516020610c5883398151915260208190526040909120600101805461017b90610bf0565b151590506101d05760405162461bcd60e51b815260206004820152601b60248201527f52756e6e657252656769737472793a20555249206e6f7420736574000000000060448201526064015b60405180910390fd5b3361021d5760405162461bcd60e51b815260206004820152601c60248201527f52756e6e657252656769737472793a205a65726f20616464726573730000000060448201526064016101c7565b7f34f23ac8dba1b0d420860360c560bb179223090c38ce56fa6655c791ccab58dd805460018101909155336000818152602084905260408082209384556003909301859055915190917ff2ead073c0393ed1b39a7c8486f4adf47175ea04f492607f4c547f05bb5328dd91a25050565b6102bd6040516020016100e290602080825260099082015268484956455f524f4c4560b81b604082015260600190565b6102c882823361052a565b5050565b6102d4610654565b6102dc6104ae565b336000908152600080516020610c5883398151915260208190526040909120600201546001600160a01b0316806103605760405162461bcd60e51b815260206004820152602260248201527f52756e6e657252656769737472793a2063616c6c6572206e6f7420696e206869604482015261766560f01b60648201526084016101c7565b336000818152602084815260409182902060020180546001600160a01b031916905590516001600160a01b03841681527f1aa8f3d5ecdb1ef733edff597610b58eae2965ad6ea2284e24098ecfd487c886910160405180910390a25050565b6103c7610654565b6103cf6104ae565b80600080516020610c5883398151915233600081815260209283526040908190206003019390935591518381527faef18a1f27cea243ef8b5c93390f8949553fbbdc3ff5cc6ac21f70196b2fa1dd910160405180910390a250565b610433816106c9565b50565b336000908152600080516020610c588339815191526020526040902054156104ac5760405162461bcd60e51b815260206004820152602360248201527f4c696252756e6e657252656769737472793a2063616c6c65722069732072756e6044820152623732b960e91b60648201526084016101c7565b565b3360009081527fe79924097ccc2e2b47e332de4c30d72abc5a8153cca3b67cc7a0f5258cd81de96020526040902054156104ac5760405162461bcd60e51b815260206004820152601d60248201527f4c69624a6f62426f6172643a2063616c6c65722069732061637469766500000060448201526064016101c7565b6001600160a01b038381166000908152600080516020610c588339815191526020819052604090912060020154909116156105bb5760405162461bcd60e51b815260206004820152602b60248201527f4c696252756e6e657252656769737472793a206869766520657869737420666f60448201526a1c88185c1c1b1a58d85b9d60aa1b60648201526084016101c7565b6001600160a01b03841660009081526020828152604090912084516105e89260019092019186019061094f565b506001600160a01b038481166000818152602084815260409182902060020180546001600160a01b031916948716949094179093555190815233917f7d3d460ae2321c55dd17ca0374131d12b043780b662e61564b5c62ed6958218c910160405180910390a250505050565b336000908152600080516020610c5883398151915260205260409020546104ac5760405162461bcd60e51b8152602060048201526024808201527f4c696252756e6e657252656769737472793a2063616c6c6572206e6f74207275604482015263373732b960e11b60648201526084016101c7565b60008181527f4cd15452b25e815d3f9d1a3c7edd985a178edf5eb3461a1acbf855517423d694602090815260408083203380855292529091205461043391839160ff166102c857610724816001600160a01b03166014610766565b61072f836020610766565b604051602001610740929190610aca565b60408051601f198184030181529082905262461bcd60e51b82526101c791600401610b3f565b60606000610775836002610b8a565b610780906002610b72565b67ffffffffffffffff8111156107a657634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156107d0576020820181803683370190505b509050600360fc1b816000815181106107f957634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061083657634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600061085a846002610b8a565b610865906001610b72565b90505b60018111156108f9576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106108a757634e487b7160e01b600052603260045260246000fd5b1a60f81b8282815181106108cb57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c936108f281610bd9565b9050610868565b5083156109485760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016101c7565b9392505050565b82805461095b90610bf0565b90600052602060002090601f01602090048101928261097d57600085556109c3565b82601f1061099657805160ff19168380011785556109c3565b828001600101855582156109c3579182015b828111156109c35782518255916020019190600101906109a8565b506109cf9291506109d3565b5090565b5b808211156109cf57600081556001016109d4565b600080604083850312156109fa578182fd5b82356001600160a01b0381168114610a10578283fd5b9150602083013567ffffffffffffffff80821115610a2c578283fd5b818501915085601f830112610a3f578283fd5b813581811115610a5157610a51610c41565b604051601f8201601f19908116603f01168101908382118183101715610a7957610a79610c41565b81604052828152886020848701011115610a91578586fd5b82602086016020830137856020848301015280955050505050509250929050565b600060208284031215610ac3578081fd5b5035919050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351610b02816017850160208801610ba9565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351610b33816028840160208801610ba9565b01602801949350505050565b6020815260008251806020840152610b5e816040850160208701610ba9565b601f01601f19169190910160400192915050565b60008219821115610b8557610b85610c2b565b500190565b6000816000190483118215151615610ba457610ba4610c2b565b500290565b60005b83811015610bc4578181015183820152602001610bac565b83811115610bd3576000848401525b50505050565b600081610be857610be8610c2b565b506000190190565b600181811c90821680610c0457607f821691505b60208210811415610c2557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfec7ddcdc008a4787bc0ebc7e57c6de87615ae1cb780f671ab25bfdfbd9cc9ce62a264697066735822122053ab9c150c6860bff39e606aef020908cf9657682cad47963a52a2d71e64d7fd64736f6c63430008040033", "bytecodeSha1": "90893ab70351f651c9f343e184c87d3ac592a798", "compiler": {"evm_version": "istanbul", "optimizer": {"enabled": true, "runs": 200}, "version": "0.8.4+commit.c7e474f2"}, "contractName": "RunnerRegistry", "coverageMap": {"branches": {"24": {}, "25": {"Strings.toHexString": {"44": [1944, 1954, true]}}, "57": {"RunnerRegistry.registerAsRunner": {"40": [1086, 1144, true]}}, "61": {}, "70": {"LibJobBoard._requireNotActive": {"41": [1479, 1531, true]}}, "72": {}, "73": {}, "76": {}, "77": {"LibRunnerRegistry._approveApplicant": {"43": [2287, 2338, true]}, "LibRunnerRegistry._requireNotRunner": {"42": [1005, 1135, true]}}, "78": {}}, "statements": {"24": {"Counters.current": {"6": [911, 932]}, "Counters.increment": {"7": [1032, 1051]}}, "25": {"Strings.toHexString": {"33": [1745, 1760], "34": [1770, 1785], "35": [1854, 1891], "36": [1905, 1916], "37": [1835, 1838], "38": [1936, 1991], "39": [2001, 2022]}}, "57": {"RunnerRegistry.approveApplicant": {"11": [2227, 2288], "12": [2316, 2378]}, "RunnerRegistry.leaveHive": {"13": [2821, 2857], "14": [2867, 2898], "15": [3115, 3180], "16": [3191, 3244], "17": [3255, 3286]}, "RunnerRegistry.registerAsRunner": {"2": [837, 874], "3": [884, 915], "4": [1065, 1197], "5": [1207, 1272], "8": [1283, 1349], "9": [1359, 1457], "10": [1468, 1503]}, "RunnerRegistry.resetURI": {"0": [2502, 2563], "1": [2591, 2709]}, "RunnerRegistry.updateMaxMetresPerTrip": {"18": [1805, 1841], "19": [1851, 1882], "20": [1922, 2069], "21": [2080, 2132]}}, "61": {}, "70": {"LibJobBoard._requireNotActive": {"24": [1458, 1586]}}, "72": {}, "73": {}, "76": {}, "77": {"LibRunnerRegistry._approveApplicant": {"25": [2266, 2407], "26": [2417, 2460], "27": [2526, 2579], "28": [2706, 2749]}, "LibRunnerRegistry._requireIsRunner": {"29": [705, 918]}, "LibRunnerRegistry._requireNotRunner": {"23": [984, 1196]}}, "78": {"LibAccessControl._checkRole": {"31": [1376, 1405], "32": [1541, 1892]}, "LibAccessControl._hasRole": {"30": [1243, 1304]}, "LibAccessControl._requireOnlyRole": {"22": [1095, 1112]}}}}, "dependencies": ["OpenZeppelin/openzeppelin-contracts@4.5.0/Counters", "IHubLibraryEvents", "LibAccessControl", "LibJobBoard", "LibRater", "LibRequester", "LibRunnerDetail", "LibRunnerRegistry", "OpenZeppelin/openzeppelin-contracts@4.5.0/Strings"], "deployedBytecode": "608060405234801561001057600080fd5b50600436106100575760003560e01c806329d317e41461005c5780633a16dbe91461007157806372c23df214610084578063d5708b9314610097578063eacd78831461009f575b600080fd5b61006f61006a3660046109e8565b6100b2565b005b61006f61007f366004610ab2565b61013e565b61006f6100923660046109e8565b61028d565b61006f6102cc565b61006f6100ad366004610ab2565b6103bf565b6100fd6040516020016100e290602080825260099082015268484956455f524f4c4560b81b604082015260600190565b6040516020818303038152906040528051906020012061042a565b6001600160a01b0382166000908152600080516020610c588339815191526020908152604090912082516101399260019092019184019061094f565b505050565b610146610436565b61014e6104ae565b336000908152600080516020610c5883398151915260208190526040909120600101805461017b90610bf0565b151590506101d05760405162461bcd60e51b815260206004820152601b60248201527f52756e6e657252656769737472793a20555249206e6f7420736574000000000060448201526064015b60405180910390fd5b3361021d5760405162461bcd60e51b815260206004820152601c60248201527f52756e6e657252656769737472793a205a65726f20616464726573730000000060448201526064016101c7565b7f34f23ac8dba1b0d420860360c560bb179223090c38ce56fa6655c791ccab58dd805460018101909155336000818152602084905260408082209384556003909301859055915190917ff2ead073c0393ed1b39a7c8486f4adf47175ea04f492607f4c547f05bb5328dd91a25050565b6102bd6040516020016100e290602080825260099082015268484956455f524f4c4560b81b604082015260600190565b6102c882823361052a565b5050565b6102d4610654565b6102dc6104ae565b336000908152600080516020610c5883398151915260208190526040909120600201546001600160a01b0316806103605760405162461bcd60e51b815260206004820152602260248201527f52756e6e657252656769737472793a2063616c6c6572206e6f7420696e206869604482015261766560f01b60648201526084016101c7565b336000818152602084815260409182902060020180546001600160a01b031916905590516001600160a01b03841681527f1aa8f3d5ecdb1ef733edff597610b58eae2965ad6ea2284e24098ecfd487c886910160405180910390a25050565b6103c7610654565b6103cf6104ae565b80600080516020610c5883398151915233600081815260209283526040908190206003019390935591518381527faef18a1f27cea243ef8b5c93390f8949553fbbdc3ff5cc6ac21f70196b2fa1dd910160405180910390a250565b610433816106c9565b50565b336000908152600080516020610c588339815191526020526040902054156104ac5760405162461bcd60e51b815260206004820152602360248201527f4c696252756e6e657252656769737472793a2063616c6c65722069732072756e6044820152623732b960e91b60648201526084016101c7565b565b3360009081527fe79924097ccc2e2b47e332de4c30d72abc5a8153cca3b67cc7a0f5258cd81de96020526040902054156104ac5760405162461bcd60e51b815260206004820152601d60248201527f4c69624a6f62426f6172643a2063616c6c65722069732061637469766500000060448201526064016101c7565b6001600160a01b038381166000908152600080516020610c588339815191526020819052604090912060020154909116156105bb5760405162461bcd60e51b815260206004820152602b60248201527f4c696252756e6e657252656769737472793a206869766520657869737420666f60448201526a1c88185c1c1b1a58d85b9d60aa1b60648201526084016101c7565b6001600160a01b03841660009081526020828152604090912084516105e89260019092019186019061094f565b506001600160a01b038481166000818152602084815260409182902060020180546001600160a01b031916948716949094179093555190815233917f7d3d460ae2321c55dd17ca0374131d12b043780b662e61564b5c62ed6958218c910160405180910390a250505050565b336000908152600080516020610c5883398151915260205260409020546104ac5760405162461bcd60e51b8152602060048201526024808201527f4c696252756e6e657252656769737472793a2063616c6c6572206e6f74207275604482015263373732b960e11b60648201526084016101c7565b60008181527f4cd15452b25e815d3f9d1a3c7edd985a178edf5eb3461a1acbf855517423d694602090815260408083203380855292529091205461043391839160ff166102c857610724816001600160a01b03166014610766565b61072f836020610766565b604051602001610740929190610aca565b60408051601f198184030181529082905262461bcd60e51b82526101c791600401610b3f565b60606000610775836002610b8a565b610780906002610b72565b67ffffffffffffffff8111156107a657634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156107d0576020820181803683370190505b509050600360fc1b816000815181106107f957634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061083657634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600061085a846002610b8a565b610865906001610b72565b90505b60018111156108f9576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106108a757634e487b7160e01b600052603260045260246000fd5b1a60f81b8282815181106108cb57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c936108f281610bd9565b9050610868565b5083156109485760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016101c7565b9392505050565b82805461095b90610bf0565b90600052602060002090601f01602090048101928261097d57600085556109c3565b82601f1061099657805160ff19168380011785556109c3565b828001600101855582156109c3579182015b828111156109c35782518255916020019190600101906109a8565b506109cf9291506109d3565b5090565b5b808211156109cf57600081556001016109d4565b600080604083850312156109fa578182fd5b82356001600160a01b0381168114610a10578283fd5b9150602083013567ffffffffffffffff80821115610a2c578283fd5b818501915085601f830112610a3f578283fd5b813581811115610a5157610a51610c41565b604051601f8201601f19908116603f01168101908382118183101715610a7957610a79610c41565b81604052828152886020848701011115610a91578586fd5b82602086016020830137856020848301015280955050505050509250929050565b600060208284031215610ac3578081fd5b5035919050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351610b02816017850160208801610ba9565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351610b33816028840160208801610ba9565b01602801949350505050565b6020815260008251806020840152610b5e816040850160208701610ba9565b601f01601f19169190910160400192915050565b60008219821115610b8557610b85610c2b565b500190565b6000816000190483118215151615610ba457610ba4610c2b565b500290565b60005b83811015610bc4578181015183820152602001610bac565b83811115610bd3576000848401525b50505050565b600081610be857610be8610c2b565b506000190190565b600181811c90821680610c0457607f821691505b60208210811415610c2557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfec7ddcdc008a4787bc0ebc7e57c6de87615ae1cb780f671ab25bfdfbd9cc9ce62a264697066735822122053ab9c150c6860bff39e606aef020908cf9657682cad47963a52a2d71e64d7fd64736f6c63430008040033", "deployedSourceMap": "361:2934:57:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2428:288;;;;;;:::i;:::-;;:::i;:::-;;765:745;;;;;;:::i;:::-;;:::i;2145:240::-;;;;;;:::i;:::-;;:::i;2781:512::-;;;:::i;1727:412::-;;;;;;:::i;:::-;;:::i;2428:288::-;2502:61;488:23:78;;;;;;4030:2:133;4012:21;;;4069:1;4049:18;;;4042:29;-1:-1:-1;;;4102:2:133;4087:18;;4080:39;4151:2;4136:18;;4002:158;488:23:78;;;;;;;;;;;;;478:34;;;;;;2502:33:57;:61::i;:::-;-1:-1:-1;;;;;2591:94:57;;:85;:94;;;-1:-1:-1;;;;;;;;;;;2591:94:57;;;;;;;;:118;;;;:111;;;;;:118;;;;:::i;:::-;;2428:288;;:::o;765:745::-;837:37;:35;:37::i;:::-;884:31;:29;:31::i;:::-;1116:10;955:46;1092:35;;;-1:-1:-1;;;;;;;;;;;1092:35:57;;;;;;;;:39;;1086:53;;;;;:::i;:::-;:58;;;-1:-1:-1;1065:132:57;;;;-1:-1:-1;;;1065:132:57;;4770:2:133;1065:132:57;;;4752:21:133;4809:2;4789:18;;;4782:30;4848:29;4828:18;;;4821:57;4895:18;;1065:132:57;;;;;;;;;1215:10;1207:65;;;;-1:-1:-1;;;1207:65:57;;3315:2:133;1207:65:57;;;3297:21:133;3354:2;3334:18;;;3327:30;3393;3373:18;;;3366:58;3441:18;;1207:65:57;3287:178:133;1207:65:57;280:30:77;918:14:24;;1050:1;1032:19;;;;;1307:10:57;1283:23;:35;;;;;;;;;;;:66;;;1359:78;;;;:98;;;1473:30;;1307:10;;1473:30;;;765:745;;:::o;2145:240::-;2227:61;488:23:78;;;;;;4030:2:133;4012:21;;;4069:1;4049:18;;;4042:29;-1:-1:-1;;;4102:2:133;4087:18;;4080:39;4151:2;4136:18;;4002:158;2227:61:57;2316:62;2352:7;2361:4;2367:10;2316:35;:62::i;:::-;2145:240;;:::o;2781:512::-;2821:36;:34;:36::i;:::-;2867:31;:29;:31::i;:::-;3089:10;2939:46;3065:35;;;-1:-1:-1;;;;;;;;;;;3065:35:57;;;;;;;;:40;;;-1:-1:-1;;;;;3065:40:57;;3115:65;;;;-1:-1:-1;;;3115:65:57;;4367:2:133;3115:65:57;;;4349:21:133;4406:2;4386:18;;;4379:30;4445:34;4425:18;;;4418:62;-1:-1:-1;;;4496:18:133;;;4489:32;4538:19;;3115:65:57;4339:224:133;3115:65:57;3215:10;3242:1;3191:35;;;;;;;;;;;;:40;;:53;;-1:-1:-1;;;;;;3191:53:57;;;3260:26;;-1:-1:-1;;;;;2320:32:133;;2302:51;;3260:26:57;;2275:18:133;3260:26:57;;;;;;;2781:512;;:::o;1727:412::-;1805:36;:34;:36::i;:::-;1851:31;:29;:31::i;:::-;2052:17;-1:-1:-1;;;;;;;;;;;2008:10:57;1922:85;:97;;;;;;;;;;;;:127;;:147;;;;2085:47;;6291:25:133;;;2085:47:57;;6264:18:133;2085:47:57;;;;;;;1727:412;:::o;1030:89:78:-;1095:17;1106:5;1095:10;:17::i;:::-;1030:89;:::o;931:272:77:-;1099:10;1005:93;:105;;;-1:-1:-1;;;;;;;;;;;1005:105:77;;;;;:125;:130;984:212;;;;-1:-1:-1;;;984:212:77;;5943:2:133;984:212:77;;;5925:21:133;5982:2;5962:18;;;5955:30;6021:34;6001:18;;;5994:62;-1:-1:-1;;;6072:18:133;;;6065:33;6115:19;;984:212:77;5915:225:133;984:212:77;931:272::o;1405:188:70:-;1515:10;1479:47;;;;:35;:47;;;;;;:52;1458:128;;;;-1:-1:-1;;;1458:128:70;;3672:2:133;1458:128:70;;;3654:21:133;3711:2;3691:18;;;3684:30;3750:31;3730:18;;;3723:59;3799:18;;1458:128:70;3644:179:133;2019:737:77;-1:-1:-1;;;;;2287:32:77;;;2155:46;2287:32;;;-1:-1:-1;;;;;;;;;;;2287:32:77;;;;;;;;:37;;;227:28:76;;2287:37:77;:51;2266:141;;;;-1:-1:-1;;;2266:141:77;;5531:2:133;2266:141:77;;;5513:21:133;5570:2;5550:18;;;5543:30;5609:34;5589:18;;;5582:62;-1:-1:-1;;;5660:18:133;;;5653:41;5711:19;;2266:141:77;5503:233:133;2266:141:77;-1:-1:-1;;;;;2417:32:77;;:23;:32;;;;;;;;;;;:43;;;;:36;;;;;:43;;;;:::i;:::-;-1:-1:-1;;;;;;2526:32:77;;;:23;:32;;;;;;;;;;;;:37;;:53;;-1:-1:-1;;;;;;2526:53:77;;;;;;;;;;;2711:38;2302:51:133;;;2729:10:77;;2711:38;;2275:18:133;2711:38:77;;;;;;;2019:737;;;;:::o;653:272::-;820:10;726:93;:105;;;-1:-1:-1;;;;;;;;;;;726:105:77;;;;;:125;705:213;;;;-1:-1:-1;;;705:213:77;;5126:2:133;705:213:77;;;5108:21:133;5165:2;5145:18;;;5138:30;5204:34;5184:18;;;5177:62;-1:-1:-1;;;5255:18:133;;;5248:34;5299:19;;705:213:77;5098:226:133;1317:95:78;1223:4;1250:36;;;203:29;1250:36;;;;;;;;1394:10;1250:54;;;;;;;;;1376:29;;1387:5;;1250:54;;1495:408;;1686:42;1714:8;-1:-1:-1;;;;;1686:42:78;1725:2;1686:19;:42::i;:::-;1799:39;1827:5;1835:2;1799:19;:39::i;:::-;1593:267;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1593:267:78;;;;;;;;;;-1:-1:-1;;;1541:351:78;;;;;;;:::i;1588:441:25:-;1663:13;1688:19;1720:10;1724:6;1720:1;:10;:::i;:::-;:14;;1733:1;1720:14;:::i;:::-;1710:25;;;;;;-1:-1:-1;;;1710:25:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1710:25:25;;1688:47;;-1:-1:-1;;;1745:6:25;1752:1;1745:9;;;;;;-1:-1:-1;;;1745:9:25;;;;;;;;;;;;:15;-1:-1:-1;;;;;1745:15:25;;;;;;;;;-1:-1:-1;;;1770:6:25;1777:1;1770:9;;;;;;-1:-1:-1;;;1770:9:25;;;;;;;;;;;;:15;-1:-1:-1;;;;;1770:15:25;;;;;;;;-1:-1:-1;1800:9:25;1812:10;1816:6;1812:1;:10;:::i;:::-;:14;;1825:1;1812:14;:::i;:::-;1800:26;;1795:132;1832:1;1828;:5;1795:132;;;-1:-1:-1;;;1879:5:25;1887:3;1879:11;1866:25;;;;;-1:-1:-1;;;1866:25:25;;;;;;;;;;;;1854:6;1861:1;1854:9;;;;;;-1:-1:-1;;;1854:9:25;;;;;;;;;;;;:37;-1:-1:-1;;;;;1854:37:25;;;;;;;;-1:-1:-1;1915:1:25;1905:11;;;;;1835:3;;;:::i;:::-;;;1795:132;;;-1:-1:-1;1944:10:25;;1936:55;;;;-1:-1:-1;;;1936:55:25;;2954:2:133;1936:55:25;;;2936:21:133;;;2973:18;;;2966:30;3032:34;3012:18;;;3005:62;3084:18;;1936:55:25;2926:182:133;1936:55:25;2015:6;1588:441;-1:-1:-1;;;1588:441:25:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:1151:133;92:6;100;153:2;141:9;132:7;128:23;124:32;121:2;;;174:6;166;159:22;121:2;205:23;;-1:-1:-1;;;;;257:31:133;;247:42;;237:2;;308:6;300;293:22;237:2;336:5;-1:-1:-1;392:2:133;377:18;;364:32;415:18;445:14;;;442:2;;;477:6;469;462:22;442:2;520:6;509:9;505:22;495:32;;565:7;558:4;554:2;550:13;546:27;536:2;;592:6;584;577:22;536:2;633;620:16;655:2;651;648:10;645:2;;;661:18;;:::i;:::-;736:2;730:9;704:2;790:13;;-1:-1:-1;;786:22:133;;;810:2;782:31;778:40;766:53;;;834:18;;;854:22;;;831:46;828:2;;;880:18;;:::i;:::-;920:10;916:2;909:22;955:2;947:6;940:18;995:7;990:2;985;981;977:11;973:20;970:33;967:2;;;1021:6;1013;1006:22;967:2;1082;1077;1073;1069:11;1064:2;1056:6;1052:15;1039:46;1127:6;1122:2;1117;1109:6;1105:15;1101:24;1094:40;1153:6;1143:16;;;;;;;111:1054;;;;;:::o;1170:190::-;1229:6;1282:2;1270:9;1261:7;1257:23;1253:32;1250:2;;;1303:6;1295;1288:22;1250:2;-1:-1:-1;1331:23:133;;1240:120;-1:-1:-1;1240:120:133:o;1365:786::-;1776:25;1771:3;1764:38;1746:3;1831:6;1825:13;1847:62;1902:6;1897:2;1892:3;1888:12;1881:4;1873:6;1869:17;1847:62;:::i;:::-;-1:-1:-1;;;1968:2:133;1928:16;;;1960:11;;;1953:40;2018:13;;2040:63;2018:13;2089:2;2081:11;;2074:4;2062:17;;2040:63;:::i;:::-;2123:17;2142:2;2119:26;;1754:397;-1:-1:-1;;;;1754:397:133:o;2364:383::-;2513:2;2502:9;2495:21;2476:4;2545:6;2539:13;2588:6;2583:2;2572:9;2568:18;2561:34;2604:66;2663:6;2658:2;2647:9;2643:18;2638:2;2630:6;2626:15;2604:66;:::i;:::-;2731:2;2710:15;-1:-1:-1;;2706:29:133;2691:45;;;;2738:2;2687:54;;2485:262;-1:-1:-1;;2485:262:133:o;6327:128::-;6367:3;6398:1;6394:6;6391:1;6388:13;6385:2;;;6404:18;;:::i;:::-;-1:-1:-1;6440:9:133;;6375:80::o;6460:168::-;6500:7;6566:1;6562;6558:6;6554:14;6551:1;6548:21;6543:1;6536:9;6529:17;6525:45;6522:2;;;6573:18;;:::i;:::-;-1:-1:-1;6613:9:133;;6512:116::o;6633:258::-;6705:1;6715:113;6729:6;6726:1;6723:13;6715:113;;;6805:11;;;6799:18;6786:11;;;6779:39;6751:2;6744:10;6715:113;;;6846:6;6843:1;6840:13;6837:2;;;6881:1;6872:6;6867:3;6863:16;6856:27;6837:2;;6686:205;;;:::o;6896:136::-;6935:3;6963:5;6953:2;;6972:18;;:::i;:::-;-1:-1:-1;;;7008:18:133;;6943:89::o;7037:380::-;7116:1;7112:12;;;;7159;;;7180:2;;7234:4;7226:6;7222:17;7212:27;;7180:2;7287;7279:6;7276:14;7256:18;7253:38;7250:2;;;7333:10;7328:3;7324:20;7321:1;7314:31;7368:4;7365:1;7358:15;7396:4;7393:1;7386:15;7250:2;;7092:325;;;:::o;7422:127::-;7483:10;7478:3;7474:20;7471:1;7464:31;7514:4;7511:1;7504:15;7538:4;7535:1;7528:15;7554:127;7615:10;7610:3;7606:20;7603:1;7596:31;7646:4;7643:1;7636:15;7670:4;7667:1;7660:15", "language": "Solidity", "natspec": {"kind": "dev", "methods": {"registerAsRunner(uint256)": {"custom:event": "RegisteredAsRunner", "notice": "registerRunner registers approved applicants (has passed background check)", "params": {"_maxMetresPerTrip": "| unit in metre"}}, "updateMaxMetresPerTrip(uint256)": {"notice": "updateMaxMetresPerTrip updates maximum metre per trip of runner", "params": {"_maxMetresPerTrip": "| unit in metre"}}}, "version": 1}, "offset": [361, 3295], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x29D317E4 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x3A16DBE9 EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x72C23DF2 EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0xD5708B93 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0xEACD7883 EQ PUSH2 0x9F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x9E8 JUMP JUMPDEST PUSH2 0xB2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6F PUSH2 0x7F CALLDATASIZE PUSH1 0x4 PUSH2 0xAB2 JUMP JUMPDEST PUSH2 0x13E JUMP JUMPDEST PUSH2 0x6F PUSH2 0x92 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E8 JUMP JUMPDEST PUSH2 0x28D JUMP JUMPDEST PUSH2 0x6F PUSH2 0x2CC JUMP JUMPDEST PUSH2 0x6F PUSH2 0xAD CALLDATASIZE PUSH1 0x4 PUSH2 0xAB2 JUMP JUMPDEST PUSH2 0x3BF JUMP JUMPDEST PUSH2 0xFD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE2 SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x9 SWAP1 DUP3 ADD MSTORE PUSH9 0x484956455F524F4C45 PUSH1 0xB8 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x42A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xC58 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP3 MLOAD PUSH2 0x139 SWAP3 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 DUP5 ADD SWAP1 PUSH2 0x94F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x146 PUSH2 0x436 JUMP JUMPDEST PUSH2 0x14E PUSH2 0x4AE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xC58 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x17B SWAP1 PUSH2 0xBF0 JUMP JUMPDEST ISZERO ISZERO SWAP1 POP PUSH2 0x1D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52756E6E657252656769737472793A20555249206E6F74207365740000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH2 0x21D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52756E6E657252656769737472793A205A65726F206164647265737300000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1C7 JUMP JUMPDEST PUSH32 0x34F23AC8DBA1B0D420860360C560BB179223090C38CE56FA6655C791CCAB58DD DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP5 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 DUP5 SSTORE PUSH1 0x3 SWAP1 SWAP4 ADD DUP6 SWAP1 SSTORE SWAP2 MLOAD SWAP1 SWAP2 PUSH32 0xF2EAD073C0393ED1B39A7C8486F4ADF47175EA04F492607F4C547F05BB5328DD SWAP2 LOG2 POP POP JUMP JUMPDEST PUSH2 0x2BD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE2 SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x9 SWAP1 DUP3 ADD MSTORE PUSH9 0x484956455F524F4C45 PUSH1 0xB8 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH2 0x2C8 DUP3 DUP3 CALLER PUSH2 0x52A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x2D4 PUSH2 0x654 JUMP JUMPDEST PUSH2 0x2DC PUSH2 0x4AE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xC58 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x360 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52756E6E657252656769737472793A2063616C6C6572206E6F7420696E206869 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7665 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1C7 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP5 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH32 0x1AA8F3D5ECDB1EF733EDFF597610B58EAE2965AD6EA2284E24098ECFD487C886 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x654 JUMP JUMPDEST PUSH2 0x3CF PUSH2 0x4AE JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xC58 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x3 ADD SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD DUP4 DUP2 MSTORE PUSH32 0xAEF18A1F27CEA243EF8B5C93390F8949553FBBDC3FF5CC6AC21F70196B2FA1DD SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x433 DUP2 PUSH2 0x6C9 JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xC58 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x4AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C696252756E6E657252656769737472793A2063616C6C65722069732072756E PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x3732B9 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1C7 JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xE79924097CCC2E2B47E332DE4C30D72ABC5A8153CCA3B67CC7A0F5258CD81DE9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x4AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C69624A6F62426F6172643A2063616C6C657220697320616374697665000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xC58 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 SWAP2 AND ISZERO PUSH2 0x5BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C696252756E6E657252656769737472793A206869766520657869737420666F PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x1C88185C1C1B1A58D85B9D PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP5 MLOAD PUSH2 0x5E8 SWAP3 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 DUP7 ADD SWAP1 PUSH2 0x94F JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP5 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP5 DUP8 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE MLOAD SWAP1 DUP2 MSTORE CALLER SWAP2 PUSH32 0x7D3D460AE2321C55DD17CA0374131D12B043780B662E61564B5C62ED6958218C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xC58 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x4AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4C696252756E6E657252656769737472793A2063616C6C6572206E6F74207275 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x373732B9 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1C7 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x4CD15452B25E815D3F9D1A3C7EDD985A178EDF5EB3461A1ACBF855517423D694 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x433 SWAP2 DUP4 SWAP2 PUSH1 0xFF AND PUSH2 0x2C8 JUMPI PUSH2 0x724 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x14 PUSH2 0x766 JUMP JUMPDEST PUSH2 0x72F DUP4 PUSH1 0x20 PUSH2 0x766 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x740 SWAP3 SWAP2 SWAP1 PUSH2 0xACA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x1C7 SWAP2 PUSH1 0x4 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x775 DUP4 PUSH1 0x2 PUSH2 0xB8A JUMP JUMPDEST PUSH2 0x780 SWAP1 PUSH1 0x2 PUSH2 0xB72 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7A6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x7D0 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x7F9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x836 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x85A DUP5 PUSH1 0x2 PUSH2 0xB8A JUMP JUMPDEST PUSH2 0x865 SWAP1 PUSH1 0x1 PUSH2 0xB72 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x8F9 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x8A7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x8CB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x8F2 DUP2 PUSH2 0xBD9 JUMP JUMPDEST SWAP1 POP PUSH2 0x868 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x948 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1C7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x95B SWAP1 PUSH2 0xBF0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x97D JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x9C3 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x996 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x9C3 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x9C3 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x9C3 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x9A8 JUMP JUMPDEST POP PUSH2 0x9CF SWAP3 SWAP2 POP PUSH2 0x9D3 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x9CF JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9FA JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA10 JUMPI DUP3 DUP4 REVERT JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xA2C JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xA3F JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xA51 JUMPI PUSH2 0xA51 PUSH2 0xC41 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xA79 JUMPI PUSH2 0xA79 PUSH2 0xC41 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xA91 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY DUP6 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAC3 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0xB02 DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0xBA9 JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0xB33 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0xBA9 JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xB5E DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0xBA9 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xB85 JUMPI PUSH2 0xB85 PUSH2 0xC2B JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xBA4 JUMPI PUSH2 0xBA4 PUSH2 0xC2B JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xBC4 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xBAC JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xBD3 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xBE8 JUMPI PUSH2 0xBE8 PUSH2 0xC2B JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xC04 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xC25 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID 0xC7 0xDD 0xCD 0xC0 ADDMOD LOG4 PUSH25 0x7BC0EBC7E57C6DE87615AE1CB780F671AB25BFDFBD9CC9CE62 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 0xAB SWAP13 ISZERO 0xC PUSH9 0x60BFF39E606AEF0209 ADDMOD 0xCF SWAP7 JUMPI PUSH9 0x2CAD47963A52A2D71E PUSH5 0xD7FD64736F PUSH13 0x63430008040033000000000000 ", "pcMap": {"0": {"offset": [361, 3295], "op": "PUSH1", "path": "57", "value": "0x80"}, "2": {"fn": null, "offset": [361, 3295], "op": "PUSH1", "path": "57", "value": "0x40"}, "4": {"fn": null, "offset": [361, 3295], "op": "MSTORE", "path": "57"}, "5": {"fn": null, "offset": [361, 3295], "op": "CALLVALUE", "path": "57"}, "6": {"fn": null, "offset": [361, 3295], "op": "DUP1", "path": "57"}, "7": {"fn": null, "offset": [361, 3295], "op": "ISZERO", "path": "57"}, "8": {"fn": null, "offset": [361, 3295], "op": "PUSH2", "path": "57", "value": "0x10"}, "11": {"fn": null, "offset": [361, 3295], "op": "JUMPI", "path": "57"}, "12": {"fn": null, "offset": [361, 3295], "op": "PUSH1", "path": "57", "value": "0x0"}, "14": {"fn": null, "offset": [361, 3295], "op": "DUP1", "path": "57"}, "15": {"dev": "Cannot send ether to nonpayable function", "fn": null, "offset": [361, 3295], "op": "REVERT", "path": "57"}, "16": {"fn": null, "offset": [361, 3295], "op": "JUMPDEST", "path": "57"}, "17": {"fn": null, "offset": [361, 3295], "op": "POP", "path": "57"}, "18": {"fn": null, "offset": [361, 3295], "op": "PUSH1", "path": "57", "value": "0x4"}, "20": {"fn": null, "offset": [361, 3295], "op": "CALLDATASIZE", "path": "57"}, "21": {"fn": null, "offset": [361, 3295], "op": "LT", "path": "57"}, "22": {"fn": null, "offset": [361, 3295], "op": "PUSH2", "path": "57", "value": "0x57"}, "25": {"fn": null, "offset": [361, 3295], "op": "JUMPI", "path": "57"}, "26": {"fn": null, "offset": [361, 3295], "op": "PUSH1", "path": "57", "value": "0x0"}, "28": {"fn": null, "offset": [361, 3295], "op": "CALLDATALOAD", "path": "57"}, "29": {"fn": null, "offset": [361, 3295], "op": "PUSH1", "path": "57", "value": "0xE0"}, "31": {"fn": null, "offset": [361, 3295], "op": "SHR", "path": "57"}, "32": {"fn": null, "offset": [361, 3295], "op": "DUP1", "path": "57"}, "33": {"fn": null, "offset": [361, 3295], "op": "PUSH4", "path": "57", "value": "0x29D317E4"}, "38": {"fn": null, "offset": [361, 3295], "op": "EQ", "path": "57"}, "39": {"fn": null, "offset": [361, 3295], "op": "PUSH2", "path": "57", "value": "0x5C"}, "42": {"fn": null, "offset": [361, 3295], "op": "JUMPI", "path": "57"}, "43": {"fn": null, "offset": [361, 3295], "op": "DUP1", "path": "57"}, "44": {"fn": null, "offset": [361, 3295], "op": "PUSH4", "path": "57", "value": "0x3A16DBE9"}, "49": {"fn": null, "offset": [361, 3295], "op": "EQ", "path": "57"}, "50": {"fn": null, "offset": [361, 3295], "op": "PUSH2", "path": "57", "value": "0x71"}, "53": {"fn": null, "offset": [361, 3295], "op": "JUMPI", "path": "57"}, "54": {"fn": null, "offset": [361, 3295], "op": "DUP1", "path": "57"}, "55": {"fn": null, "offset": [361, 3295], "op": "PUSH4", "path": "57", "value": "0x72C23DF2"}, "60": {"fn": null, "offset": [361, 3295], "op": "EQ", "path": "57"}, "61": {"fn": null, "offset": [361, 3295], "op": "PUSH2", "path": "57", "value": "0x84"}, "64": {"fn": null, "offset": [361, 3295], "op": "JUMPI", "path": "57"}, "65": {"fn": null, "offset": [361, 3295], "op": "DUP1", "path": "57"}, "66": {"fn": null, "offset": [361, 3295], "op": "PUSH4", "path": "57", "value": "0xD5708B93"}, "71": {"fn": null, "offset": [361, 3295], "op": "EQ", "path": "57"}, "72": {"fn": null, "offset": [361, 3295], "op": "PUSH2", "path": "57", "value": "0x97"}, "75": {"fn": null, "offset": [361, 3295], "op": "JUMPI", "path": "57"}, "76": {"fn": null, "offset": [361, 3295], "op": "DUP1", "path": "57"}, "77": {"fn": null, "offset": [361, 3295], "op": "PUSH4", "path": "57", "value": "0xEACD7883"}, "82": {"fn": null, "offset": [361, 3295], "op": "EQ", "path": "57"}, "83": {"fn": null, "offset": [361, 3295], "op": "PUSH2", "path": "57", "value": "0x9F"}, "86": {"fn": null, "offset": [361, 3295], "op": "JUMPI", "path": "57"}, "87": {"fn": null, "offset": [361, 3295], "op": "JUMPDEST", "path": "57"}, "88": {"fn": null, "offset": [361, 3295], "op": "PUSH1", "path": "57", "value": "0x0"}, "90": {"fn": null, "offset": [361, 3295], "op": "DUP1", "path": "57"}, "91": {"first_revert": true, "fn": null, "offset": [361, 3295], "op": "REVERT", "path": "57"}, "92": {"fn": "RunnerRegistry.resetURI", "offset": [2428, 2716], "op": "JUMPDEST", "path": "57"}, "93": {"fn": "RunnerRegistry.resetURI", "offset": [2428, 2716], "op": "PUSH2", "path": "57", "value": "0x6F"}, "96": {"fn": "RunnerRegistry.resetURI", "offset": [2428, 2716], "op": "PUSH2", "path": "57", "value": "0x6A"}, "99": {"fn": "RunnerRegistry.resetURI", "offset": [2428, 2716], "op": "CALLDATASIZE", "path": "57"}, "100": {"fn": "RunnerRegistry.resetURI", "offset": [2428, 2716], "op": "PUSH1", "path": "57", "value": "0x4"}, "102": {"fn": "RunnerRegistry.resetURI", "offset": [2428, 2716], "op": "PUSH2", "path": "57", "value": "0x9E8"}, "105": {"fn": "RunnerRegistry.resetURI", "jump": "i", "offset": [2428, 2716], "op": "JUMP", "path": "57"}, "106": {"fn": "RunnerRegistry.resetURI", "offset": [2428, 2716], "op": "JUMPDEST", "path": "57"}, "107": {"fn": "RunnerRegistry.resetURI", "offset": [2428, 2716], "op": "PUSH2", "path": "57", "value": "0xB2"}, "110": {"fn": "RunnerRegistry.resetURI", "jump": "i", "offset": [2428, 2716], "op": "JUMP", "path": "57"}, "111": {"fn": "RunnerRegistry.resetURI", "offset": [2428, 2716], "op": "JUMPDEST", "path": "57"}, "112": {"fn": "RunnerRegistry.resetURI", "offset": [2428, 2716], "op": "STOP", "path": "57"}, "113": {"fn": "RunnerRegistry.registerAsRunner", "offset": [765, 1510], "op": "JUMPDEST", "path": "57"}, "114": {"fn": "RunnerRegistry.registerAsRunner", "offset": [765, 1510], "op": "PUSH2", "path": "57", "value": "0x6F"}, "117": {"fn": "RunnerRegistry.registerAsRunner", "offset": [765, 1510], "op": "PUSH2", "path": "57", "value": "0x7F"}, "120": {"fn": "RunnerRegistry.registerAsRunner", "offset": [765, 1510], "op": "CALLDATASIZE", "path": "57"}, "121": {"fn": "RunnerRegistry.registerAsRunner", "offset": [765, 1510], "op": "PUSH1", "path": "57", "value": "0x4"}, "123": {"fn": "RunnerRegistry.registerAsRunner", "offset": [765, 1510], "op": "PUSH2", "path": "57", "value": "0xAB2"}, "126": {"fn": "RunnerRegistry.registerAsRunner", "jump": "i", "offset": [765, 1510], "op": "JUMP", "path": "57"}, "127": {"fn": "RunnerRegistry.registerAsRunner", "offset": [765, 1510], "op": "JUMPDEST", "path": "57"}, "128": {"fn": "RunnerRegistry.registerAsRunner", "offset": [765, 1510], "op": "PUSH2", "path": "57", "value": "0x13E"}, "131": {"fn": "RunnerRegistry.registerAsRunner", "jump": "i", "offset": [765, 1510], "op": "JUMP", "path": "57"}, "132": {"fn": "RunnerRegistry.approveApplicant", "offset": [2145, 2385], "op": "JUMPDEST", "path": "57"}, "133": {"fn": "RunnerRegistry.approveApplicant", "offset": [2145, 2385], "op": "PUSH2", "path": "57", "value": "0x6F"}, "136": {"fn": "RunnerRegistry.approveApplicant", "offset": [2145, 2385], "op": "PUSH2", "path": "57", "value": "0x92"}, "139": {"fn": "RunnerRegistry.approveApplicant", "offset": [2145, 2385], "op": "CALLDATASIZE", "path": "57"}, "140": {"fn": "RunnerRegistry.approveApplicant", "offset": [2145, 2385], "op": "PUSH1", "path": "57", "value": "0x4"}, "142": {"fn": "RunnerRegistry.approveApplicant", "offset": [2145, 2385], "op": "PUSH2", "path": "57", "value": "0x9E8"}, "145": {"fn": "RunnerRegistry.approveApplicant", "jump": "i", "offset": [2145, 2385], "op": "JUMP", "path": "57"}, "146": {"fn": "RunnerRegistry.approveApplicant", "offset": [2145, 2385], "op": "JUMPDEST", "path": "57"}, "147": {"fn": "RunnerRegistry.approveApplicant", "offset": [2145, 2385], "op": "PUSH2", "path": "57", "value": "0x28D"}, "150": {"fn": "RunnerRegistry.approveApplicant", "jump": "i", "offset": [2145, 2385], "op": "JUMP", "path": "57"}, "151": {"fn": "RunnerRegistry.leaveHive", "offset": [2781, 3293], "op": "JUMPDEST", "path": "57"}, "152": {"fn": "RunnerRegistry.leaveHive", "offset": [2781, 3293], "op": "PUSH2", "path": "57", "value": "0x6F"}, "155": {"fn": "RunnerRegistry.leaveHive", "offset": [2781, 3293], "op": "PUSH2", "path": "57", "value": "0x2CC"}, "158": {"fn": "RunnerRegistry.leaveHive", "jump": "i", "offset": [2781, 3293], "op": "JUMP", "path": "57"}, "159": {"fn": "RunnerRegistry.updateMaxMetresPerTrip", "offset": [1727, 2139], "op": "JUMPDEST", "path": "57"}, "160": {"fn": "RunnerRegistry.updateMaxMetresPerTrip", "offset": [1727, 2139], "op": "PUSH2", "path": "57", "value": "0x6F"}, "163": {"fn": "RunnerRegistry.updateMaxMetresPerTrip", "offset": [1727, 2139], "op": "PUSH2", "path": "57", "value": "0xAD"}, "166": {"fn": "RunnerRegistry.updateMaxMetresPerTrip", "offset": [1727, 2139], "op": "CALLDATASIZE", "path": "57"}, "167": {"fn": "RunnerRegistry.updateMaxMetresPerTrip", "offset": [1727, 2139], "op": "PUSH1", "path": "57", "value": "0x4"}, "169": {"fn": "RunnerRegistry.updateMaxMetresPerTrip", "offset": [1727, 2139], "op": "PUSH2", "path": "57", "value": "0xAB2"}, "172": {"fn": "RunnerRegistry.updateMaxMetresPerTrip", "jump": "i", "offset": [1727, 2139], "op": "JUMP", "path": "57"}, "173": {"fn": "RunnerRegistry.updateMaxMetresPerTrip", "offset": [1727, 2139], "op": "JUMPDEST", "path": "57"}, "174": {"fn": "RunnerRegistry.updateMaxMetresPerTrip", "offset": [1727, 2139], "op": "PUSH2", "path": "57", "value": "0x3BF"}, "177": {"fn": "RunnerRegistry.updateMaxMetresPerTrip", "jump": "i", "offset": [1727, 2139], "op": "JUMP", "path": "57"}, "178": {"fn": "RunnerRegistry.resetURI", "offset": [2428, 2716], "op": "JUMPDEST", "path": "57"}, "179": {"fn": "RunnerRegistry.resetURI", "offset": [2502, 2563], "op": "PUSH2", "path": "57", "statement": 0, "value": "0xFD"}, "182": {"offset": [488, 511], "op": "PUSH1", "path": "78", "value": "0x40"}, "184": {"fn": "RunnerRegistry.resetURI", "offset": [488, 511], "op": "MLOAD", "path": "78"}, "185": {"fn": "RunnerRegistry.resetURI", "offset": [488, 511], "op": "PUSH1", "path": "78", "value": "0x20"}, "187": {"fn": "RunnerRegistry.resetURI", "offset": [488, 511], "op": "ADD", "path": "78"}, "188": {"fn": "RunnerRegistry.resetURI", "offset": [488, 511], "op": "PUSH2", "path": "78", "value": "0xE2"}, "191": {"fn": "RunnerRegistry.resetURI", "offset": [488, 511], "op": "SWAP1", "path": "78"}, "192": {"op": "PUSH1", "value": "0x20"}, "194": {"op": "DUP1"}, "195": {"op": "DUP3"}, "196": {"op": "MSTORE"}, "197": {"op": "PUSH1", "value": "0x9"}, "199": {"op": "SWAP1"}, "200": {"op": "DUP3"}, "201": {"op": "ADD"}, "202": {"op": "MSTORE"}, "203": {"op": "PUSH9", "value": "0x484956455F524F4C45"}, "213": {"op": "PUSH1", "value": "0xB8"}, "215": {"op": "SHL"}, "216": {"op": "PUSH1", "value": "0x40"}, "218": {"op": "DUP3"}, "219": {"op": "ADD"}, "220": {"op": "MSTORE"}, "221": {"op": "PUSH1", "value": "0x60"}, "223": {"op": "ADD"}, "224": {"op": "SWAP1"}, "225": {"op": "JUMP"}, "226": {"offset": [488, 511], "op": "JUMPDEST", "path": "78"}, "227": {"fn": "RunnerRegistry.resetURI", "offset": [488, 511], "op": "PUSH1", "path": "78", "value": "0x40"}, "229": {"fn": "RunnerRegistry.resetURI", "offset": [488, 511], "op": "MLOAD", "path": "78"}, "230": {"fn": "RunnerRegistry.resetURI", "offset": [488, 511], "op": "PUSH1", "path": "78", "value": "0x20"}, "232": {"fn": "RunnerRegistry.resetURI", "offset": [488, 511], "op": "DUP2", "path": "78"}, "233": {"fn": "RunnerRegistry.resetURI", "offset": [488, 511], "op": "DUP4", "path": "78"}, "234": {"fn": "RunnerRegistry.resetURI", "offset": [488, 511], "op": "SUB", "path": "78"}, "235": {"fn": "RunnerRegistry.resetURI", "offset": [488, 511], "op": "SUB", "path": "78"}, "236": {"fn": "RunnerRegistry.resetURI", "offset": [488, 511], "op": "DUP2", "path": "78"}, "237": {"fn": "RunnerRegistry.resetURI", "offset": [488, 511], "op": "MSTORE", "path": "78"}, "238": {"fn": "RunnerRegistry.resetURI", "offset": [488, 511], "op": "SWAP1", "path": "78"}, "239": {"fn": "RunnerRegistry.resetURI", "offset": [488, 511], "op": "PUSH1", "path": "78", "value": "0x40"}, "241": {"fn": "RunnerRegistry.resetURI", "offset": [488, 511], "op": "MSTORE", "path": "78"}, "242": {"offset": [478, 512], "op": "DUP1", "path": "78"}, "243": {"fn": "RunnerRegistry.resetURI", "offset": [478, 512], "op": "MLOAD", "path": "78"}, "244": {"fn": "RunnerRegistry.resetURI", "offset": [478, 512], "op": "SWAP1", "path": "78"}, "245": {"fn": "RunnerRegistry.resetURI", "offset": [478, 512], "op": "PUSH1", "path": "78", "value": "0x20"}, "247": {"fn": "RunnerRegistry.resetURI", "offset": [478, 512], "op": "ADD", "path": "78"}, "248": {"fn": "RunnerRegistry.resetURI", "offset": [478, 512], "op": "KECCAK256", "path": "78"}, "249": {"fn": "RunnerRegistry.resetURI", "offset": [2502, 2535], "op": "PUSH2", "path": "57", "value": "0x42A"}, "252": {"fn": "RunnerRegistry.resetURI", "jump": "i", "offset": [2502, 2563], "op": "JUMP", "path": "57"}, "253": {"fn": "RunnerRegistry.resetURI", "offset": [2502, 2563], "op": "JUMPDEST", "path": "57"}, "254": {"op": "PUSH1", "value": "0x1"}, "256": {"op": "PUSH1", "value": "0x1"}, "258": {"op": "PUSH1", "value": "0xA0"}, "260": {"op": "SHL"}, "261": {"op": "SUB"}, "262": {"fn": "RunnerRegistry.resetURI", "offset": [2591, 2685], "op": "DUP3", "path": "57", "statement": 1}, "263": {"fn": "RunnerRegistry.resetURI", "offset": [2591, 2685], "op": "AND", "path": "57"}, "264": {"fn": "RunnerRegistry.resetURI", "offset": [2591, 2676], "op": "PUSH1", "path": "57", "value": "0x0"}, "266": {"fn": "RunnerRegistry.resetURI", "offset": [2591, 2685], "op": "SWAP1", "path": "57"}, "267": {"fn": "RunnerRegistry.resetURI", "offset": [2591, 2685], "op": "DUP2", "path": "57"}, "268": {"fn": "RunnerRegistry.resetURI", "offset": [2591, 2685], "op": "MSTORE", "path": "57"}, "269": {"op": "PUSH1", "value": "0x0"}, "271": {"op": "DUP1"}, "272": {"op": "MLOAD"}, "273": {"op": "PUSH1", "value": "0x20"}, "275": {"op": "PUSH2", "value": "0xC58"}, "278": {"op": "DUP4"}, "279": {"op": "CODECOPY"}, "280": {"op": "DUP2"}, "281": {"op": "MLOAD"}, "282": {"op": "SWAP2"}, "283": {"op": "MSTORE"}, "284": {"fn": "RunnerRegistry.resetURI", "offset": [2591, 2685], "op": "PUSH1", "path": "57", "value": "0x20"}, "286": {"fn": "RunnerRegistry.resetURI", "offset": [2591, 2685], "op": "SWAP1", "path": "57"}, "287": {"fn": "RunnerRegistry.resetURI", "offset": [2591, 2685], "op": "DUP2", "path": "57"}, "288": {"fn": "RunnerRegistry.resetURI", "offset": [2591, 2685], "op": "MSTORE", "path": "57"}, "289": {"fn": "RunnerRegistry.resetURI", "offset": [2591, 2685], "op": "PUSH1", "path": "57", "value": "0x40"}, "291": {"fn": "RunnerRegistry.resetURI", "offset": [2591, 2685], "op": "SWAP1", "path": "57"}, "292": {"fn": "RunnerRegistry.resetURI", "offset": [2591, 2685], "op": "SWAP2", "path": "57"}, "293": {"fn": "RunnerRegistry.resetURI", "offset": [2591, 2685], "op": "KECCAK256", "path": "57"}, "294": {"fn": "RunnerRegistry.resetURI", "offset": [2591, 2709], "op": "DUP3", "path": "57"}, "295": {"fn": "RunnerRegistry.resetURI", "offset": [2591, 2709], "op": "MLOAD", "path": "57"}, "296": {"fn": "RunnerRegistry.resetURI", "offset": [2591, 2709], "op": "PUSH2", "path": "57", "value": "0x139"}, "299": {"fn": "RunnerRegistry.resetURI", "offset": [2591, 2709], "op": "SWAP3", "path": "57"}, "300": {"fn": "RunnerRegistry.resetURI", "offset": [2591, 2702], "op": "PUSH1", "path": "57", "value": "0x1"}, "302": {"fn": "RunnerRegistry.resetURI", "offset": [2591, 2702], "op": "SWAP1", "path": "57"}, "303": {"fn": "RunnerRegistry.resetURI", "offset": [2591, 2702], "op": "SWAP3", "path": "57"}, "304": {"fn": "RunnerRegistry.resetURI", "offset": [2591, 2702], "op": "ADD", "path": "57"}, "305": {"fn": "RunnerRegistry.resetURI", "offset": [2591, 2702], "op": "SWAP2", "path": "57"}, "306": {"fn": "RunnerRegistry.resetURI", "offset": [2591, 2709], "op": "DUP5", "path": "57"}, "307": {"fn": "RunnerRegistry.resetURI", "offset": [2591, 2709], "op": "ADD", "path": "57"}, "308": {"fn": "RunnerRegistry.resetURI", "offset": [2591, 2709], "op": "SWAP1", "path": "57"}, "309": {"fn": "RunnerRegistry.resetURI", "offset": [2591, 2709], "op": "PUSH2", "path": "57", "value": "0x94F"}, "312": {"fn": "RunnerRegistry.resetURI", "jump": "i", "offset": [2591, 2709], "op": "JUMP", "path": "57"}, "313": {"fn": "RunnerRegistry.resetURI", "offset": [2591, 2709], "op": "JUMPDEST", "path": "57"}, "314": {"fn": "RunnerRegistry.resetURI", "offset": [2591, 2709], "op": "POP", "path": "57"}, "315": {"fn": "RunnerRegistry.resetURI", "offset": [2428, 2716], "op": "POP", "path": "57"}, "316": {"fn": "RunnerRegistry.resetURI", "offset": [2428, 2716], "op": "POP", "path": "57"}, "317": {"fn": "RunnerRegistry.resetURI", "jump": "o", "offset": [2428, 2716], "op": "JUMP", "path": "57"}, "318": {"fn": "RunnerRegistry.registerAsRunner", "offset": [765, 1510], "op": "JUMPDEST", "path": "57"}, "319": {"fn": "RunnerRegistry.registerAsRunner", "offset": [837, 874], "op": "PUSH2", "path": "57", "statement": 2, "value": "0x146"}, "322": {"fn": "RunnerRegistry.registerAsRunner", "offset": [837, 872], "op": "PUSH2", "path": "57", "value": "0x436"}, "325": {"fn": "RunnerRegistry.registerAsRunner", "jump": "i", "offset": [837, 874], "op": "JUMP", "path": "57"}, "326": {"fn": "RunnerRegistry.registerAsRunner", "offset": [837, 874], "op": "JUMPDEST", "path": "57"}, "327": {"fn": "RunnerRegistry.registerAsRunner", "offset": [884, 915], "op": "PUSH2", "path": "57", "statement": 3, "value": "0x14E"}, "330": {"fn": "RunnerRegistry.registerAsRunner", "offset": [884, 913], "op": "PUSH2", "path": "57", "value": "0x4AE"}, "333": {"fn": "RunnerRegistry.registerAsRunner", "jump": "i", "offset": [884, 915], "op": "JUMP", "path": "57"}, "334": {"fn": "RunnerRegistry.registerAsRunner", "offset": [884, 915], "op": "JUMPDEST", "path": "57"}, "335": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1116, 1126], "op": "CALLER", "path": "57", "statement": 4}, "336": {"fn": "RunnerRegistry.registerAsRunner", "offset": [955, 1001], "op": "PUSH1", "path": "57", "value": "0x0"}, "338": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1092, 1127], "op": "SWAP1", "path": "57"}, "339": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1092, 1127], "op": "DUP2", "path": "57"}, "340": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1092, 1127], "op": "MSTORE", "path": "57"}, "341": {"op": "PUSH1", "value": "0x0"}, "343": {"op": "DUP1"}, "344": {"op": "MLOAD"}, "345": {"op": "PUSH1", "value": "0x20"}, "347": {"op": "PUSH2", "value": "0xC58"}, "350": {"op": "DUP4"}, "351": {"op": "CODECOPY"}, "352": {"op": "DUP2"}, "353": {"op": "MLOAD"}, "354": {"op": "SWAP2"}, "355": {"op": "MSTORE"}, "356": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1092, 1127], "op": "PUSH1", "path": "57", "value": "0x20"}, "358": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1092, 1127], "op": "DUP2", "path": "57"}, "359": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1092, 1127], "op": "SWAP1", "path": "57"}, "360": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1092, 1127], "op": "MSTORE", "path": "57"}, "361": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1092, 1127], "op": "PUSH1", "path": "57", "value": "0x40"}, "363": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1092, 1127], "op": "SWAP1", "path": "57"}, "364": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1092, 1127], "op": "SWAP2", "path": "57"}, "365": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1092, 1127], "op": "KECCAK256", "path": "57"}, "366": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1092, 1131], "op": "PUSH1", "path": "57", "value": "0x1"}, "368": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1092, 1131], "op": "ADD", "path": "57"}, "369": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1086, 1139], "op": "DUP1", "path": "57"}, "370": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1086, 1139], "op": "SLOAD", "path": "57"}, "371": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1086, 1139], "op": "PUSH2", "path": "57", "value": "0x17B"}, "374": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1086, 1139], "op": "SWAP1", "path": "57"}, "375": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1086, 1139], "op": "PUSH2", "path": "57", "value": "0xBF0"}, "378": {"fn": "RunnerRegistry.registerAsRunner", "jump": "i", "offset": [1086, 1139], "op": "JUMP", "path": "57"}, "379": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1086, 1139], "op": "JUMPDEST", "path": "57"}, "380": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1086, 1144], "op": "ISZERO", "path": "57"}, "381": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1086, 1144], "op": "ISZERO", "path": "57"}, "382": {"branch": 40, "fn": "RunnerRegistry.registerAsRunner", "offset": [1086, 1144], "op": "SWAP1", "path": "57"}, "383": {"op": "POP"}, "384": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1065, 1197], "op": "PUSH2", "path": "57", "value": "0x1D0"}, "387": {"branch": 40, "fn": "RunnerRegistry.registerAsRunner", "offset": [1065, 1197], "op": "JUMPI", "path": "57"}, "388": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1065, 1197], "op": "PUSH1", "path": "57", "value": "0x40"}, "390": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1065, 1197], "op": "MLOAD", "path": "57"}, "391": {"op": "PUSH3", "value": "0x461BCD"}, "395": {"op": "PUSH1", "value": "0xE5"}, "397": {"op": "SHL"}, "398": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1065, 1197], "op": "DUP2", "path": "57"}, "399": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1065, 1197], "op": "MSTORE", "path": "57"}, "400": {"op": "PUSH1", "value": "0x20"}, "402": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1065, 1197], "op": "PUSH1", "path": "57", "value": "0x4"}, "404": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1065, 1197], "op": "DUP3", "path": "57"}, "405": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1065, 1197], "op": "ADD", "path": "57"}, "406": {"op": "MSTORE"}, "407": {"op": "PUSH1", "value": "0x1B"}, "409": {"op": "PUSH1", "value": "0x24"}, "411": {"op": "DUP3"}, "412": {"op": "ADD"}, "413": {"op": "MSTORE"}, "414": {"op": "PUSH32", "value": "0x52756E6E657252656769737472793A20555249206E6F74207365740000000000"}, "447": {"op": "PUSH1", "value": "0x44"}, "449": {"op": "DUP3"}, "450": {"op": "ADD"}, "451": {"op": "MSTORE"}, "452": {"op": "PUSH1", "value": "0x64"}, "454": {"op": "ADD"}, "455": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1065, 1197], "op": "JUMPDEST", "path": "57"}, "456": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1065, 1197], "op": "PUSH1", "path": "57", "value": "0x40"}, "458": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1065, 1197], "op": "MLOAD", "path": "57"}, "459": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1065, 1197], "op": "DUP1", "path": "57"}, "460": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1065, 1197], "op": "SWAP2", "path": "57"}, "461": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1065, 1197], "op": "SUB", "path": "57"}, "462": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1065, 1197], "op": "SWAP1", "path": "57"}, "463": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1065, 1197], "op": "REVERT", "optimizer_revert": true, "path": "57"}, "464": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1065, 1197], "op": "JUMPDEST", "path": "57"}, "465": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1215, 1225], "op": "CALLER", "path": "57", "statement": 5}, "466": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1207, 1272], "op": "PUSH2", "path": "57", "value": "0x21D"}, "469": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1207, 1272], "op": "JUMPI", "path": "57"}, "470": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1207, 1272], "op": "PUSH1", "path": "57", "value": "0x40"}, "472": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1207, 1272], "op": "MLOAD", "path": "57"}, "473": {"op": "PUSH3", "value": "0x461BCD"}, "477": {"op": "PUSH1", "value": "0xE5"}, "479": {"op": "SHL"}, "480": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1207, 1272], "op": "DUP2", "path": "57"}, "481": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1207, 1272], "op": "MSTORE", "path": "57"}, "482": {"op": "PUSH1", "value": "0x20"}, "484": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1207, 1272], "op": "PUSH1", "path": "57", "value": "0x4"}, "486": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1207, 1272], "op": "DUP3", "path": "57"}, "487": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1207, 1272], "op": "ADD", "path": "57"}, "488": {"op": "MSTORE"}, "489": {"op": "PUSH1", "value": "0x1C"}, "491": {"op": "PUSH1", "value": "0x24"}, "493": {"op": "DUP3"}, "494": {"op": "ADD"}, "495": {"op": "MSTORE"}, "496": {"op": "PUSH32", "value": "0x52756E6E657252656769737472793A205A65726F206164647265737300000000"}, "529": {"op": "PUSH1", "value": "0x44"}, "531": {"op": "DUP3"}, "532": {"op": "ADD"}, "533": {"op": "MSTORE"}, "534": {"op": "PUSH1", "value": "0x64"}, "536": {"op": "ADD"}, "537": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1207, 1272], "op": "PUSH2", "path": "57", "value": "0x1C7"}, "540": {"op": "JUMP"}, "541": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1207, 1272], "op": "JUMPDEST", "path": "57"}, "542": {"offset": [280, 310], "op": "PUSH32", "path": "77", "value": "0x34F23AC8DBA1B0D420860360C560BB179223090C38CE56FA6655C791CCAB58DD"}, "575": {"fn": "Counters.current", "offset": [918, 932], "op": "DUP1", "path": "24", "statement": 6}, "576": {"fn": "Counters.current", "offset": [918, 932], "op": "SLOAD", "path": "24"}, "577": {"fn": "Counters.increment", "offset": [1050, 1051], "op": "PUSH1", "path": "24", "statement": 7, "value": "0x1"}, "579": {"fn": "Counters.increment", "offset": [1032, 1051], "op": "DUP2", "path": "24"}, "580": {"fn": "Counters.increment", "offset": [1032, 1051], "op": "ADD", "path": "24"}, "581": {"fn": "Counters.increment", "offset": [1032, 1051], "op": "SWAP1", "path": "24"}, "582": {"fn": "Counters.increment", "offset": [1032, 1051], "op": "SWAP2", "path": "24"}, "583": {"fn": "Counters.increment", "offset": [1032, 1051], "op": "SSTORE", "path": "24"}, "584": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1307, 1317], "op": "CALLER", "path": "57", "statement": 8}, "585": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1283, 1306], "op": "PUSH1", "path": "57", "value": "0x0"}, "587": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1283, 1318], "op": "DUP2", "path": "57"}, "588": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1283, 1318], "op": "DUP2", "path": "57"}, "589": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1283, 1318], "op": "MSTORE", "path": "57"}, "590": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1283, 1318], "op": "PUSH1", "path": "57", "value": "0x20"}, "592": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1283, 1318], "op": "DUP5", "path": "57"}, "593": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1283, 1318], "op": "SWAP1", "path": "57"}, "594": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1283, 1318], "op": "MSTORE", "path": "57"}, "595": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1283, 1318], "op": "PUSH1", "path": "57", "value": "0x40"}, "597": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1283, 1318], "op": "DUP1", "path": "57"}, "598": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1283, 1318], "op": "DUP3", "path": "57"}, "599": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1283, 1318], "op": "KECCAK256", "path": "57"}, "600": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1283, 1349], "op": "SWAP4", "path": "57"}, "601": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1283, 1349], "op": "DUP5", "path": "57"}, "602": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1283, 1349], "op": "SSTORE", "path": "57"}, "603": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1359, 1437], "op": "PUSH1", "path": "57", "statement": 9, "value": "0x3"}, "605": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1359, 1437], "op": "SWAP1", "path": "57"}, "606": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1359, 1437], "op": "SWAP4", "path": "57"}, "607": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1359, 1437], "op": "ADD", "path": "57"}, "608": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1359, 1457], "op": "DUP6", "path": "57"}, "609": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1359, 1457], "op": "SWAP1", "path": "57"}, "610": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1359, 1457], "op": "SSTORE", "path": "57"}, "611": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1473, 1503], "op": "SWAP2", "path": "57", "statement": 10}, "612": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1473, 1503], "op": "MLOAD", "path": "57"}, "613": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1307, 1317], "op": "SWAP1", "path": "57"}, "614": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1307, 1317], "op": "SWAP2", "path": "57"}, "615": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1473, 1503], "op": "PUSH32", "path": "57", "value": "0xF2EAD073C0393ED1B39A7C8486F4ADF47175EA04F492607F4C547F05BB5328DD"}, "648": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1473, 1503], "op": "SWAP2", "path": "57"}, "649": {"fn": "RunnerRegistry.registerAsRunner", "offset": [1473, 1503], "op": "LOG2", "path": "57"}, "650": {"fn": "RunnerRegistry.registerAsRunner", "offset": [765, 1510], "op": "POP", "path": "57"}, "651": {"fn": "RunnerRegistry.registerAsRunner", "offset": [765, 1510], "op": "POP", "path": "57"}, "652": {"fn": "RunnerRegistry.registerAsRunner", "jump": "o", "offset": [765, 1510], "op": "JUMP", "path": "57"}, "653": {"fn": "RunnerRegistry.approveApplicant", "offset": [2145, 2385], "op": "JUMPDEST", "path": "57"}, "654": {"fn": "RunnerRegistry.approveApplicant", "offset": [2227, 2288], "op": "PUSH2", "path": "57", "statement": 11, "value": "0x2BD"}, "657": {"offset": [488, 511], "op": "PUSH1", "path": "78", "value": "0x40"}, "659": {"fn": "RunnerRegistry.approveApplicant", "offset": [488, 511], "op": "MLOAD", "path": "78"}, "660": {"fn": "RunnerRegistry.approveApplicant", "offset": [488, 511], "op": "PUSH1", "path": "78", "value": "0x20"}, "662": {"fn": "RunnerRegistry.approveApplicant", "offset": [488, 511], "op": "ADD", "path": "78"}, "663": {"fn": "RunnerRegistry.approveApplicant", "offset": [488, 511], "op": "PUSH2", "path": "78", "value": "0xE2"}, "666": {"fn": "RunnerRegistry.approveApplicant", "offset": [488, 511], "op": "SWAP1", "path": "78"}, "667": {"op": "PUSH1", "value": "0x20"}, "669": {"op": "DUP1"}, "670": {"op": "DUP3"}, "671": {"op": "MSTORE"}, "672": {"op": "PUSH1", "value": "0x9"}, "674": {"op": "SWAP1"}, "675": {"op": "DUP3"}, "676": {"op": "ADD"}, "677": {"op": "MSTORE"}, "678": {"op": "PUSH9", "value": "0x484956455F524F4C45"}, "688": {"op": "PUSH1", "value": "0xB8"}, "690": {"op": "SHL"}, "691": {"op": "PUSH1", "value": "0x40"}, "693": {"op": "DUP3"}, "694": {"op": "ADD"}, "695": {"op": "MSTORE"}, "696": {"op": "PUSH1", "value": "0x60"}, "698": {"op": "ADD"}, "699": {"op": "SWAP1"}, "700": {"op": "JUMP"}, "701": {"fn": "RunnerRegistry.approveApplicant", "offset": [2227, 2288], "op": "JUMPDEST", "path": "57"}, "702": {"fn": "RunnerRegistry.approveApplicant", "offset": [2316, 2378], "op": "PUSH2", "path": "57", "statement": 12, "value": "0x2C8"}, "705": {"fn": "RunnerRegistry.approveApplicant", "offset": [2352, 2359], "op": "DUP3", "path": "57"}, "706": {"fn": "RunnerRegistry.approveApplicant", "offset": [2361, 2365], "op": "DUP3", "path": "57"}, "707": {"fn": "RunnerRegistry.approveApplicant", "offset": [2367, 2377], "op": "CALLER", "path": "57"}, "708": {"fn": "RunnerRegistry.approveApplicant", "offset": [2316, 2351], "op": "PUSH2", "path": "57", "value": "0x52A"}, "711": {"fn": "RunnerRegistry.approveApplicant", "jump": "i", "offset": [2316, 2378], "op": "JUMP", "path": "57"}, "712": {"fn": "RunnerRegistry.approveApplicant", "offset": [2316, 2378], "op": "JUMPDEST", "path": "57"}, "713": {"fn": "RunnerRegistry.approveApplicant", "offset": [2145, 2385], "op": "POP", "path": "57"}, "714": {"fn": "RunnerRegistry.approveApplicant", "offset": [2145, 2385], "op": "POP", "path": "57"}, "715": {"fn": "RunnerRegistry.approveApplicant", "jump": "o", "offset": [2145, 2385], "op": "JUMP", "path": "57"}, "716": {"fn": "RunnerRegistry.leaveHive", "offset": [2781, 3293], "op": "JUMPDEST", "path": "57"}, "717": {"fn": "RunnerRegistry.leaveHive", "offset": [2821, 2857], "op": "PUSH2", "path": "57", "statement": 13, "value": "0x2D4"}, "720": {"fn": "RunnerRegistry.leaveHive", "offset": [2821, 2855], "op": "PUSH2", "path": "57", "value": "0x654"}, "723": {"fn": "RunnerRegistry.leaveHive", "jump": "i", "offset": [2821, 2857], "op": "JUMP", "path": "57"}, "724": {"fn": "RunnerRegistry.leaveHive", "offset": [2821, 2857], "op": "JUMPDEST", "path": "57"}, "725": {"fn": "RunnerRegistry.leaveHive", "offset": [2867, 2898], "op": "PUSH2", "path": "57", "statement": 14, "value": "0x2DC"}, "728": {"fn": "RunnerRegistry.leaveHive", "offset": [2867, 2896], "op": "PUSH2", "path": "57", "value": "0x4AE"}, "731": {"fn": "RunnerRegistry.leaveHive", "jump": "i", "offset": [2867, 2898], "op": "JUMP", "path": "57"}, "732": {"fn": "RunnerRegistry.leaveHive", "offset": [2867, 2898], "op": "JUMPDEST", "path": "57"}, "733": {"fn": "RunnerRegistry.leaveHive", "offset": [3089, 3099], "op": "CALLER", "path": "57"}, "734": {"fn": "RunnerRegistry.leaveHive", "offset": [2939, 2985], "op": "PUSH1", "path": "57", "value": "0x0"}, "736": {"fn": "RunnerRegistry.leaveHive", "offset": [3065, 3100], "op": "SWAP1", "path": "57"}, "737": {"fn": "RunnerRegistry.leaveHive", "offset": [3065, 3100], "op": "DUP2", "path": "57"}, "738": {"fn": "RunnerRegistry.leaveHive", "offset": [3065, 3100], "op": "MSTORE", "path": "57"}, "739": {"op": "PUSH1", "value": "0x0"}, "741": {"op": "DUP1"}, "742": {"op": "MLOAD"}, "743": {"op": "PUSH1", "value": "0x20"}, "745": {"op": "PUSH2", "value": "0xC58"}, "748": {"op": "DUP4"}, "749": {"op": "CODECOPY"}, "750": {"op": "DUP2"}, "751": {"op": "MLOAD"}, "752": {"op": "SWAP2"}, "753": {"op": "MSTORE"}, "754": {"fn": "RunnerRegistry.leaveHive", "offset": [3065, 3100], "op": "PUSH1", "path": "57", "value": "0x20"}, "756": {"fn": "RunnerRegistry.leaveHive", "offset": [3065, 3100], "op": "DUP2", "path": "57"}, "757": {"fn": "RunnerRegistry.leaveHive", "offset": [3065, 3100], "op": "SWAP1", "path": "57"}, "758": {"fn": "RunnerRegistry.leaveHive", "offset": [3065, 3100], "op": "MSTORE", "path": "57"}, "759": {"fn": "RunnerRegistry.leaveHive", "offset": [3065, 3100], "op": "PUSH1", "path": "57", "value": "0x40"}, "761": {"fn": "RunnerRegistry.leaveHive", "offset": [3065, 3100], "op": "SWAP1", "path": "57"}, "762": {"fn": "RunnerRegistry.leaveHive", "offset": [3065, 3100], "op": "SWAP2", "path": "57"}, "763": {"fn": "RunnerRegistry.leaveHive", "offset": [3065, 3100], "op": "KECCAK256", "path": "57"}, "764": {"fn": "RunnerRegistry.leaveHive", "offset": [3065, 3105], "op": "PUSH1", "path": "57", "value": "0x2"}, "766": {"fn": "RunnerRegistry.leaveHive", "offset": [3065, 3105], "op": "ADD", "path": "57"}, "767": {"fn": "RunnerRegistry.leaveHive", "offset": [3065, 3105], "op": "SLOAD", "path": "57"}, "768": {"op": "PUSH1", "value": "0x1"}, "770": {"op": "PUSH1", "value": "0x1"}, "772": {"op": "PUSH1", "value": "0xA0"}, "774": {"op": "SHL"}, "775": {"op": "SUB"}, "776": {"fn": "RunnerRegistry.leaveHive", "offset": [3065, 3105], "op": "AND", "path": "57"}, "777": {"fn": "RunnerRegistry.leaveHive", "offset": [3065, 3105], "op": "DUP1", "path": "57"}, "778": {"fn": "RunnerRegistry.leaveHive", "offset": [3115, 3180], "op": "PUSH2", "path": "57", "statement": 15, "value": "0x360"}, "781": {"fn": "RunnerRegistry.leaveHive", "offset": [3115, 3180], "op": "JUMPI", "path": "57"}, "782": {"fn": "RunnerRegistry.leaveHive", "offset": [3115, 3180], "op": "PUSH1", "path": "57", "value": "0x40"}, "784": {"fn": "RunnerRegistry.leaveHive", "offset": [3115, 3180], "op": "MLOAD", "path": "57"}, "785": {"op": "PUSH3", "value": "0x461BCD"}, "789": {"op": "PUSH1", "value": "0xE5"}, "791": {"op": "SHL"}, "792": {"fn": "RunnerRegistry.leaveHive", "offset": [3115, 3180], "op": "DUP2", "path": "57"}, "793": {"fn": "RunnerRegistry.leaveHive", "offset": [3115, 3180], "op": "MSTORE", "path": "57"}, "794": {"op": "PUSH1", "value": "0x20"}, "796": {"fn": "RunnerRegistry.leaveHive", "offset": [3115, 3180], "op": "PUSH1", "path": "57", "value": "0x4"}, "798": {"fn": "RunnerRegistry.leaveHive", "offset": [3115, 3180], "op": "DUP3", "path": "57"}, "799": {"fn": "RunnerRegistry.leaveHive", "offset": [3115, 3180], "op": "ADD", "path": "57"}, "800": {"op": "MSTORE"}, "801": {"op": "PUSH1", "value": "0x22"}, "803": {"op": "PUSH1", "value": "0x24"}, "805": {"op": "DUP3"}, "806": {"op": "ADD"}, "807": {"op": "MSTORE"}, "808": {"op": "PUSH32", "value": "0x52756E6E657252656769737472793A2063616C6C6572206E6F7420696E206869"}, "841": {"op": "PUSH1", "value": "0x44"}, "843": {"op": "DUP3"}, "844": {"op": "ADD"}, "845": {"op": "MSTORE"}, "846": {"op": "PUSH2", "value": "0x7665"}, "849": {"op": "PUSH1", "value": "0xF0"}, "851": {"op": "SHL"}, "852": {"op": "PUSH1", "value": "0x64"}, "854": {"op": "DUP3"}, "855": {"op": "ADD"}, "856": {"op": "MSTORE"}, "857": {"op": "PUSH1", "value": "0x84"}, "859": {"op": "ADD"}, "860": {"fn": "RunnerRegistry.leaveHive", "offset": [3115, 3180], "op": "PUSH2", "path": "57", "value": "0x1C7"}, "863": {"op": "JUMP"}, "864": {"fn": "RunnerRegistry.leaveHive", "offset": [3115, 3180], "op": "JUMPDEST", "path": "57"}, "865": {"fn": "RunnerRegistry.leaveHive", "offset": [3215, 3225], "op": "CALLER", "path": "57", "statement": 16}, "866": {"fn": "RunnerRegistry.leaveHive", "offset": [3242, 3243], "op": "PUSH1", "path": "57", "value": "0x0"}, "868": {"fn": "RunnerRegistry.leaveHive", "offset": [3191, 3226], "op": "DUP2", "path": "57"}, "869": {"fn": "RunnerRegistry.leaveHive", "offset": [3191, 3226], "op": "DUP2", "path": "57"}, "870": {"fn": "RunnerRegistry.leaveHive", "offset": [3191, 3226], "op": "MSTORE", "path": "57"}, "871": {"fn": "RunnerRegistry.leaveHive", "offset": [3191, 3226], "op": "PUSH1", "path": "57", "value": "0x20"}, "873": {"fn": "RunnerRegistry.leaveHive", "offset": [3191, 3226], "op": "DUP5", "path": "57"}, "874": {"fn": "RunnerRegistry.leaveHive", "offset": [3191, 3226], "op": "DUP2", "path": "57"}, "875": {"fn": "RunnerRegistry.leaveHive", "offset": [3191, 3226], "op": "MSTORE", "path": "57"}, "876": {"fn": "RunnerRegistry.leaveHive", "offset": [3191, 3226], "op": "PUSH1", "path": "57", "value": "0x40"}, "878": {"fn": "RunnerRegistry.leaveHive", "offset": [3191, 3226], "op": "SWAP2", "path": "57"}, "879": {"fn": "RunnerRegistry.leaveHive", "offset": [3191, 3226], "op": "DUP3", "path": "57"}, "880": {"fn": "RunnerRegistry.leaveHive", "offset": [3191, 3226], "op": "SWAP1", "path": "57"}, "881": {"fn": "RunnerRegistry.leaveHive", "offset": [3191, 3226], "op": "KECCAK256", "path": "57"}, "882": {"fn": "RunnerRegistry.leaveHive", "offset": [3191, 3231], "op": "PUSH1", "path": "57", "value": "0x2"}, "884": {"fn": "RunnerRegistry.leaveHive", "offset": [3191, 3231], "op": "ADD", "path": "57"}, "885": {"fn": "RunnerRegistry.leaveHive", "offset": [3191, 3244], "op": "DUP1", "path": "57"}, "886": {"fn": "RunnerRegistry.leaveHive", "offset": [3191, 3244], "op": "SLOAD", "path": "57"}, "887": {"op": "PUSH1", "value": "0x1"}, "889": {"op": "PUSH1", "value": "0x1"}, "891": {"op": "PUSH1", "value": "0xA0"}, "893": {"op": "SHL"}, "894": {"op": "SUB"}, "895": {"op": "NOT"}, "896": {"fn": "RunnerRegistry.leaveHive", "offset": [3191, 3244], "op": "AND", "path": "57"}, "897": {"fn": "RunnerRegistry.leaveHive", "offset": [3191, 3244], "op": "SWAP1", "path": "57"}, "898": {"fn": "RunnerRegistry.leaveHive", "offset": [3191, 3244], "op": "SSTORE", "path": "57"}, "899": {"fn": "RunnerRegistry.leaveHive", "offset": [3260, 3286], "op": "SWAP1", "path": "57", "statement": 17}, "900": {"fn": "RunnerRegistry.leaveHive", "offset": [3260, 3286], "op": "MLOAD", "path": "57"}, "901": {"op": "PUSH1", "value": "0x1"}, "903": {"op": "PUSH1", "value": "0x1"}, "905": {"op": "PUSH1", "value": "0xA0"}, "907": {"op": "SHL"}, "908": {"op": "SUB"}, "909": {"op": "DUP5"}, "910": {"op": "AND"}, "911": {"op": "DUP2"}, "912": {"op": "MSTORE"}, "913": {"fn": "RunnerRegistry.leaveHive", "offset": [3260, 3286], "op": "PUSH32", "path": "57", "value": "0x1AA8F3D5ECDB1EF733EDFF597610B58EAE2965AD6EA2284E24098ECFD487C886"}, "946": {"fn": "RunnerRegistry.leaveHive", "offset": [3260, 3286], "op": "SWAP2", "path": "57"}, "947": {"op": "ADD"}, "948": {"fn": "RunnerRegistry.leaveHive", "offset": [3260, 3286], "op": "PUSH1", "path": "57", "value": "0x40"}, "950": {"fn": "RunnerRegistry.leaveHive", "offset": [3260, 3286], "op": "MLOAD", "path": "57"}, "951": {"fn": "RunnerRegistry.leaveHive", "offset": [3260, 3286], "op": "DUP1", "path": "57"}, "952": {"fn": "RunnerRegistry.leaveHive", "offset": [3260, 3286], "op": "SWAP2", "path": "57"}, "953": {"fn": "RunnerRegistry.leaveHive", "offset": [3260, 3286], "op": "SUB", "path": "57"}, "954": {"fn": "RunnerRegistry.leaveHive", "offset": [3260, 3286], "op": "SWAP1", "path": "57"}, "955": {"fn": "RunnerRegistry.leaveHive", "offset": [3260, 3286], "op": "LOG2", "path": "57"}, "956": {"fn": "RunnerRegistry.leaveHive", "offset": [2781, 3293], "op": "POP", "path": "57"}, "957": {"fn": "RunnerRegistry.leaveHive", "offset": [2781, 3293], "op": "POP", "path": "57"}, "958": {"fn": "RunnerRegistry.leaveHive", "jump": "o", "offset": [2781, 3293], "op": "JUMP", "path": "57"}, "959": {"fn": "RunnerRegistry.updateMaxMetresPerTrip", "offset": [1727, 2139], "op": "JUMPDEST", "path": "57"}, "960": {"fn": "RunnerRegistry.updateMaxMetresPerTrip", "offset": [1805, 1841], "op": "PUSH2", "path": "57", "statement": 18, "value": "0x3C7"}, "963": {"fn": "RunnerRegistry.updateMaxMetresPerTrip", "offset": [1805, 1839], "op": "PUSH2", "path": "57", "value": "0x654"}, "966": {"fn": "RunnerRegistry.updateMaxMetresPerTrip", "jump": "i", "offset": [1805, 1841], "op": "JUMP", "path": "57"}, "967": {"fn": "RunnerRegistry.updateMaxMetresPerTrip", "offset": [1805, 1841], "op": "JUMPDEST", "path": "57"}, "968": {"fn": "RunnerRegistry.updateMaxMetresPerTrip", "offset": [1851, 1882], "op": "PUSH2", "path": "57", "statement": 19, "value": "0x3CF"}, "971": {"fn": "RunnerRegistry.updateMaxMetresPerTrip", "offset": [1851, 1880], "op": "PUSH2", "path": "57", "value": "0x4AE"}, "974": {"fn": "RunnerRegistry.updateMaxMetresPerTrip", "jump": "i", "offset": [1851, 1882], "op": "JUMP", "path": "57"}, "975": {"fn": "RunnerRegistry.updateMaxMetresPerTrip", "offset": [1851, 1882], "op": "JUMPDEST", "path": "57"}, "976": {"fn": "RunnerRegistry.updateMaxMetresPerTrip", "offset": [2052, 2069], "op": "DUP1", "path": "57", "statement": 20}, "977": {"op": "PUSH1", "value": "0x0"}, "979": {"op": "DUP1"}, "980": {"op": "MLOAD"}, "981": {"op": "PUSH1", "value": "0x20"}, "983": {"op": "PUSH2", "value": "0xC58"}, "986": {"op": "DUP4"}, "987": {"op": "CODECOPY"}, "988": {"op": "DUP2"}, "989": {"op": "MLOAD"}, "990": {"op": "SWAP2"}, "991": {"op": "MSTORE"}, "992": {"fn": "RunnerRegistry.updateMaxMetresPerTrip", "offset": [2008, 2018], "op": "CALLER", "path": "57"}, "993": {"fn": "RunnerRegistry.updateMaxMetresPerTrip", "offset": [1922, 2007], "op": "PUSH1", "path": "57", "value": "0x0"}, "995": {"fn": "RunnerRegistry.updateMaxMetresPerTrip", "offset": [1922, 2019], "op": "DUP2", "path": "57"}, "996": {"fn": "RunnerRegistry.updateMaxMetresPerTrip", "offset": [1922, 2019], "op": "DUP2", "path": "57"}, "997": {"fn": "RunnerRegistry.updateMaxMetresPerTrip", "offset": [1922, 2019], "op": "MSTORE", "path": "57"}, "998": {"fn": "RunnerRegistry.updateMaxMetresPerTrip", "offset": [1922, 2019], "op": "PUSH1", "path": "57", "value": "0x20"}, "1000": {"fn": "RunnerRegistry.updateMaxMetresPerTrip", "offset": [1922, 2019], "op": "SWAP3", "path": "57"}, "1001": {"fn": "RunnerRegistry.updateMaxMetresPerTrip", "offset": [1922, 2019], "op": "DUP4", "path": "57"}, "1002": {"fn": "RunnerRegistry.updateMaxMetresPerTrip", "offset": [1922, 2019], "op": "MSTORE", "path": "57"}, "1003": {"fn": "RunnerRegistry.updateMaxMetresPerTrip", "offset": [1922, 2019], "op": "PUSH1", "path": "57", "value": "0x40"}, "1005": {"fn": "RunnerRegistry.updateMaxMetresPerTrip", "offset": [1922, 2019], "op": "SWAP1", "path": "57"}, "1006": {"fn": "RunnerRegistry.updateMaxMetresPerTrip", "offset": [1922, 2019], "op": "DUP2", "path": "57"}, "1007": {"fn": "RunnerRegistry.updateMaxMetresPerTrip", "offset": [1922, 2019], "op": "SWAP1", "path": "57"}, "1008": {"fn": "RunnerRegistry.updateMaxMetresPerTrip", "offset": [1922, 2019], "op": "KECCAK256", "path": "57"}, "1009": {"fn": "RunnerRegistry.updateMaxMetresPerTrip", "offset": [1922, 2049], "op": "PUSH1", "path": "57", "value": "0x3"}, "1011": {"fn": "RunnerRegistry.updateMaxMetresPerTrip", "offset": [1922, 2049], "op": "ADD", "path": "57"}, "1012": {"fn": "RunnerRegistry.updateMaxMetresPerTrip", "offset": [1922, 2069], "op": "SWAP4", "path": "57"}, "1013": {"fn": "RunnerRegistry.updateMaxMetresPerTrip", "offset": [1922, 2069], "op": "SWAP1", "path": "57"}, "1014": {"fn": "RunnerRegistry.updateMaxMetresPerTrip", "offset": [1922, 2069], "op": "SWAP4", "path": "57"}, "1015": {"fn": "RunnerRegistry.updateMaxMetresPerTrip", "offset": [1922, 2069], "op": "SSTORE", "path": "57"}, "1016": {"fn": "RunnerRegistry.updateMaxMetresPerTrip", "offset": [2085, 2132], "op": "SWAP2", "path": "57", "statement": 21}, "1017": {"fn": "RunnerRegistry.updateMaxMetresPerTrip", "offset": [2085, 2132], "op": "MLOAD", "path": "57"}, "1018": {"op": "DUP4"}, "1019": {"op": "DUP2"}, "1020": {"op": "MSTORE"}, "1021": {"fn": "RunnerRegistry.updateMaxMetresPerTrip", "offset": [2085, 2132], "op": "PUSH32", "path": "57", "value": "0xAEF18A1F27CEA243EF8B5C93390F8949553FBBDC3FF5CC6AC21F70196B2FA1DD"}, "1054": {"fn": "RunnerRegistry.updateMaxMetresPerTrip", "offset": [2085, 2132], "op": "SWAP2", "path": "57"}, "1055": {"op": "ADD"}, "1056": {"fn": "RunnerRegistry.updateMaxMetresPerTrip", "offset": [2085, 2132], "op": "PUSH1", "path": "57", "value": "0x40"}, "1058": {"fn": "RunnerRegistry.updateMaxMetresPerTrip", "offset": [2085, 2132], "op": "MLOAD", "path": "57"}, "1059": {"fn": "RunnerRegistry.updateMaxMetresPerTrip", "offset": [2085, 2132], "op": "DUP1", "path": "57"}, "1060": {"fn": "RunnerRegistry.updateMaxMetresPerTrip", "offset": [2085, 2132], "op": "SWAP2", "path": "57"}, "1061": {"fn": "RunnerRegistry.updateMaxMetresPerTrip", "offset": [2085, 2132], "op": "SUB", "path": "57"}, "1062": {"fn": "RunnerRegistry.updateMaxMetresPerTrip", "offset": [2085, 2132], "op": "SWAP1", "path": "57"}, "1063": {"fn": "RunnerRegistry.updateMaxMetresPerTrip", "offset": [2085, 2132], "op": "LOG2", "path": "57"}, "1064": {"fn": "RunnerRegistry.updateMaxMetresPerTrip", "offset": [1727, 2139], "op": "POP", "path": "57"}, "1065": {"fn": "RunnerRegistry.updateMaxMetresPerTrip", "jump": "o", "offset": [1727, 2139], "op": "JUMP", "path": "57"}, "1066": {"fn": "LibAccessControl._requireOnlyRole", "offset": [1030, 1119], "op": "JUMPDEST", "path": "78"}, "1067": {"fn": "LibAccessControl._requireOnlyRole", "offset": [1095, 1112], "op": "PUSH2", "path": "78", "statement": 22, "value": "0x433"}, "1070": {"fn": "LibAccessControl._requireOnlyRole", "offset": [1106, 1111], "op": "DUP2", "path": "78"}, "1071": {"fn": "LibAccessControl._requireOnlyRole", "offset": [1095, 1105], "op": "PUSH2", "path": "78", "value": "0x6C9"}, "1074": {"fn": "LibAccessControl._requireOnlyRole", "jump": "i", "offset": [1095, 1112], "op": "JUMP", "path": "78"}, "1075": {"fn": "LibAccessControl._requireOnlyRole", "offset": [1095, 1112], "op": "JUMPDEST", "path": "78"}, "1076": {"fn": "LibAccessControl._requireOnlyRole", "offset": [1030, 1119], "op": "POP", "path": "78"}, "1077": {"fn": "LibAccessControl._requireOnlyRole", "jump": "o", "offset": [1030, 1119], "op": "JUMP", "path": "78"}, "1078": {"fn": "LibRunnerRegistry._requireNotRunner", "offset": [931, 1203], "op": "JUMPDEST", "path": "77"}, "1079": {"fn": "LibRunnerRegistry._requireNotRunner", "offset": [1099, 1109], "op": "CALLER", "path": "77", "statement": 23}, "1080": {"fn": "LibRunnerRegistry._requireNotRunner", "offset": [1005, 1098], "op": "PUSH1", "path": "77", "value": "0x0"}, "1082": {"fn": "LibRunnerRegistry._requireNotRunner", "offset": [1005, 1110], "op": "SWAP1", "path": "77"}, "1083": {"fn": "LibRunnerRegistry._requireNotRunner", "offset": [1005, 1110], "op": "DUP2", "path": "77"}, "1084": {"fn": "LibRunnerRegistry._requireNotRunner", "offset": [1005, 1110], "op": "MSTORE", "path": "77"}, "1085": {"op": "PUSH1", "value": "0x0"}, "1087": {"op": "DUP1"}, "1088": {"op": "MLOAD"}, "1089": {"op": "PUSH1", "value": "0x20"}, "1091": {"op": "PUSH2", "value": "0xC58"}, "1094": {"op": "DUP4"}, "1095": {"op": "CODECOPY"}, "1096": {"op": "DUP2"}, "1097": {"op": "MLOAD"}, "1098": {"op": "SWAP2"}, "1099": {"op": "MSTORE"}, "1100": {"fn": "LibRunnerRegistry._requireNotRunner", "offset": [1005, 1110], "op": "PUSH1", "path": "77", "value": "0x20"}, "1102": {"fn": "LibRunnerRegistry._requireNotRunner", "offset": [1005, 1110], "op": "MSTORE", "path": "77"}, "1103": {"fn": "LibRunnerRegistry._requireNotRunner", "offset": [1005, 1110], "op": "PUSH1", "path": "77", "value": "0x40"}, "1105": {"fn": "LibRunnerRegistry._requireNotRunner", "offset": [1005, 1110], "op": "SWAP1", "path": "77"}, "1106": {"fn": "LibRunnerRegistry._requireNotRunner", "offset": [1005, 1110], "op": "KECCAK256", "path": "77"}, "1107": {"fn": "LibRunnerRegistry._requireNotRunner", "offset": [1005, 1130], "op": "SLOAD", "path": "77"}, "1108": {"branch": 42, "fn": "LibRunnerRegistry._requireNotRunner", "offset": [1005, 1135], "op": "ISZERO", "path": "77"}, "1109": {"fn": "LibRunnerRegistry._requireNotRunner", "offset": [984, 1196], "op": "PUSH2", "path": "77", "value": "0x4AC"}, "1112": {"branch": 42, "fn": "LibRunnerRegistry._requireNotRunner", "offset": [984, 1196], "op": "JUMPI", "path": "77"}, "1113": {"fn": "LibRunnerRegistry._requireNotRunner", "offset": [984, 1196], "op": "PUSH1", "path": "77", "value": "0x40"}, "1115": {"fn": "LibRunnerRegistry._requireNotRunner", "offset": [984, 1196], "op": "MLOAD", "path": "77"}, "1116": {"op": "PUSH3", "value": "0x461BCD"}, "1120": {"op": "PUSH1", "value": "0xE5"}, "1122": {"op": "SHL"}, "1123": {"fn": "LibRunnerRegistry._requireNotRunner", "offset": [984, 1196], "op": "DUP2", "path": "77"}, "1124": {"fn": "LibRunnerRegistry._requireNotRunner", "offset": [984, 1196], "op": "MSTORE", "path": "77"}, "1125": {"op": "PUSH1", "value": "0x20"}, "1127": {"fn": "LibRunnerRegistry._requireNotRunner", "offset": [984, 1196], "op": "PUSH1", "path": "77", "value": "0x4"}, "1129": {"fn": "LibRunnerRegistry._requireNotRunner", "offset": [984, 1196], "op": "DUP3", "path": "77"}, "1130": {"fn": "LibRunnerRegistry._requireNotRunner", "offset": [984, 1196], "op": "ADD", "path": "77"}, "1131": {"op": "MSTORE"}, "1132": {"op": "PUSH1", "value": "0x23"}, "1134": {"op": "PUSH1", "value": "0x24"}, "1136": {"op": "DUP3"}, "1137": {"op": "ADD"}, "1138": {"op": "MSTORE"}, "1139": {"op": "PUSH32", "value": "0x4C696252756E6E657252656769737472793A2063616C6C65722069732072756E"}, "1172": {"op": "PUSH1", "value": "0x44"}, "1174": {"op": "DUP3"}, "1175": {"op": "ADD"}, "1176": {"op": "MSTORE"}, "1177": {"op": "PUSH3", "value": "0x3732B9"}, "1181": {"op": "PUSH1", "value": "0xE9"}, "1183": {"op": "SHL"}, "1184": {"op": "PUSH1", "value": "0x64"}, "1186": {"op": "DUP3"}, "1187": {"op": "ADD"}, "1188": {"op": "MSTORE"}, "1189": {"op": "PUSH1", "value": "0x84"}, "1191": {"op": "ADD"}, "1192": {"fn": "LibRunnerRegistry._requireNotRunner", "offset": [984, 1196], "op": "PUSH2", "path": "77", "value": "0x1C7"}, "1195": {"op": "JUMP"}, "1196": {"fn": "LibRunnerRegistry._requireNotRunner", "offset": [984, 1196], "op": "JUMPDEST", "path": "77"}, "1197": {"fn": "LibRunnerRegistry._requireNotRunner", "jump": "o", "offset": [931, 1203], "op": "JUMP", "path": "77"}, "1198": {"fn": "LibJobBoard._requireNotActive", "offset": [1405, 1593], "op": "JUMPDEST", "path": "70"}, "1199": {"fn": "LibJobBoard._requireNotActive", "offset": [1515, 1525], "op": "CALLER", "path": "70", "statement": 24}, "1200": {"fn": "LibJobBoard._requireNotActive", "offset": [1479, 1526], "op": "PUSH1", "path": "70", "value": "0x0"}, "1202": {"fn": "LibJobBoard._requireNotActive", "offset": [1479, 1526], "op": "SWAP1", "path": "70"}, "1203": {"fn": "LibJobBoard._requireNotActive", "offset": [1479, 1526], "op": "DUP2", "path": "70"}, "1204": {"fn": "LibJobBoard._requireNotActive", "offset": [1479, 1526], "op": "MSTORE", "path": "70"}, "1205": {"fn": "LibJobBoard._requireNotActive", "offset": [1479, 1514], "op": "PUSH32", "path": "70", "value": "0xE79924097CCC2E2B47E332DE4C30D72ABC5A8153CCA3B67CC7A0F5258CD81DE9"}, "1238": {"fn": "LibJobBoard._requireNotActive", "offset": [1479, 1526], "op": "PUSH1", "path": "70", "value": "0x20"}, "1240": {"fn": "LibJobBoard._requireNotActive", "offset": [1479, 1526], "op": "MSTORE", "path": "70"}, "1241": {"fn": "LibJobBoard._requireNotActive", "offset": [1479, 1526], "op": "PUSH1", "path": "70", "value": "0x40"}, "1243": {"fn": "LibJobBoard._requireNotActive", "offset": [1479, 1526], "op": "SWAP1", "path": "70"}, "1244": {"fn": "LibJobBoard._requireNotActive", "offset": [1479, 1526], "op": "KECCAK256", "path": "70"}, "1245": {"fn": "LibJobBoard._requireNotActive", "offset": [1479, 1526], "op": "SLOAD", "path": "70"}, "1246": {"branch": 41, "fn": "LibJobBoard._requireNotActive", "offset": [1479, 1531], "op": "ISZERO", "path": "70"}, "1247": {"fn": "LibJobBoard._requireNotActive", "offset": [1458, 1586], "op": "PUSH2", "path": "70", "value": "0x4AC"}, "1250": {"branch": 41, "fn": "LibJobBoard._requireNotActive", "offset": [1458, 1586], "op": "JUMPI", "path": "70"}, "1251": {"fn": "LibJobBoard._requireNotActive", "offset": [1458, 1586], "op": "PUSH1", "path": "70", "value": "0x40"}, "1253": {"fn": "LibJobBoard._requireNotActive", "offset": [1458, 1586], "op": "MLOAD", "path": "70"}, "1254": {"op": "PUSH3", "value": "0x461BCD"}, "1258": {"op": "PUSH1", "value": "0xE5"}, "1260": {"op": "SHL"}, "1261": {"fn": "LibJobBoard._requireNotActive", "offset": [1458, 1586], "op": "DUP2", "path": "70"}, "1262": {"fn": "LibJobBoard._requireNotActive", "offset": [1458, 1586], "op": "MSTORE", "path": "70"}, "1263": {"op": "PUSH1", "value": "0x20"}, "1265": {"fn": "LibJobBoard._requireNotActive", "offset": [1458, 1586], "op": "PUSH1", "path": "70", "value": "0x4"}, "1267": {"fn": "LibJobBoard._requireNotActive", "offset": [1458, 1586], "op": "DUP3", "path": "70"}, "1268": {"fn": "LibJobBoard._requireNotActive", "offset": [1458, 1586], "op": "ADD", "path": "70"}, "1269": {"op": "MSTORE"}, "1270": {"op": "PUSH1", "value": "0x1D"}, "1272": {"op": "PUSH1", "value": "0x24"}, "1274": {"op": "DUP3"}, "1275": {"op": "ADD"}, "1276": {"op": "MSTORE"}, "1277": {"op": "PUSH32", "value": "0x4C69624A6F62426F6172643A2063616C6C657220697320616374697665000000"}, "1310": {"op": "PUSH1", "value": "0x44"}, "1312": {"op": "DUP3"}, "1313": {"op": "ADD"}, "1314": {"op": "MSTORE"}, "1315": {"op": "PUSH1", "value": "0x64"}, "1317": {"op": "ADD"}, "1318": {"fn": "LibJobBoard._requireNotActive", "offset": [1458, 1586], "op": "PUSH2", "path": "70", "value": "0x1C7"}, "1321": {"op": "JUMP"}, "1322": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2019, 2756], "op": "JUMPDEST", "path": "77"}, "1323": {"op": "PUSH1", "value": "0x1"}, "1325": {"op": "PUSH1", "value": "0x1"}, "1327": {"op": "PUSH1", "value": "0xA0"}, "1329": {"op": "SHL"}, "1330": {"op": "SUB"}, "1331": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2287, 2319], "op": "DUP4", "path": "77", "statement": 25}, "1332": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2287, 2319], "op": "DUP2", "path": "77"}, "1333": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2287, 2319], "op": "AND", "path": "77"}, "1334": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2155, 2201], "op": "PUSH1", "path": "77", "value": "0x0"}, "1336": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2287, 2319], "op": "SWAP1", "path": "77"}, "1337": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2287, 2319], "op": "DUP2", "path": "77"}, "1338": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2287, 2319], "op": "MSTORE", "path": "77"}, "1339": {"op": "PUSH1", "value": "0x0"}, "1341": {"op": "DUP1"}, "1342": {"op": "MLOAD"}, "1343": {"op": "PUSH1", "value": "0x20"}, "1345": {"op": "PUSH2", "value": "0xC58"}, "1348": {"op": "DUP4"}, "1349": {"op": "CODECOPY"}, "1350": {"op": "DUP2"}, "1351": {"op": "MLOAD"}, "1352": {"op": "SWAP2"}, "1353": {"op": "MSTORE"}, "1354": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2287, 2319], "op": "PUSH1", "path": "77", "value": "0x20"}, "1356": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2287, 2319], "op": "DUP2", "path": "77"}, "1357": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2287, 2319], "op": "SWAP1", "path": "77"}, "1358": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2287, 2319], "op": "MSTORE", "path": "77"}, "1359": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2287, 2319], "op": "PUSH1", "path": "77", "value": "0x40"}, "1361": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2287, 2319], "op": "SWAP1", "path": "77"}, "1362": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2287, 2319], "op": "SWAP2", "path": "77"}, "1363": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2287, 2319], "op": "KECCAK256", "path": "77"}, "1364": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2287, 2324], "op": "PUSH1", "path": "77", "value": "0x2"}, "1366": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2287, 2324], "op": "ADD", "path": "77"}, "1367": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2287, 2324], "op": "SLOAD", "path": "77"}, "1368": {"offset": [227, 255], "op": "SWAP1", "path": "76"}, "1369": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [227, 255], "op": "SWAP2", "path": "76"}, "1370": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2287, 2324], "op": "AND", "path": "77"}, "1371": {"branch": 43, "fn": "LibRunnerRegistry._approveApplicant", "offset": [2287, 2338], "op": "ISZERO", "path": "77"}, "1372": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2266, 2407], "op": "PUSH2", "path": "77", "value": "0x5BB"}, "1375": {"branch": 43, "fn": "LibRunnerRegistry._approveApplicant", "offset": [2266, 2407], "op": "JUMPI", "path": "77"}, "1376": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2266, 2407], "op": "PUSH1", "path": "77", "value": "0x40"}, "1378": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2266, 2407], "op": "MLOAD", "path": "77"}, "1379": {"op": "PUSH3", "value": "0x461BCD"}, "1383": {"op": "PUSH1", "value": "0xE5"}, "1385": {"op": "SHL"}, "1386": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2266, 2407], "op": "DUP2", "path": "77"}, "1387": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2266, 2407], "op": "MSTORE", "path": "77"}, "1388": {"op": "PUSH1", "value": "0x20"}, "1390": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2266, 2407], "op": "PUSH1", "path": "77", "value": "0x4"}, "1392": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2266, 2407], "op": "DUP3", "path": "77"}, "1393": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2266, 2407], "op": "ADD", "path": "77"}, "1394": {"op": "MSTORE"}, "1395": {"op": "PUSH1", "value": "0x2B"}, "1397": {"op": "PUSH1", "value": "0x24"}, "1399": {"op": "DUP3"}, "1400": {"op": "ADD"}, "1401": {"op": "MSTORE"}, "1402": {"op": "PUSH32", "value": "0x4C696252756E6E657252656769737472793A206869766520657869737420666F"}, "1435": {"op": "PUSH1", "value": "0x44"}, "1437": {"op": "DUP3"}, "1438": {"op": "ADD"}, "1439": {"op": "MSTORE"}, "1440": {"op": "PUSH11", "value": "0x1C88185C1C1B1A58D85B9D"}, "1452": {"op": "PUSH1", "value": "0xAA"}, "1454": {"op": "SHL"}, "1455": {"op": "PUSH1", "value": "0x64"}, "1457": {"op": "DUP3"}, "1458": {"op": "ADD"}, "1459": {"op": "MSTORE"}, "1460": {"op": "PUSH1", "value": "0x84"}, "1462": {"op": "ADD"}, "1463": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2266, 2407], "op": "PUSH2", "path": "77", "value": "0x1C7"}, "1466": {"op": "JUMP"}, "1467": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2266, 2407], "op": "JUMPDEST", "path": "77"}, "1468": {"op": "PUSH1", "value": "0x1"}, "1470": {"op": "PUSH1", "value": "0x1"}, "1472": {"op": "PUSH1", "value": "0xA0"}, "1474": {"op": "SHL"}, "1475": {"op": "SUB"}, "1476": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2417, 2449], "op": "DUP5", "path": "77", "statement": 26}, "1477": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2417, 2449], "op": "AND", "path": "77"}, "1478": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2417, 2440], "op": "PUSH1", "path": "77", "value": "0x0"}, "1480": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2417, 2449], "op": "SWAP1", "path": "77"}, "1481": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2417, 2449], "op": "DUP2", "path": "77"}, "1482": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2417, 2449], "op": "MSTORE", "path": "77"}, "1483": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2417, 2449], "op": "PUSH1", "path": "77", "value": "0x20"}, "1485": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2417, 2449], "op": "DUP3", "path": "77"}, "1486": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2417, 2449], "op": "DUP2", "path": "77"}, "1487": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2417, 2449], "op": "MSTORE", "path": "77"}, "1488": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2417, 2449], "op": "PUSH1", "path": "77", "value": "0x40"}, "1490": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2417, 2449], "op": "SWAP1", "path": "77"}, "1491": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2417, 2449], "op": "SWAP2", "path": "77"}, "1492": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2417, 2449], "op": "KECCAK256", "path": "77"}, "1493": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2417, 2460], "op": "DUP5", "path": "77"}, "1494": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2417, 2460], "op": "MLOAD", "path": "77"}, "1495": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2417, 2460], "op": "PUSH2", "path": "77", "value": "0x5E8"}, "1498": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2417, 2460], "op": "SWAP3", "path": "77"}, "1499": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2417, 2453], "op": "PUSH1", "path": "77", "value": "0x1"}, "1501": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2417, 2453], "op": "SWAP1", "path": "77"}, "1502": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2417, 2453], "op": "SWAP3", "path": "77"}, "1503": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2417, 2453], "op": "ADD", "path": "77"}, "1504": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2417, 2453], "op": "SWAP2", "path": "77"}, "1505": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2417, 2460], "op": "DUP7", "path": "77"}, "1506": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2417, 2460], "op": "ADD", "path": "77"}, "1507": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2417, 2460], "op": "SWAP1", "path": "77"}, "1508": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2417, 2460], "op": "PUSH2", "path": "77", "value": "0x94F"}, "1511": {"fn": "LibRunnerRegistry._approveApplicant", "jump": "i", "offset": [2417, 2460], "op": "JUMP", "path": "77"}, "1512": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2417, 2460], "op": "JUMPDEST", "path": "77"}, "1513": {"op": "POP"}, "1514": {"op": "PUSH1", "value": "0x1"}, "1516": {"op": "PUSH1", "value": "0x1"}, "1518": {"op": "PUSH1", "value": "0xA0"}, "1520": {"op": "SHL"}, "1521": {"op": "SUB"}, "1522": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2526, 2558], "op": "DUP5", "path": "77", "statement": 27}, "1523": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2526, 2558], "op": "DUP2", "path": "77"}, "1524": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2526, 2558], "op": "AND", "path": "77"}, "1525": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2526, 2549], "op": "PUSH1", "path": "77", "value": "0x0"}, "1527": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2526, 2558], "op": "DUP2", "path": "77"}, "1528": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2526, 2558], "op": "DUP2", "path": "77"}, "1529": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2526, 2558], "op": "MSTORE", "path": "77"}, "1530": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2526, 2558], "op": "PUSH1", "path": "77", "value": "0x20"}, "1532": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2526, 2558], "op": "DUP5", "path": "77"}, "1533": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2526, 2558], "op": "DUP2", "path": "77"}, "1534": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2526, 2558], "op": "MSTORE", "path": "77"}, "1535": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2526, 2558], "op": "PUSH1", "path": "77", "value": "0x40"}, "1537": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2526, 2558], "op": "SWAP2", "path": "77"}, "1538": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2526, 2558], "op": "DUP3", "path": "77"}, "1539": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2526, 2558], "op": "SWAP1", "path": "77"}, "1540": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2526, 2558], "op": "KECCAK256", "path": "77"}, "1541": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2526, 2563], "op": "PUSH1", "path": "77", "value": "0x2"}, "1543": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2526, 2563], "op": "ADD", "path": "77"}, "1544": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2526, 2579], "op": "DUP1", "path": "77"}, "1545": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2526, 2579], "op": "SLOAD", "path": "77"}, "1546": {"op": "PUSH1", "value": "0x1"}, "1548": {"op": "PUSH1", "value": "0x1"}, "1550": {"op": "PUSH1", "value": "0xA0"}, "1552": {"op": "SHL"}, "1553": {"op": "SUB"}, "1554": {"op": "NOT"}, "1555": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2526, 2579], "op": "AND", "path": "77"}, "1556": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2526, 2579], "op": "SWAP5", "path": "77"}, "1557": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2526, 2579], "op": "DUP8", "path": "77"}, "1558": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2526, 2579], "op": "AND", "path": "77"}, "1559": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2526, 2579], "op": "SWAP5", "path": "77"}, "1560": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2526, 2579], "op": "SWAP1", "path": "77"}, "1561": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2526, 2579], "op": "SWAP5", "path": "77"}, "1562": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2526, 2579], "op": "OR", "path": "77"}, "1563": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2526, 2579], "op": "SWAP1", "path": "77"}, "1564": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2526, 2579], "op": "SWAP4", "path": "77"}, "1565": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2526, 2579], "op": "SSTORE", "path": "77"}, "1566": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2711, 2749], "op": "MLOAD", "path": "77", "statement": 28}, "1567": {"op": "SWAP1"}, "1568": {"op": "DUP2"}, "1569": {"op": "MSTORE"}, "1570": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2729, 2739], "op": "CALLER", "path": "77"}, "1571": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2729, 2739], "op": "SWAP2", "path": "77"}, "1572": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2711, 2749], "op": "PUSH32", "path": "77", "value": "0x7D3D460AE2321C55DD17CA0374131D12B043780B662E61564B5C62ED6958218C"}, "1605": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2711, 2749], "op": "SWAP2", "path": "77"}, "1606": {"op": "ADD"}, "1607": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2711, 2749], "op": "PUSH1", "path": "77", "value": "0x40"}, "1609": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2711, 2749], "op": "MLOAD", "path": "77"}, "1610": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2711, 2749], "op": "DUP1", "path": "77"}, "1611": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2711, 2749], "op": "SWAP2", "path": "77"}, "1612": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2711, 2749], "op": "SUB", "path": "77"}, "1613": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2711, 2749], "op": "SWAP1", "path": "77"}, "1614": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2711, 2749], "op": "LOG2", "path": "77"}, "1615": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2019, 2756], "op": "POP", "path": "77"}, "1616": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2019, 2756], "op": "POP", "path": "77"}, "1617": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2019, 2756], "op": "POP", "path": "77"}, "1618": {"fn": "LibRunnerRegistry._approveApplicant", "offset": [2019, 2756], "op": "POP", "path": "77"}, "1619": {"fn": "LibRunnerRegistry._approveApplicant", "jump": "o", "offset": [2019, 2756], "op": "JUMP", "path": "77"}, "1620": {"fn": "LibRunnerRegistry._requireIsRunner", "offset": [653, 925], "op": "JUMPDEST", "path": "77"}, "1621": {"fn": "LibRunnerRegistry._requireIsRunner", "offset": [820, 830], "op": "CALLER", "path": "77", "statement": 29}, "1622": {"fn": "LibRunnerRegistry._requireIsRunner", "offset": [726, 819], "op": "PUSH1", "path": "77", "value": "0x0"}, "1624": {"fn": "LibRunnerRegistry._requireIsRunner", "offset": [726, 831], "op": "SWAP1", "path": "77"}, "1625": {"fn": "LibRunnerRegistry._requireIsRunner", "offset": [726, 831], "op": "DUP2", "path": "77"}, "1626": {"fn": "LibRunnerRegistry._requireIsRunner", "offset": [726, 831], "op": "MSTORE", "path": "77"}, "1627": {"op": "PUSH1", "value": "0x0"}, "1629": {"op": "DUP1"}, "1630": {"op": "MLOAD"}, "1631": {"op": "PUSH1", "value": "0x20"}, "1633": {"op": "PUSH2", "value": "0xC58"}, "1636": {"op": "DUP4"}, "1637": {"op": "CODECOPY"}, "1638": {"op": "DUP2"}, "1639": {"op": "MLOAD"}, "1640": {"op": "SWAP2"}, "1641": {"op": "MSTORE"}, "1642": {"fn": "LibRunnerRegistry._requireIsRunner", "offset": [726, 831], "op": "PUSH1", "path": "77", "value": "0x20"}, "1644": {"fn": "LibRunnerRegistry._requireIsRunner", "offset": [726, 831], "op": "MSTORE", "path": "77"}, "1645": {"fn": "LibRunnerRegistry._requireIsRunner", "offset": [726, 831], "op": "PUSH1", "path": "77", "value": "0x40"}, "1647": {"fn": "LibRunnerRegistry._requireIsRunner", "offset": [726, 831], "op": "SWAP1", "path": "77"}, "1648": {"fn": "LibRunnerRegistry._requireIsRunner", "offset": [726, 831], "op": "KECCAK256", "path": "77"}, "1649": {"fn": "LibRunnerRegistry._requireIsRunner", "offset": [726, 851], "op": "SLOAD", "path": "77"}, "1650": {"fn": "LibRunnerRegistry._requireIsRunner", "offset": [705, 918], "op": "PUSH2", "path": "77", "value": "0x4AC"}, "1653": {"fn": "LibRunnerRegistry._requireIsRunner", "offset": [705, 918], "op": "JUMPI", "path": "77"}, "1654": {"fn": "LibRunnerRegistry._requireIsRunner", "offset": [705, 918], "op": "PUSH1", "path": "77", "value": "0x40"}, "1656": {"fn": "LibRunnerRegistry._requireIsRunner", "offset": [705, 918], "op": "MLOAD", "path": "77"}, "1657": {"op": "PUSH3", "value": "0x461BCD"}, "1661": {"op": "PUSH1", "value": "0xE5"}, "1663": {"op": "SHL"}, "1664": {"fn": "LibRunnerRegistry._requireIsRunner", "offset": [705, 918], "op": "DUP2", "path": "77"}, "1665": {"fn": "LibRunnerRegistry._requireIsRunner", "offset": [705, 918], "op": "MSTORE", "path": "77"}, "1666": {"op": "PUSH1", "value": "0x20"}, "1668": {"fn": "LibRunnerRegistry._requireIsRunner", "offset": [705, 918], "op": "PUSH1", "path": "77", "value": "0x4"}, "1670": {"fn": "LibRunnerRegistry._requireIsRunner", "offset": [705, 918], "op": "DUP3", "path": "77"}, "1671": {"fn": "LibRunnerRegistry._requireIsRunner", "offset": [705, 918], "op": "ADD", "path": "77"}, "1672": {"op": "MSTORE"}, "1673": {"op": "PUSH1", "value": "0x24"}, "1675": {"op": "DUP1"}, "1676": {"op": "DUP3"}, "1677": {"op": "ADD"}, "1678": {"op": "MSTORE"}, "1679": {"op": "PUSH32", "value": "0x4C696252756E6E657252656769737472793A2063616C6C6572206E6F74207275"}, "1712": {"op": "PUSH1", "value": "0x44"}, "1714": {"op": "DUP3"}, "1715": {"op": "ADD"}, "1716": {"op": "MSTORE"}, "1717": {"op": "PUSH4", "value": "0x373732B9"}, "1722": {"op": "PUSH1", "value": "0xE1"}, "1724": {"op": "SHL"}, "1725": {"op": "PUSH1", "value": "0x64"}, "1727": {"op": "DUP3"}, "1728": {"op": "ADD"}, "1729": {"op": "MSTORE"}, "1730": {"op": "PUSH1", "value": "0x84"}, "1732": {"op": "ADD"}, "1733": {"fn": "LibRunnerRegistry._requireIsRunner", "offset": [705, 918], "op": "PUSH2", "path": "77", "value": "0x1C7"}, "1736": {"op": "JUMP"}, "1737": {"fn": "LibAccessControl._checkRole", "offset": [1317, 1412], "op": "JUMPDEST", "path": "78"}, "1738": {"fn": "LibAccessControl._hasRole", "offset": [1223, 1227], "op": "PUSH1", "path": "78", "value": "0x0"}, "1740": {"fn": "LibAccessControl._hasRole", "offset": [1250, 1286], "op": "DUP2", "path": "78", "statement": 30}, "1741": {"fn": "LibAccessControl._hasRole", "offset": [1250, 1286], "op": "DUP2", "path": "78"}, "1742": {"fn": "LibAccessControl._hasRole", "offset": [1250, 1286], "op": "MSTORE", "path": "78"}, "1743": {"offset": [203, 232], "op": "PUSH32", "path": "78", "value": "0x4CD15452B25E815D3F9D1A3C7EDD985A178EDF5EB3461A1ACBF855517423D694"}, "1776": {"fn": "LibAccessControl._hasRole", "offset": [1250, 1286], "op": "PUSH1", "path": "78", "value": "0x20"}, "1778": {"fn": "LibAccessControl._hasRole", "offset": [1250, 1286], "op": "SWAP1", "path": "78"}, "1779": {"fn": "LibAccessControl._hasRole", "offset": [1250, 1286], "op": "DUP2", "path": "78"}, "1780": {"fn": "LibAccessControl._hasRole", "offset": [1250, 1286], "op": "MSTORE", "path": "78"}, "1781": {"fn": "LibAccessControl._hasRole", "offset": [1250, 1286], "op": "PUSH1", "path": "78", "value": "0x40"}, "1783": {"fn": "LibAccessControl._hasRole", "offset": [1250, 1286], "op": "DUP1", "path": "78"}, "1784": {"fn": "LibAccessControl._hasRole", "offset": [1250, 1286], "op": "DUP4", "path": "78"}, "1785": {"fn": "LibAccessControl._hasRole", "offset": [1250, 1286], "op": "KECCAK256", "path": "78"}, "1786": {"fn": "LibAccessControl._checkRole", "offset": [1394, 1404], "op": "CALLER", "path": "78", "statement": 31}, "1787": {"fn": "LibAccessControl._hasRole", "offset": [1250, 1304], "op": "DUP1", "path": "78"}, "1788": {"fn": "LibAccessControl._hasRole", "offset": [1250, 1304], "op": "DUP6", "path": "78"}, "1789": {"fn": "LibAccessControl._hasRole", "offset": [1250, 1304], "op": "MSTORE", "path": "78"}, "1790": {"fn": "LibAccessControl._hasRole", "offset": [1250, 1304], "op": "SWAP3", "path": "78"}, "1791": {"fn": "LibAccessControl._hasRole", "offset": [1250, 1304], "op": "MSTORE", "path": "78"}, "1792": {"fn": "LibAccessControl._hasRole", "offset": [1250, 1304], "op": "SWAP1", "path": "78"}, "1793": {"fn": "LibAccessControl._hasRole", "offset": [1250, 1304], "op": "SWAP2", "path": "78"}, "1794": {"fn": "LibAccessControl._hasRole", "offset": [1250, 1304], "op": "KECCAK256", "path": "78"}, "1795": {"fn": "LibAccessControl._hasRole", "offset": [1250, 1304], "op": "SLOAD", "path": "78"}, "1796": {"fn": "LibAccessControl._checkRole", "offset": [1376, 1405], "op": "PUSH2", "path": "78", "value": "0x433"}, "1799": {"fn": "LibAccessControl._checkRole", "offset": [1376, 1405], "op": "SWAP2", "path": "78"}, "1800": {"fn": "LibAccessControl._checkRole", "offset": [1387, 1392], "op": "DUP4", "path": "78"}, "1801": {"fn": "LibAccessControl._checkRole", "offset": [1387, 1392], "op": "SWAP2", "path": "78"}, "1802": {"fn": "LibAccessControl._hasRole", "offset": [1250, 1304], "op": "PUSH1", "path": "78", "value": "0xFF"}, "1804": {"fn": "LibAccessControl._hasRole", "offset": [1250, 1304], "op": "AND", "path": "78"}, "1805": {"fn": "LibAccessControl._checkRole", "offset": [1495, 1903], "op": "PUSH2", "path": "78", "value": "0x2C8"}, "1808": {"fn": "LibAccessControl._checkRole", "offset": [1495, 1903], "op": "JUMPI", "path": "78"}, "1809": {"fn": "LibAccessControl._checkRole", "offset": [1686, 1728], "op": "PUSH2", "path": "78", "statement": 32, "value": "0x724"}, "1812": {"fn": "LibAccessControl._checkRole", "offset": [1714, 1722], "op": "DUP2", "path": "78"}, "1813": {"op": "PUSH1", "value": "0x1"}, "1815": {"op": "PUSH1", "value": "0x1"}, "1817": {"op": "PUSH1", "value": "0xA0"}, "1819": {"op": "SHL"}, "1820": {"op": "SUB"}, "1821": {"fn": "LibAccessControl._checkRole", "offset": [1686, 1728], "op": "AND", "path": "78"}, "1822": {"fn": "LibAccessControl._checkRole", "offset": [1725, 1727], "op": "PUSH1", "path": "78", "value": "0x14"}, "1824": {"fn": "LibAccessControl._checkRole", "offset": [1686, 1705], "op": "PUSH2", "path": "78", "value": "0x766"}, "1827": {"fn": "LibAccessControl._checkRole", "jump": "i", "offset": [1686, 1728], "op": "JUMP", "path": "78"}, "1828": {"fn": "LibAccessControl._checkRole", "offset": [1686, 1728], "op": "JUMPDEST", "path": "78"}, "1829": {"fn": "LibAccessControl._checkRole", "offset": [1799, 1838], "op": "PUSH2", "path": "78", "value": "0x72F"}, "1832": {"fn": "LibAccessControl._checkRole", "offset": [1827, 1832], "op": "DUP4", "path": "78"}, "1833": {"fn": "LibAccessControl._checkRole", "offset": [1835, 1837], "op": "PUSH1", "path": "78", "value": "0x20"}, "1835": {"fn": "LibAccessControl._checkRole", "offset": [1799, 1818], "op": "PUSH2", "path": "78", "value": "0x766"}, "1838": {"fn": "LibAccessControl._checkRole", "jump": "i", "offset": [1799, 1838], "op": "JUMP", "path": "78"}, "1839": {"fn": "LibAccessControl._checkRole", "offset": [1799, 1838], "op": "JUMPDEST", "path": "78"}, "1840": {"fn": "LibAccessControl._checkRole", "offset": [1593, 1860], "op": "PUSH1", "path": "78", "value": "0x40"}, "1842": {"fn": "LibAccessControl._checkRole", "offset": [1593, 1860], "op": "MLOAD", "path": "78"}, "1843": {"fn": "LibAccessControl._checkRole", "offset": [1593, 1860], "op": "PUSH1", "path": "78", "value": "0x20"}, "1845": {"fn": "LibAccessControl._checkRole", "offset": [1593, 1860], "op": "ADD", "path": "78"}, "1846": {"fn": "LibAccessControl._checkRole", "offset": [1593, 1860], "op": "PUSH2", "path": "78", "value": "0x740"}, "1849": {"fn": "LibAccessControl._checkRole", "offset": [1593, 1860], "op": "SWAP3", "path": "78"}, "1850": {"fn": "LibAccessControl._checkRole", "offset": [1593, 1860], "op": "SWAP2", "path": "78"}, "1851": {"fn": "LibAccessControl._checkRole", "offset": [1593, 1860], "op": "SWAP1", "path": "78"}, "1852": {"fn": "LibAccessControl._checkRole", "offset": [1593, 1860], "op": "PUSH2", "path": "78", "value": "0xACA"}, "1855": {"fn": "LibAccessControl._checkRole", "jump": "i", "offset": [1593, 1860], "op": "JUMP", "path": "78"}, "1856": {"fn": "LibAccessControl._checkRole", "offset": [1593, 1860], "op": "JUMPDEST", "path": "78"}, "1857": {"fn": "LibAccessControl._checkRole", "offset": [1593, 1860], "op": "PUSH1", "path": "78", "value": "0x40"}, "1859": {"fn": "LibAccessControl._checkRole", "offset": [1593, 1860], "op": "DUP1", "path": "78"}, "1860": {"fn": "LibAccessControl._checkRole", "offset": [1593, 1860], "op": "MLOAD", "path": "78"}, "1861": {"op": "PUSH1", "value": "0x1F"}, "1863": {"op": "NOT"}, "1864": {"fn": "LibAccessControl._checkRole", "offset": [1593, 1860], "op": "DUP2", "path": "78"}, "1865": {"fn": "LibAccessControl._checkRole", "offset": [1593, 1860], "op": "DUP5", "path": "78"}, "1866": {"fn": "LibAccessControl._checkRole", "offset": [1593, 1860], "op": "SUB", "path": "78"}, "1867": {"fn": "LibAccessControl._checkRole", "offset": [1593, 1860], "op": "ADD", "path": "78"}, "1868": {"fn": "LibAccessControl._checkRole", "offset": [1593, 1860], "op": "DUP2", "path": "78"}, "1869": {"fn": "LibAccessControl._checkRole", "offset": [1593, 1860], "op": "MSTORE", "path": "78"}, "1870": {"fn": "LibAccessControl._checkRole", "offset": [1593, 1860], "op": "SWAP1", "path": "78"}, "1871": {"fn": "LibAccessControl._checkRole", "offset": [1593, 1860], "op": "DUP3", "path": "78"}, "1872": {"fn": "LibAccessControl._checkRole", "offset": [1593, 1860], "op": "SWAP1", "path": "78"}, "1873": {"fn": "LibAccessControl._checkRole", "offset": [1593, 1860], "op": "MSTORE", "path": "78"}, "1874": {"op": "PUSH3", "value": "0x461BCD"}, "1878": {"op": "PUSH1", "value": "0xE5"}, "1880": {"op": "SHL"}, "1881": {"fn": "LibAccessControl._checkRole", "offset": [1541, 1892], "op": "DUP3", "path": "78"}, "1882": {"fn": "LibAccessControl._checkRole", "offset": [1541, 1892], "op": "MSTORE", "path": "78"}, "1883": {"fn": "LibAccessControl._checkRole", "offset": [1541, 1892], "op": "PUSH2", "path": "78", "value": "0x1C7"}, "1886": {"fn": "LibAccessControl._checkRole", "offset": [1541, 1892], "op": "SWAP2", "path": "78"}, "1887": {"fn": "LibAccessControl._checkRole", "offset": [1541, 1892], "op": "PUSH1", "path": "78", "value": "0x4"}, "1889": {"fn": "LibAccessControl._checkRole", "offset": [1541, 1892], "op": "ADD", "path": "78"}, "1890": {"fn": "LibAccessControl._checkRole", "offset": [1541, 1892], "op": "PUSH2", "path": "78", "value": "0xB3F"}, "1893": {"fn": "LibAccessControl._checkRole", "jump": "i", "offset": [1541, 1892], "op": "JUMP", "path": "78"}, "1894": {"fn": "Strings.toHexString", "offset": [1588, 2029], "op": "JUMPDEST", "path": "25"}, "1895": {"fn": "Strings.toHexString", "offset": [1663, 1676], "op": "PUSH1", "path": "25", "value": "0x60"}, "1897": {"fn": "Strings.toHexString", "offset": [1688, 1707], "op": "PUSH1", "path": "25", "value": "0x0"}, "1899": {"fn": "Strings.toHexString", "offset": [1720, 1730], "op": "PUSH2", "path": "25", "value": "0x775"}, "1902": {"fn": "Strings.toHexString", "offset": [1724, 1730], "op": "DUP4", "path": "25"}, "1903": {"fn": "Strings.toHexString", "offset": [1720, 1721], "op": "PUSH1", "path": "25", "value": "0x2"}, "1905": {"fn": "Strings.toHexString", "offset": [1720, 1730], "op": "PUSH2", "path": "25", "value": "0xB8A"}, "1908": {"fn": "Strings.toHexString", "jump": "i", "offset": [1720, 1730], "op": "JUMP", "path": "25"}, "1909": {"fn": "Strings.toHexString", "offset": [1720, 1730], "op": "JUMPDEST", "path": "25"}, "1910": {"fn": "Strings.toHexString", "offset": [1720, 1734], "op": "PUSH2", "path": "25", "value": "0x780"}, "1913": {"fn": "Strings.toHexString", "offset": [1720, 1734], "op": "SWAP1", "path": "25"}, "1914": {"fn": "Strings.toHexString", "offset": [1733, 1734], "op": "PUSH1", "path": "25", "value": "0x2"}, "1916": {"fn": "Strings.toHexString", "offset": [1720, 1734], "op": "PUSH2", "path": "25", "value": "0xB72"}, "1919": {"fn": "Strings.toHexString", "jump": "i", "offset": [1720, 1734], "op": "JUMP", "path": "25"}, "1920": {"fn": "Strings.toHexString", "offset": [1720, 1734], "op": "JUMPDEST", "path": "25"}, "1921": {"fn": "Strings.toHexString", "offset": [1710, 1735], "op": "PUSH8", "path": "25", "value": "0xFFFFFFFFFFFFFFFF"}, "1930": {"fn": "Strings.toHexString", "offset": [1710, 1735], "op": "DUP2", "path": "25"}, "1931": {"fn": "Strings.toHexString", "offset": [1710, 1735], "op": "GT", "path": "25"}, "1932": {"fn": "Strings.toHexString", "offset": [1710, 1735], "op": "ISZERO", "path": "25"}, "1933": {"fn": "Strings.toHexString", "offset": [1710, 1735], "op": "PUSH2", "path": "25", "value": "0x7A6"}, "1936": {"fn": "Strings.toHexString", "offset": [1710, 1735], "op": "JUMPI", "path": "25"}, "1937": {"op": "PUSH4", "value": "0x4E487B71"}, "1942": {"op": "PUSH1", "value": "0xE0"}, "1944": {"op": "SHL"}, "1945": {"fn": "Strings.toHexString", "offset": [1710, 1735], "op": "PUSH1", "path": "25", "value": "0x0"}, "1947": {"fn": "Strings.toHexString", "offset": [1710, 1735], "op": "MSTORE", "path": "25"}, "1948": {"fn": "Strings.toHexString", "offset": [1710, 1735], "op": "PUSH1", "path": "25", "value": "0x41"}, "1950": {"fn": "Strings.toHexString", "offset": [1710, 1735], "op": "PUSH1", "path": "25", "value": "0x4"}, "1952": {"fn": "Strings.toHexString", "offset": [1710, 1735], "op": "MSTORE", "path": "25"}, "1953": {"fn": "Strings.toHexString", "offset": [1710, 1735], "op": "PUSH1", "path": "25", "value": "0x24"}, "1955": {"fn": "Strings.toHexString", "offset": [1710, 1735], "op": "PUSH1", "path": "25", "value": "0x0"}, "1957": {"fn": "Strings.toHexString", "offset": [1710, 1735], "op": "REVERT", "path": "25"}, "1958": {"fn": "Strings.toHexString", "offset": [1710, 1735], "op": "JUMPDEST", "path": "25"}, "1959": {"fn": "Strings.toHexString", "offset": [1710, 1735], "op": "PUSH1", "path": "25", "value": "0x40"}, "1961": {"fn": "Strings.toHexString", "offset": [1710, 1735], "op": "MLOAD", "path": "25"}, "1962": {"fn": "Strings.toHexString", "offset": [1710, 1735], "op": "SWAP1", "path": "25"}, "1963": {"fn": "Strings.toHexString", "offset": [1710, 1735], "op": "DUP1", "path": "25"}, "1964": {"fn": "Strings.toHexString", "offset": [1710, 1735], "op": "DUP3", "path": "25"}, "1965": {"fn": "Strings.toHexString", "offset": [1710, 1735], "op": "MSTORE", "path": "25"}, "1966": {"fn": "Strings.toHexString", "offset": [1710, 1735], "op": "DUP1", "path": "25"}, "1967": {"fn": "Strings.toHexString", "offset": [1710, 1735], "op": "PUSH1", "path": "25", "value": "0x1F"}, "1969": {"fn": "Strings.toHexString", "offset": [1710, 1735], "op": "ADD", "path": "25"}, "1970": {"fn": "Strings.toHexString", "offset": [1710, 1735], "op": "PUSH1", "path": "25", "value": "0x1F"}, "1972": {"fn": "Strings.toHexString", "offset": [1710, 1735], "op": "NOT", "path": "25"}, "1973": {"fn": "Strings.toHexString", "offset": [1710, 1735], "op": "AND", "path": "25"}, "1974": {"fn": "Strings.toHexString", "offset": [1710, 1735], "op": "PUSH1", "path": "25", "value": "0x20"}, "1976": {"fn": "Strings.toHexString", "offset": [1710, 1735], "op": "ADD", "path": "25"}, "1977": {"fn": "Strings.toHexString", "offset": [1710, 1735], "op": "DUP3", "path": "25"}, "1978": {"fn": "Strings.toHexString", "offset": [1710, 1735], "op": "ADD", "path": "25"}, "1979": {"fn": "Strings.toHexString", "offset": [1710, 1735], "op": "PUSH1", "path": "25", "value": "0x40"}, "1981": {"fn": "Strings.toHexString", "offset": [1710, 1735], "op": "MSTORE", "path": "25"}, "1982": {"fn": "Strings.toHexString", "offset": [1710, 1735], "op": "DUP1", "path": "25"}, "1983": {"fn": "Strings.toHexString", "offset": [1710, 1735], "op": "ISZERO", "path": "25"}, "1984": {"fn": "Strings.toHexString", "offset": [1710, 1735], "op": "PUSH2", "path": "25", "value": "0x7D0"}, "1987": {"fn": "Strings.toHexString", "offset": [1710, 1735], "op": "JUMPI", "path": "25"}, "1988": {"fn": "Strings.toHexString", "offset": [1710, 1735], "op": "PUSH1", "path": "25", "value": "0x20"}, "1990": {"fn": "Strings.toHexString", "offset": [1710, 1735], "op": "DUP3", "path": "25"}, "1991": {"fn": "Strings.toHexString", "offset": [1710, 1735], "op": "ADD", "path": "25"}, "1992": {"fn": "Strings.toHexString", "offset": [1710, 1735], "op": "DUP2", "path": "25"}, "1993": {"fn": "Strings.toHexString", "offset": [1710, 1735], "op": "DUP1", "path": "25"}, "1994": {"fn": "Strings.toHexString", "offset": [1710, 1735], "op": "CALLDATASIZE", "path": "25"}, "1995": {"fn": "Strings.toHexString", "offset": [1710, 1735], "op": "DUP4", "path": "25"}, "1996": {"fn": "Strings.toHexString", "offset": [1710, 1735], "op": "CALLDATACOPY", "path": "25"}, "1997": {"fn": "Strings.toHexString", "offset": [1710, 1735], "op": "ADD", "path": "25"}, "1998": {"fn": "Strings.toHexString", "offset": [1710, 1735], "op": "SWAP1", "path": "25"}, "1999": {"op": "POP"}, "2000": {"fn": "Strings.toHexString", "offset": [1710, 1735], "op": "JUMPDEST", "path": "25"}, "2001": {"fn": "Strings.toHexString", "offset": [1710, 1735], "op": "POP", "path": "25"}, "2002": {"fn": "Strings.toHexString", "offset": [1688, 1735], "op": "SWAP1", "path": "25"}, "2003": {"fn": "Strings.toHexString", "offset": [1688, 1735], "op": "POP", "path": "25"}, "2004": {"op": "PUSH1", "value": "0x3"}, "2006": {"op": "PUSH1", "value": "0xFC"}, "2008": {"op": "SHL"}, "2009": {"fn": "Strings.toHexString", "offset": [1745, 1751], "op": "DUP2", "path": "25", "statement": 33}, "2010": {"fn": "Strings.toHexString", "offset": [1752, 1753], "op": "PUSH1", "path": "25", "value": "0x0"}, "2012": {"fn": "Strings.toHexString", "offset": [1745, 1754], "op": "DUP2", "path": "25"}, "2013": {"fn": "Strings.toHexString", "offset": [1745, 1754], "op": "MLOAD", "path": "25"}, "2014": {"fn": "Strings.toHexString", "offset": [1745, 1754], "op": "DUP2", "path": "25"}, "2015": {"fn": "Strings.toHexString", "offset": [1745, 1754], "op": "LT", "path": "25"}, "2016": {"fn": "Strings.toHexString", "offset": [1745, 1754], "op": "PUSH2", "path": "25", "value": "0x7F9"}, "2019": {"fn": "Strings.toHexString", "offset": [1745, 1754], "op": "JUMPI", "path": "25"}, "2020": {"op": "PUSH4", "value": "0x4E487B71"}, "2025": {"op": "PUSH1", "value": "0xE0"}, "2027": {"op": "SHL"}, "2028": {"fn": "Strings.toHexString", "offset": [1745, 1754], "op": "PUSH1", "path": "25", "value": "0x0"}, "2030": {"fn": "Strings.toHexString", "offset": [1745, 1754], "op": "MSTORE", "path": "25"}, "2031": {"fn": "Strings.toHexString", "offset": [1745, 1754], "op": "PUSH1", "path": "25", "value": "0x32"}, "2033": {"fn": "Strings.toHexString", "offset": [1745, 1754], "op": "PUSH1", "path": "25", "value": "0x4"}, "2035": {"fn": "Strings.toHexString", "offset": [1745, 1754], "op": "MSTORE", "path": "25"}, "2036": {"fn": "Strings.toHexString", "offset": [1745, 1754], "op": "PUSH1", "path": "25", "value": "0x24"}, "2038": {"fn": "Strings.toHexString", "offset": [1745, 1754], "op": "PUSH1", "path": "25", "value": "0x0"}, "2040": {"fn": "Strings.toHexString", "offset": [1745, 1754], "op": "REVERT", "path": "25"}, "2041": {"fn": "Strings.toHexString", "offset": [1745, 1754], "op": "JUMPDEST", "path": "25"}, "2042": {"fn": "Strings.toHexString", "offset": [1745, 1754], "op": "PUSH1", "path": "25", "value": "0x20"}, "2044": {"fn": "Strings.toHexString", "offset": [1745, 1754], "op": "ADD", "path": "25"}, "2045": {"fn": "Strings.toHexString", "offset": [1745, 1754], "op": "ADD", "path": "25"}, "2046": {"fn": "Strings.toHexString", "offset": [1745, 1760], "op": "SWAP1", "path": "25"}, "2047": {"op": "PUSH1", "value": "0x1"}, "2049": {"op": "PUSH1", "value": "0x1"}, "2051": {"op": "PUSH1", "value": "0xF8"}, "2053": {"op": "SHL"}, "2054": {"op": "SUB"}, "2055": {"fn": "Strings.toHexString", "offset": [1745, 1760], "op": "NOT", "path": "25"}, "2056": {"fn": "Strings.toHexString", "offset": [1745, 1760], "op": "AND", "path": "25"}, "2057": {"fn": "Strings.toHexString", "offset": [1745, 1760], "op": "SWAP1", "path": "25"}, "2058": {"fn": "Strings.toHexString", "offset": [1745, 1760], "op": "DUP2", "path": "25"}, "2059": {"fn": "Strings.toHexString", "offset": [1745, 1760], "op": "PUSH1", "path": "25", "value": "0x0"}, "2061": {"fn": "Strings.toHexString", "offset": [1745, 1760], "op": "BYTE", "path": "25"}, "2062": {"fn": "Strings.toHexString", "offset": [1745, 1760], "op": "SWAP1", "path": "25"}, "2063": {"fn": "Strings.toHexString", "offset": [1745, 1760], "op": "MSTORE8", "path": "25"}, "2064": {"fn": "Strings.toHexString", "offset": [1745, 1760], "op": "POP", "path": "25"}, "2065": {"op": "PUSH1", "value": "0xF"}, "2067": {"op": "PUSH1", "value": "0xFB"}, "2069": {"op": "SHL"}, "2070": {"fn": "Strings.toHexString", "offset": [1770, 1776], "op": "DUP2", "path": "25", "statement": 34}, "2071": {"fn": "Strings.toHexString", "offset": [1777, 1778], "op": "PUSH1", "path": "25", "value": "0x1"}, "2073": {"fn": "Strings.toHexString", "offset": [1770, 1779], "op": "DUP2", "path": "25"}, "2074": {"fn": "Strings.toHexString", "offset": [1770, 1779], "op": "MLOAD", "path": "25"}, "2075": {"fn": "Strings.toHexString", "offset": [1770, 1779], "op": "DUP2", "path": "25"}, "2076": {"fn": "Strings.toHexString", "offset": [1770, 1779], "op": "LT", "path": "25"}, "2077": {"fn": "Strings.toHexString", "offset": [1770, 1779], "op": "PUSH2", "path": "25", "value": "0x836"}, "2080": {"fn": "Strings.toHexString", "offset": [1770, 1779], "op": "JUMPI", "path": "25"}, "2081": {"op": "PUSH4", "value": "0x4E487B71"}, "2086": {"op": "PUSH1", "value": "0xE0"}, "2088": {"op": "SHL"}, "2089": {"fn": "Strings.toHexString", "offset": [1770, 1779], "op": "PUSH1", "path": "25", "value": "0x0"}, "2091": {"fn": "Strings.toHexString", "offset": [1770, 1779], "op": "MSTORE", "path": "25"}, "2092": {"fn": "Strings.toHexString", "offset": [1770, 1779], "op": "PUSH1", "path": "25", "value": "0x32"}, "2094": {"fn": "Strings.toHexString", "offset": [1770, 1779], "op": "PUSH1", "path": "25", "value": "0x4"}, "2096": {"fn": "Strings.toHexString", "offset": [1770, 1779], "op": "MSTORE", "path": "25"}, "2097": {"fn": "Strings.toHexString", "offset": [1770, 1779], "op": "PUSH1", "path": "25", "value": "0x24"}, "2099": {"fn": "Strings.toHexString", "offset": [1770, 1779], "op": "PUSH1", "path": "25", "value": "0x0"}, "2101": {"fn": "Strings.toHexString", "offset": [1770, 1779], "op": "REVERT", "path": "25"}, "2102": {"fn": "Strings.toHexString", "offset": [1770, 1779], "op": "JUMPDEST", "path": "25"}, "2103": {"fn": "Strings.toHexString", "offset": [1770, 1779], "op": "PUSH1", "path": "25", "value": "0x20"}, "2105": {"fn": "Strings.toHexString", "offset": [1770, 1779], "op": "ADD", "path": "25"}, "2106": {"fn": "Strings.toHexString", "offset": [1770, 1779], "op": "ADD", "path": "25"}, "2107": {"fn": "Strings.toHexString", "offset": [1770, 1785], "op": "SWAP1", "path": "25"}, "2108": {"op": "PUSH1", "value": "0x1"}, "2110": {"op": "PUSH1", "value": "0x1"}, "2112": {"op": "PUSH1", "value": "0xF8"}, "2114": {"op": "SHL"}, "2115": {"op": "SUB"}, "2116": {"fn": "Strings.toHexString", "offset": [1770, 1785], "op": "NOT", "path": "25"}, "2117": {"fn": "Strings.toHexString", "offset": [1770, 1785], "op": "AND", "path": "25"}, "2118": {"fn": "Strings.toHexString", "offset": [1770, 1785], "op": "SWAP1", "path": "25"}, "2119": {"fn": "Strings.toHexString", "offset": [1770, 1785], "op": "DUP2", "path": "25"}, "2120": {"fn": "Strings.toHexString", "offset": [1770, 1785], "op": "PUSH1", "path": "25", "value": "0x0"}, "2122": {"fn": "Strings.toHexString", "offset": [1770, 1785], "op": "BYTE", "path": "25"}, "2123": {"fn": "Strings.toHexString", "offset": [1770, 1785], "op": "SWAP1", "path": "25"}, "2124": {"fn": "Strings.toHexString", "offset": [1770, 1785], "op": "MSTORE8", "path": "25"}, "2125": {"op": "POP"}, "2126": {"fn": "Strings.toHexString", "offset": [1800, 1809], "op": "PUSH1", "path": "25", "value": "0x0"}, "2128": {"fn": "Strings.toHexString", "offset": [1812, 1822], "op": "PUSH2", "path": "25", "value": "0x85A"}, "2131": {"fn": "Strings.toHexString", "offset": [1816, 1822], "op": "DUP5", "path": "25"}, "2132": {"fn": "Strings.toHexString", "offset": [1812, 1813], "op": "PUSH1", "path": "25", "value": "0x2"}, "2134": {"fn": "Strings.toHexString", "offset": [1812, 1822], "op": "PUSH2", "path": "25", "value": "0xB8A"}, "2137": {"fn": "Strings.toHexString", "jump": "i", "offset": [1812, 1822], "op": "JUMP", "path": "25"}, "2138": {"fn": "Strings.toHexString", "offset": [1812, 1822], "op": "JUMPDEST", "path": "25"}, "2139": {"fn": "Strings.toHexString", "offset": [1812, 1826], "op": "PUSH2", "path": "25", "value": "0x865"}, "2142": {"fn": "Strings.toHexString", "offset": [1812, 1826], "op": "SWAP1", "path": "25"}, "2143": {"fn": "Strings.toHexString", "offset": [1825, 1826], "op": "PUSH1", "path": "25", "value": "0x1"}, "2145": {"fn": "Strings.toHexString", "offset": [1812, 1826], "op": "PUSH2", "path": "25", "value": "0xB72"}, "2148": {"fn": "Strings.toHexString", "jump": "i", "offset": [1812, 1826], "op": "JUMP", "path": "25"}, "2149": {"fn": "Strings.toHexString", "offset": [1812, 1826], "op": "JUMPDEST", "path": "25"}, "2150": {"fn": "Strings.toHexString", "offset": [1800, 1826], "op": "SWAP1", "path": "25"}, "2151": {"fn": "Strings.toHexString", "offset": [1800, 1826], "op": "POP", "path": "25"}, "2152": {"fn": "Strings.toHexString", "offset": [1795, 1927], "op": "JUMPDEST", "path": "25"}, "2153": {"fn": "Strings.toHexString", "offset": [1832, 1833], "op": "PUSH1", "path": "25", "value": "0x1"}, "2155": {"fn": "Strings.toHexString", "offset": [1828, 1829], "op": "DUP2", "path": "25"}, "2156": {"fn": "Strings.toHexString", "offset": [1828, 1833], "op": "GT", "path": "25"}, "2157": {"fn": "Strings.toHexString", "offset": [1795, 1927], "op": "ISZERO", "path": "25"}, "2158": {"fn": "Strings.toHexString", "offset": [1795, 1927], "op": "PUSH2", "path": "25", "value": "0x8F9"}, "2161": {"fn": "Strings.toHexString", "offset": [1795, 1927], "op": "JUMPI", "path": "25"}, "2162": {"op": "PUSH16", "value": "0x181899199A1A9B1B9C1CB0B131B232B3"}, "2179": {"op": "PUSH1", "value": "0x81"}, "2181": {"op": "SHL"}, "2182": {"fn": "Strings.toHexString", "offset": [1879, 1884], "op": "DUP6", "path": "25", "statement": 35}, "2183": {"fn": "Strings.toHexString", "offset": [1887, 1890], "op": "PUSH1", "path": "25", "value": "0xF"}, "2185": {"fn": "Strings.toHexString", "offset": [1879, 1890], "op": "AND", "path": "25"}, "2186": {"fn": "Strings.toHexString", "offset": [1866, 1891], "op": "PUSH1", "path": "25", "value": "0x10"}, "2188": {"fn": "Strings.toHexString", "offset": [1866, 1891], "op": "DUP2", "path": "25"}, "2189": {"fn": "Strings.toHexString", "offset": [1866, 1891], "op": "LT", "path": "25"}, "2190": {"fn": "Strings.toHexString", "offset": [1866, 1891], "op": "PUSH2", "path": "25", "value": "0x8A7"}, "2193": {"fn": "Strings.toHexString", "offset": [1866, 1891], "op": "JUMPI", "path": "25"}, "2194": {"op": "PUSH4", "value": "0x4E487B71"}, "2199": {"op": "PUSH1", "value": "0xE0"}, "2201": {"op": "SHL"}, "2202": {"fn": "Strings.toHexString", "offset": [1866, 1891], "op": "PUSH1", "path": "25", "value": "0x0"}, "2204": {"fn": "Strings.toHexString", "offset": [1866, 1891], "op": "MSTORE", "path": "25"}, "2205": {"fn": "Strings.toHexString", "offset": [1866, 1891], "op": "PUSH1", "path": "25", "value": "0x32"}, "2207": {"fn": "Strings.toHexString", "offset": [1866, 1891], "op": "PUSH1", "path": "25", "value": "0x4"}, "2209": {"fn": "Strings.toHexString", "offset": [1866, 1891], "op": "MSTORE", "path": "25"}, "2210": {"fn": "Strings.toHexString", "offset": [1866, 1891], "op": "PUSH1", "path": "25", "value": "0x24"}, "2212": {"fn": "Strings.toHexString", "offset": [1866, 1891], "op": "PUSH1", "path": "25", "value": "0x0"}, "2214": {"fn": "Strings.toHexString", "offset": [1866, 1891], "op": "REVERT", "path": "25"}, "2215": {"fn": "Strings.toHexString", "offset": [1866, 1891], "op": "JUMPDEST", "path": "25"}, "2216": {"fn": "Strings.toHexString", "offset": [1866, 1891], "op": "BYTE", "path": "25"}, "2217": {"fn": "Strings.toHexString", "offset": [1866, 1891], "op": "PUSH1", "path": "25", "value": "0xF8"}, "2219": {"fn": "Strings.toHexString", "offset": [1866, 1891], "op": "SHL", "path": "25"}, "2220": {"fn": "Strings.toHexString", "offset": [1854, 1860], "op": "DUP3", "path": "25"}, "2221": {"fn": "Strings.toHexString", "offset": [1861, 1862], "op": "DUP3", "path": "25"}, "2222": {"fn": "Strings.toHexString", "offset": [1854, 1863], "op": "DUP2", "path": "25"}, "2223": {"fn": "Strings.toHexString", "offset": [1854, 1863], "op": "MLOAD", "path": "25"}, "2224": {"fn": "Strings.toHexString", "offset": [1854, 1863], "op": "DUP2", "path": "25"}, "2225": {"fn": "Strings.toHexString", "offset": [1854, 1863], "op": "LT", "path": "25"}, "2226": {"fn": "Strings.toHexString", "offset": [1854, 1863], "op": "PUSH2", "path": "25", "value": "0x8CB"}, "2229": {"fn": "Strings.toHexString", "offset": [1854, 1863], "op": "JUMPI", "path": "25"}, "2230": {"op": "PUSH4", "value": "0x4E487B71"}, "2235": {"op": "PUSH1", "value": "0xE0"}, "2237": {"op": "SHL"}, "2238": {"fn": "Strings.toHexString", "offset": [1854, 1863], "op": "PUSH1", "path": "25", "value": "0x0"}, "2240": {"fn": "Strings.toHexString", "offset": [1854, 1863], "op": "MSTORE", "path": "25"}, "2241": {"fn": "Strings.toHexString", "offset": [1854, 1863], "op": "PUSH1", "path": "25", "value": "0x32"}, "2243": {"fn": "Strings.toHexString", "offset": [1854, 1863], "op": "PUSH1", "path": "25", "value": "0x4"}, "2245": {"fn": "Strings.toHexString", "offset": [1854, 1863], "op": "MSTORE", "path": "25"}, "2246": {"fn": "Strings.toHexString", "offset": [1854, 1863], "op": "PUSH1", "path": "25", "value": "0x24"}, "2248": {"fn": "Strings.toHexString", "offset": [1854, 1863], "op": "PUSH1", "path": "25", "value": "0x0"}, "2250": {"fn": "Strings.toHexString", "offset": [1854, 1863], "op": "REVERT", "path": "25"}, "2251": {"fn": "Strings.toHexString", "offset": [1854, 1863], "op": "JUMPDEST", "path": "25"}, "2252": {"fn": "Strings.toHexString", "offset": [1854, 1863], "op": "PUSH1", "path": "25", "value": "0x20"}, "2254": {"fn": "Strings.toHexString", "offset": [1854, 1863], "op": "ADD", "path": "25"}, "2255": {"fn": "Strings.toHexString", "offset": [1854, 1863], "op": "ADD", "path": "25"}, "2256": {"fn": "Strings.toHexString", "offset": [1854, 1891], "op": "SWAP1", "path": "25"}, "2257": {"op": "PUSH1", "value": "0x1"}, "2259": {"op": "PUSH1", "value": "0x1"}, "2261": {"op": "PUSH1", "value": "0xF8"}, "2263": {"op": "SHL"}, "2264": {"op": "SUB"}, "2265": {"fn": "Strings.toHexString", "offset": [1854, 1891], "op": "NOT", "path": "25"}, "2266": {"fn": "Strings.toHexString", "offset": [1854, 1891], "op": "AND", "path": "25"}, "2267": {"fn": "Strings.toHexString", "offset": [1854, 1891], "op": "SWAP1", "path": "25"}, "2268": {"fn": "Strings.toHexString", "offset": [1854, 1891], "op": "DUP2", "path": "25"}, "2269": {"fn": "Strings.toHexString", "offset": [1854, 1891], "op": "PUSH1", "path": "25", "value": "0x0"}, "2271": {"fn": "Strings.toHexString", "offset": [1854, 1891], "op": "BYTE", "path": "25"}, "2272": {"fn": "Strings.toHexString", "offset": [1854, 1891], "op": "SWAP1", "path": "25"}, "2273": {"fn": "Strings.toHexString", "offset": [1854, 1891], "op": "MSTORE8", "path": "25"}, "2274": {"op": "POP"}, "2275": {"fn": "Strings.toHexString", "offset": [1915, 1916], "op": "PUSH1", "path": "25", "statement": 36, "value": "0x4"}, "2277": {"fn": "Strings.toHexString", "offset": [1905, 1916], "op": "SWAP5", "path": "25"}, "2278": {"fn": "Strings.toHexString", "offset": [1905, 1916], "op": "SWAP1", "path": "25"}, "2279": {"fn": "Strings.toHexString", "offset": [1905, 1916], "op": "SWAP5", "path": "25"}, "2280": {"fn": "Strings.toHexString", "offset": [1905, 1916], "op": "SHR", "path": "25"}, "2281": {"fn": "Strings.toHexString", "offset": [1905, 1916], "op": "SWAP4", "path": "25"}, "2282": {"fn": "Strings.toHexString", "offset": [1835, 1838], "op": "PUSH2", "path": "25", "statement": 37, "value": "0x8F2"}, "2285": {"fn": "Strings.toHexString", "offset": [1835, 1838], "op": "DUP2", "path": "25"}, "2286": {"fn": "Strings.toHexString", "offset": [1835, 1838], "op": "PUSH2", "path": "25", "value": "0xBD9"}, "2289": {"fn": "Strings.toHexString", "jump": "i", "offset": [1835, 1838], "op": "JUMP", "path": "25"}, "2290": {"fn": "Strings.toHexString", "offset": [1835, 1838], "op": "JUMPDEST", "path": "25"}, "2291": {"fn": "Strings.toHexString", "offset": [1835, 1838], "op": "SWAP1", "path": "25"}, "2292": {"fn": "Strings.toHexString", "offset": [1835, 1838], "op": "POP", "path": "25"}, "2293": {"fn": "Strings.toHexString", "offset": [1795, 1927], "op": "PUSH2", "path": "25", "value": "0x868"}, "2296": {"fn": "Strings.toHexString", "offset": [1795, 1927], "op": "JUMP", "path": "25"}, "2297": {"fn": "Strings.toHexString", "offset": [1795, 1927], "op": "JUMPDEST", "path": "25"}, "2298": {"op": "POP"}, "2299": {"fn": "Strings.toHexString", "offset": [1944, 1954], "op": "DUP4", "path": "25", "statement": 38}, "2300": {"branch": 44, "fn": "Strings.toHexString", "offset": [1944, 1954], "op": "ISZERO", "path": "25"}, "2301": {"fn": "Strings.toHexString", "offset": [1936, 1991], "op": "PUSH2", "path": "25", "value": "0x948"}, "2304": {"branch": 44, "fn": "Strings.toHexString", "offset": [1936, 1991], "op": "JUMPI", "path": "25"}, "2305": {"fn": "Strings.toHexString", "offset": [1936, 1991], "op": "PUSH1", "path": "25", "value": "0x40"}, "2307": {"fn": "Strings.toHexString", "offset": [1936, 1991], "op": "MLOAD", "path": "25"}, "2308": {"op": "PUSH3", "value": "0x461BCD"}, "2312": {"op": "PUSH1", "value": "0xE5"}, "2314": {"op": "SHL"}, "2315": {"fn": "Strings.toHexString", "offset": [1936, 1991], "op": "DUP2", "path": "25"}, "2316": {"fn": "Strings.toHexString", "offset": [1936, 1991], "op": "MSTORE", "path": "25"}, "2317": {"op": "PUSH1", "value": "0x20"}, "2319": {"fn": "Strings.toHexString", "offset": [1936, 1991], "op": "PUSH1", "path": "25", "value": "0x4"}, "2321": {"fn": "Strings.toHexString", "offset": [1936, 1991], "op": "DUP3", "path": "25"}, "2322": {"fn": "Strings.toHexString", "offset": [1936, 1991], "op": "ADD", "path": "25"}, "2323": {"op": "DUP2"}, "2324": {"op": "SWAP1"}, "2325": {"op": "MSTORE"}, "2326": {"op": "PUSH1", "value": "0x24"}, "2328": {"op": "DUP3"}, "2329": {"op": "ADD"}, "2330": {"op": "MSTORE"}, "2331": {"op": "PUSH32", "value": "0x537472696E67733A20686578206C656E67746820696E73756666696369656E74"}, "2364": {"op": "PUSH1", "value": "0x44"}, "2366": {"op": "DUP3"}, "2367": {"op": "ADD"}, "2368": {"op": "MSTORE"}, "2369": {"op": "PUSH1", "value": "0x64"}, "2371": {"op": "ADD"}, "2372": {"fn": "Strings.toHexString", "offset": [1936, 1991], "op": "PUSH2", "path": "25", "value": "0x1C7"}, "2375": {"op": "JUMP"}, "2376": {"fn": "Strings.toHexString", "offset": [1936, 1991], "op": "JUMPDEST", "path": "25"}, "2377": {"fn": "Strings.toHexString", "offset": [2015, 2021], "op": "SWAP4", "path": "25", "statement": 39}, "2378": {"fn": "Strings.toHexString", "offset": [1588, 2029], "op": "SWAP3", "path": "25"}, "2379": {"op": "POP"}, "2380": {"op": "POP"}, "2381": {"op": "POP"}, "2382": {"fn": "Strings.toHexString", "jump": "o", "offset": [1588, 2029], "op": "JUMP", "path": "25"}, "2383": {"op": "JUMPDEST"}, "2384": {"op": "DUP3"}, "2385": {"op": "DUP1"}, "2386": {"op": "SLOAD"}, "2387": {"op": "PUSH2", "value": "0x95B"}, "2390": {"op": "SWAP1"}, "2391": {"op": "PUSH2", "value": "0xBF0"}, "2394": {"jump": "i", "op": "JUMP"}, "2395": {"op": "JUMPDEST"}, "2396": {"op": "SWAP1"}, "2397": {"op": "PUSH1", "value": "0x0"}, "2399": {"op": "MSTORE"}, "2400": {"op": "PUSH1", "value": "0x20"}, "2402": {"op": "PUSH1", "value": "0x0"}, "2404": {"op": "KECCAK256"}, "2405": {"op": "SWAP1"}, "2406": {"op": "PUSH1", "value": "0x1F"}, "2408": {"op": "ADD"}, "2409": {"op": "PUSH1", "value": "0x20"}, "2411": {"op": "SWAP1"}, "2412": {"op": "DIV"}, "2413": {"op": "DUP2"}, "2414": {"op": "ADD"}, "2415": {"op": "SWAP3"}, "2416": {"op": "DUP3"}, "2417": {"op": "PUSH2", "value": "0x97D"}, "2420": {"op": "JUMPI"}, "2421": {"op": "PUSH1", "value": "0x0"}, "2423": {"op": "DUP6"}, "2424": {"op": "SSTORE"}, "2425": {"op": "PUSH2", "value": "0x9C3"}, "2428": {"op": "JUMP"}, "2429": {"op": "JUMPDEST"}, "2430": {"op": "DUP3"}, "2431": {"op": "PUSH1", "value": "0x1F"}, "2433": {"op": "LT"}, "2434": {"op": "PUSH2", "value": "0x996"}, "2437": {"op": "JUMPI"}, "2438": {"op": "DUP1"}, "2439": {"op": "MLOAD"}, "2440": {"op": "PUSH1", "value": "0xFF"}, "2442": {"op": "NOT"}, "2443": {"op": "AND"}, "2444": {"op": "DUP4"}, "2445": {"op": "DUP1"}, "2446": {"op": "ADD"}, "2447": {"op": "OR"}, "2448": {"op": "DUP6"}, "2449": {"op": "SSTORE"}, "2450": {"op": "PUSH2", "value": "0x9C3"}, "2453": {"op": "JUMP"}, "2454": {"op": "JUMPDEST"}, "2455": {"op": "DUP3"}, "2456": {"op": "DUP1"}, "2457": {"op": "ADD"}, "2458": {"op": "PUSH1", "value": "0x1"}, "2460": {"op": "ADD"}, "2461": {"op": "DUP6"}, "2462": {"op": "SSTORE"}, "2463": {"op": "DUP3"}, "2464": {"op": "ISZERO"}, "2465": {"op": "PUSH2", "value": "0x9C3"}, "2468": {"op": "JUMPI"}, "2469": {"op": "SWAP2"}, "2470": {"op": "DUP3"}, "2471": {"op": "ADD"}, "2472": {"op": "JUMPDEST"}, "2473": {"op": "DUP3"}, "2474": {"op": "DUP2"}, "2475": {"op": "GT"}, "2476": {"op": "ISZERO"}, "2477": {"op": "PUSH2", "value": "0x9C3"}, "2480": {"op": "JUMPI"}, "2481": {"op": "DUP3"}, "2482": {"op": "MLOAD"}, "2483": {"op": "DUP3"}, "2484": {"op": "SSTORE"}, "2485": {"op": "SWAP2"}, "2486": {"op": "PUSH1", "value": "0x20"}, "2488": {"op": "ADD"}, "2489": {"op": "SWAP2"}, "2490": {"op": "SWAP1"}, "2491": {"op": "PUSH1", "value": "0x1"}, "2493": {"op": "ADD"}, "2494": {"op": "SWAP1"}, "2495": {"op": "PUSH2", "value": "0x9A8"}, "2498": {"op": "JUMP"}, "2499": {"op": "JUMPDEST"}, "2500": {"op": "POP"}, "2501": {"op": "PUSH2", "value": "0x9CF"}, "2504": {"op": "SWAP3"}, "2505": {"op": "SWAP2"}, "2506": {"op": "POP"}, "2507": {"op": "PUSH2", "value": "0x9D3"}, "2510": {"jump": "i", "op": "JUMP"}, "2511": {"op": "JUMPDEST"}, "2512": {"op": "POP"}, "2513": {"op": "SWAP1"}, "2514": {"jump": "o", "op": "JUMP"}, "2515": {"op": "JUMPDEST"}, "2516": {"op": "JUMPDEST"}, "2517": {"op": "DUP1"}, "2518": {"op": "DUP3"}, "2519": {"op": "GT"}, "2520": {"op": "ISZERO"}, "2521": {"op": "PUSH2", "value": "0x9CF"}, "2524": {"op": "JUMPI"}, "2525": {"op": "PUSH1", "value": "0x0"}, "2527": {"op": "DUP2"}, "2528": {"op": "SSTORE"}, "2529": {"op": "PUSH1", "value": "0x1"}, "2531": {"op": "ADD"}, "2532": {"op": "PUSH2", "value": "0x9D4"}, "2535": {"op": "JUMP"}, "2536": {"op": "JUMPDEST"}, "2537": {"op": "PUSH1", "value": "0x0"}, "2539": {"op": "DUP1"}, "2540": {"op": "PUSH1", "value": "0x40"}, "2542": {"op": "DUP4"}, "2543": {"op": "DUP6"}, "2544": {"op": "SUB"}, "2545": {"op": "SLT"}, "2546": {"op": "ISZERO"}, "2547": {"op": "PUSH2", "value": "0x9FA"}, "2550": {"op": "JUMPI"}, "2551": {"op": "DUP2"}, "2552": {"op": "DUP3"}, "2553": {"op": "REVERT"}, "2554": {"op": "JUMPDEST"}, "2555": {"op": "DUP3"}, "2556": {"op": "CALLDATALOAD"}, "2557": {"op": "PUSH1", "value": "0x1"}, "2559": {"op": "PUSH1", "value": "0x1"}, "2561": {"op": "PUSH1", "value": "0xA0"}, "2563": {"op": "SHL"}, "2564": {"op": "SUB"}, "2565": {"op": "DUP2"}, "2566": {"op": "AND"}, "2567": {"op": "DUP2"}, "2568": {"op": "EQ"}, "2569": {"op": "PUSH2", "value": "0xA10"}, "2572": {"op": "JUMPI"}, "2573": {"op": "DUP3"}, "2574": {"op": "DUP4"}, "2575": {"op": "REVERT"}, "2576": {"op": "JUMPDEST"}, "2577": {"op": "SWAP2"}, "2578": {"op": "POP"}, "2579": {"op": "PUSH1", "value": "0x20"}, "2581": {"op": "DUP4"}, "2582": {"op": "ADD"}, "2583": {"op": "CALLDATALOAD"}, "2584": {"op": "PUSH8", "value": "0xFFFFFFFFFFFFFFFF"}, "2593": {"op": "DUP1"}, "2594": {"op": "DUP3"}, "2595": {"op": "GT"}, "2596": {"op": "ISZERO"}, "2597": {"op": "PUSH2", "value": "0xA2C"}, "2600": {"op": "JUMPI"}, "2601": {"op": "DUP3"}, "2602": {"op": "DUP4"}, "2603": {"op": "REVERT"}, "2604": {"op": "JUMPDEST"}, "2605": {"op": "DUP2"}, "2606": {"op": "DUP6"}, "2607": {"op": "ADD"}, "2608": {"op": "SWAP2"}, "2609": {"op": "POP"}, "2610": {"op": "DUP6"}, "2611": {"op": "PUSH1", "value": "0x1F"}, "2613": {"op": "DUP4"}, "2614": {"op": "ADD"}, "2615": {"op": "SLT"}, "2616": {"op": "PUSH2", "value": "0xA3F"}, "2619": {"op": "JUMPI"}, "2620": {"op": "DUP3"}, "2621": {"op": "DUP4"}, "2622": {"op": "REVERT"}, "2623": {"op": "JUMPDEST"}, "2624": {"op": "DUP2"}, "2625": {"op": "CALLDATALOAD"}, "2626": {"op": "DUP2"}, "2627": {"op": "DUP2"}, "2628": {"op": "GT"}, "2629": {"op": "ISZERO"}, "2630": {"op": "PUSH2", "value": "0xA51"}, "2633": {"op": "JUMPI"}, "2634": {"op": "PUSH2", "value": "0xA51"}, "2637": {"op": "PUSH2", "value": "0xC41"}, "2640": {"jump": "i", "op": "JUMP"}, "2641": {"op": "JUMPDEST"}, "2642": {"op": "PUSH1", "value": "0x40"}, "2644": {"op": "MLOAD"}, "2645": {"op": "PUSH1", "value": "0x1F"}, "2647": {"op": "DUP3"}, "2648": {"op": "ADD"}, "2649": {"op": "PUSH1", "value": "0x1F"}, "2651": {"op": "NOT"}, "2652": {"op": "SWAP1"}, "2653": {"op": "DUP2"}, "2654": {"op": "AND"}, "2655": {"op": "PUSH1", "value": "0x3F"}, "2657": {"op": "ADD"}, "2658": {"op": "AND"}, "2659": {"op": "DUP2"}, "2660": {"op": "ADD"}, "2661": {"op": "SWAP1"}, "2662": {"op": "DUP4"}, "2663": {"op": "DUP3"}, "2664": {"op": "GT"}, "2665": {"op": "DUP2"}, "2666": {"op": "DUP4"}, "2667": {"op": "LT"}, "2668": {"op": "OR"}, "2669": {"op": "ISZERO"}, "2670": {"op": "PUSH2", "value": "0xA79"}, "2673": {"op": "JUMPI"}, "2674": {"op": "PUSH2", "value": "0xA79"}, "2677": {"op": "PUSH2", "value": "0xC41"}, "2680": {"jump": "i", "op": "JUMP"}, "2681": {"op": "JUMPDEST"}, "2682": {"op": "DUP2"}, "2683": {"op": "PUSH1", "value": "0x40"}, "2685": {"op": "MSTORE"}, "2686": {"op": "DUP3"}, "2687": {"op": "DUP2"}, "2688": {"op": "MSTORE"}, "2689": {"op": "DUP9"}, "2690": {"op": "PUSH1", "value": "0x20"}, "2692": {"op": "DUP5"}, "2693": {"op": "DUP8"}, "2694": {"op": "ADD"}, "2695": {"op": "ADD"}, "2696": {"op": "GT"}, "2697": {"op": "ISZERO"}, "2698": {"op": "PUSH2", "value": "0xA91"}, "2701": {"op": "JUMPI"}, "2702": {"op": "DUP6"}, "2703": {"op": "DUP7"}, "2704": {"op": "REVERT"}, "2705": {"op": "JUMPDEST"}, "2706": {"op": "DUP3"}, "2707": {"op": "PUSH1", "value": "0x20"}, "2709": {"op": "DUP7"}, "2710": {"op": "ADD"}, "2711": {"op": "PUSH1", "value": "0x20"}, "2713": {"op": "DUP4"}, "2714": {"op": "ADD"}, "2715": {"op": "CALLDATACOPY"}, "2716": {"op": "DUP6"}, "2717": {"op": "PUSH1", "value": "0x20"}, "2719": {"op": "DUP5"}, "2720": {"op": "DUP4"}, "2721": {"op": "ADD"}, "2722": {"op": "ADD"}, "2723": {"op": "MSTORE"}, "2724": {"op": "DUP1"}, "2725": {"op": "SWAP6"}, "2726": {"op": "POP"}, "2727": {"op": "POP"}, "2728": {"op": "POP"}, "2729": {"op": "POP"}, "2730": {"op": "POP"}, "2731": {"op": "POP"}, "2732": {"op": "SWAP3"}, "2733": {"op": "POP"}, "2734": {"op": "SWAP3"}, "2735": {"op": "SWAP1"}, "2736": {"op": "POP"}, "2737": {"jump": "o", "op": "JUMP"}, "2738": {"op": "JUMPDEST"}, "2739": {"op": "PUSH1", "value": "0x0"}, "2741": {"op": "PUSH1", "value": "0x20"}, "2743": {"op": "DUP3"}, "2744": {"op": "DUP5"}, "2745": {"op": "SUB"}, "2746": {"op": "SLT"}, "2747": {"op": "ISZERO"}, "2748": {"op": "PUSH2", "value": "0xAC3"}, "2751": {"op": "JUMPI"}, "2752": {"op": "DUP1"}, "2753": {"op": "DUP2"}, "2754": {"op": "REVERT"}, "2755": {"op": "JUMPDEST"}, "2756": {"op": "POP"}, "2757": {"op": "CALLDATALOAD"}, "2758": {"op": "SWAP2"}, "2759": {"op": "SWAP1"}, "2760": {"op": "POP"}, "2761": {"jump": "o", "op": "JUMP"}, "2762": {"op": "JUMPDEST"}, "2763": {"op": "PUSH32", "value": "0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000"}, "2796": {"op": "DUP2"}, "2797": {"op": "MSTORE"}, "2798": {"op": "PUSH1", "value": "0x0"}, "2800": {"op": "DUP4"}, "2801": {"op": "MLOAD"}, "2802": {"op": "PUSH2", "value": "0xB02"}, "2805": {"op": "DUP2"}, "2806": {"op": "PUSH1", "value": "0x17"}, "2808": {"op": "DUP6"}, "2809": {"op": "ADD"}, "2810": {"op": "PUSH1", "value": "0x20"}, "2812": {"op": "DUP9"}, "2813": {"op": "ADD"}, "2814": {"op": "PUSH2", "value": "0xBA9"}, "2817": {"jump": "i", "op": "JUMP"}, "2818": {"op": "JUMPDEST"}, "2819": {"op": "PUSH17", "value": "0x1034B99036B4B9B9B4B733903937B6329"}, "2837": {"op": "PUSH1", "value": "0x7D"}, "2839": {"op": "SHL"}, "2840": {"op": "PUSH1", "value": "0x17"}, "2842": {"op": "SWAP2"}, "2843": {"op": "DUP5"}, "2844": {"op": "ADD"}, "2845": {"op": "SWAP2"}, "2846": {"op": "DUP3"}, "2847": {"op": "ADD"}, "2848": {"op": "MSTORE"}, "2849": {"op": "DUP4"}, "2850": {"op": "MLOAD"}, "2851": {"op": "PUSH2", "value": "0xB33"}, "2854": {"op": "DUP2"}, "2855": {"op": "PUSH1", "value": "0x28"}, "2857": {"op": "DUP5"}, "2858": {"op": "ADD"}, "2859": {"op": "PUSH1", "value": "0x20"}, "2861": {"op": "DUP9"}, "2862": {"op": "ADD"}, "2863": {"op": "PUSH2", "value": "0xBA9"}, "2866": {"jump": "i", "op": "JUMP"}, "2867": {"op": "JUMPDEST"}, "2868": {"op": "ADD"}, "2869": {"op": "PUSH1", "value": "0x28"}, "2871": {"op": "ADD"}, "2872": {"op": "SWAP5"}, "2873": {"op": "SWAP4"}, "2874": {"op": "POP"}, "2875": {"op": "POP"}, "2876": {"op": "POP"}, "2877": {"op": "POP"}, "2878": {"jump": "o", "op": "JUMP"}, "2879": {"op": "JUMPDEST"}, "2880": {"op": "PUSH1", "value": "0x20"}, "2882": {"op": "DUP2"}, "2883": {"op": "MSTORE"}, "2884": {"op": "PUSH1", "value": "0x0"}, "2886": {"op": "DUP3"}, "2887": {"op": "MLOAD"}, "2888": {"op": "DUP1"}, "2889": {"op": "PUSH1", "value": "0x20"}, "2891": {"op": "DUP5"}, "2892": {"op": "ADD"}, "2893": {"op": "MSTORE"}, "2894": {"op": "PUSH2", "value": "0xB5E"}, "2897": {"op": "DUP2"}, "2898": {"op": "PUSH1", "value": "0x40"}, "2900": {"op": "DUP6"}, "2901": {"op": "ADD"}, "2902": {"op": "PUSH1", "value": "0x20"}, "2904": {"op": "DUP8"}, "2905": {"op": "ADD"}, "2906": {"op": "PUSH2", "value": "0xBA9"}, "2909": {"jump": "i", "op": "JUMP"}, "2910": {"op": "JUMPDEST"}, "2911": {"op": "PUSH1", "value": "0x1F"}, "2913": {"op": "ADD"}, "2914": {"op": "PUSH1", "value": "0x1F"}, "2916": {"op": "NOT"}, "2917": {"op": "AND"}, "2918": {"op": "SWAP2"}, "2919": {"op": "SWAP1"}, "2920": {"op": "SWAP2"}, "2921": {"op": "ADD"}, "2922": {"op": "PUSH1", "value": "0x40"}, "2924": {"op": "ADD"}, "2925": {"op": "SWAP3"}, "2926": {"op": "SWAP2"}, "2927": {"op": "POP"}, "2928": {"op": "POP"}, "2929": {"jump": "o", "op": "JUMP"}, "2930": {"op": "JUMPDEST"}, "2931": {"op": "PUSH1", "value": "0x0"}, "2933": {"op": "DUP3"}, "2934": {"op": "NOT"}, "2935": {"op": "DUP3"}, "2936": {"op": "GT"}, "2937": {"op": "ISZERO"}, "2938": {"op": "PUSH2", "value": "0xB85"}, "2941": {"op": "JUMPI"}, "2942": {"op": "PUSH2", "value": "0xB85"}, "2945": {"op": "PUSH2", "value": "0xC2B"}, "2948": {"jump": "i", "op": "JUMP"}, "2949": {"op": "JUMPDEST"}, "2950": {"op": "POP"}, "2951": {"op": "ADD"}, "2952": {"op": "SWAP1"}, "2953": {"jump": "o", "op": "JUMP"}, "2954": {"op": "JUMPDEST"}, "2955": {"op": "PUSH1", "value": "0x0"}, "2957": {"op": "DUP2"}, "2958": {"op": "PUSH1", "value": "0x0"}, "2960": {"op": "NOT"}, "2961": {"op": "DIV"}, "2962": {"op": "DUP4"}, "2963": {"op": "GT"}, "2964": {"op": "DUP3"}, "2965": {"op": "ISZERO"}, "2966": {"op": "ISZERO"}, "2967": {"op": "AND"}, "2968": {"op": "ISZERO"}, "2969": {"op": "PUSH2", "value": "0xBA4"}, "2972": {"op": "JUMPI"}, "2973": {"op": "PUSH2", "value": "0xBA4"}, "2976": {"op": "PUSH2", "value": "0xC2B"}, "2979": {"jump": "i", "op": "JUMP"}, "2980": {"op": "JUMPDEST"}, "2981": {"op": "POP"}, "2982": {"op": "MUL"}, "2983": {"op": "SWAP1"}, "2984": {"jump": "o", "op": "JUMP"}, "2985": {"op": "JUMPDEST"}, "2986": {"op": "PUSH1", "value": "0x0"}, "2988": {"op": "JUMPDEST"}, "2989": {"op": "DUP4"}, "2990": {"op": "DUP2"}, "2991": {"op": "LT"}, "2992": {"op": "ISZERO"}, "2993": {"op": "PUSH2", "value": "0xBC4"}, "2996": {"op": "JUMPI"}, "2997": {"op": "DUP2"}, "2998": {"op": "DUP2"}, "2999": {"op": "ADD"}, "3000": {"op": "MLOAD"}, "3001": {"op": "DUP4"}, "3002": {"op": "DUP3"}, "3003": {"op": "ADD"}, "3004": {"op": "MSTORE"}, "3005": {"op": "PUSH1", "value": "0x20"}, "3007": {"op": "ADD"}, "3008": {"op": "PUSH2", "value": "0xBAC"}, "3011": {"op": "JUMP"}, "3012": {"op": "JUMPDEST"}, "3013": {"op": "DUP4"}, "3014": {"op": "DUP2"}, "3015": {"op": "GT"}, "3016": {"op": "ISZERO"}, "3017": {"op": "PUSH2", "value": "0xBD3"}, "3020": {"op": "JUMPI"}, "3021": {"op": "PUSH1", "value": "0x0"}, "3023": {"op": "DUP5"}, "3024": {"op": "DUP5"}, "3025": {"op": "ADD"}, "3026": {"op": "MSTORE"}, "3027": {"op": "JUMPDEST"}, "3028": {"op": "POP"}, "3029": {"op": "POP"}, "3030": {"op": "POP"}, "3031": {"op": "POP"}, "3032": {"jump": "o", "op": "JUMP"}, "3033": {"op": "JUMPDEST"}, "3034": {"op": "PUSH1", "value": "0x0"}, "3036": {"op": "DUP2"}, "3037": {"op": "PUSH2", "value": "0xBE8"}, "3040": {"op": "JUMPI"}, "3041": {"op": "PUSH2", "value": "0xBE8"}, "3044": {"op": "PUSH2", "value": "0xC2B"}, "3047": {"jump": "i", "op": "JUMP"}, "3048": {"op": "JUMPDEST"}, "3049": {"op": "POP"}, "3050": {"op": "PUSH1", "value": "0x0"}, "3052": {"op": "NOT"}, "3053": {"op": "ADD"}, "3054": {"op": "SWAP1"}, "3055": {"jump": "o", "op": "JUMP"}, "3056": {"op": "JUMPDEST"}, "3057": {"op": "PUSH1", "value": "0x1"}, "3059": {"op": "DUP2"}, "3060": {"op": "DUP2"}, "3061": {"op": "SHR"}, "3062": {"op": "SWAP1"}, "3063": {"op": "DUP3"}, "3064": {"op": "AND"}, "3065": {"op": "DUP1"}, "3066": {"op": "PUSH2", "value": "0xC04"}, "3069": {"op": "JUMPI"}, "3070": {"op": "PUSH1", "value": "0x7F"}, "3072": {"op": "DUP3"}, "3073": {"op": "AND"}, "3074": {"op": "SWAP2"}, "3075": {"op": "POP"}, "3076": {"op": "JUMPDEST"}, "3077": {"op": "PUSH1", "value": "0x20"}, "3079": {"op": "DUP3"}, "3080": {"op": "LT"}, "3081": {"op": "DUP2"}, "3082": {"op": "EQ"}, "3083": {"op": "ISZERO"}, "3084": {"op": "PUSH2", "value": "0xC25"}, "3087": {"op": "JUMPI"}, "3088": {"op": "PUSH4", "value": "0x4E487B71"}, "3093": {"op": "PUSH1", "value": "0xE0"}, "3095": {"op": "SHL"}, "3096": {"op": "PUSH1", "value": "0x0"}, "3098": {"op": "MSTORE"}, "3099": {"op": "PUSH1", "value": "0x22"}, "3101": {"op": "PUSH1", "value": "0x4"}, "3103": {"op": "MSTORE"}, "3104": {"op": "PUSH1", "value": "0x24"}, "3106": {"op": "PUSH1", "value": "0x0"}, "3108": {"op": "REVERT"}, "3109": {"op": "JUMPDEST"}, "3110": {"op": "POP"}, "3111": {"op": "SWAP2"}, "3112": {"op": "SWAP1"}, "3113": {"op": "POP"}, "3114": {"jump": "o", "op": "JUMP"}, "3115": {"op": "JUMPDEST"}, "3116": {"op": "PUSH4", "value": "0x4E487B71"}, "3121": {"op": "PUSH1", "value": "0xE0"}, "3123": {"op": "SHL"}, "3124": {"op": "PUSH1", "value": "0x0"}, "3126": {"op": "MSTORE"}, "3127": {"op": "PUSH1", "value": "0x11"}, "3129": {"op": "PUSH1", "value": "0x4"}, "3131": {"op": "MSTORE"}, "3132": {"op": "PUSH1", "value": "0x24"}, "3134": {"op": "PUSH1", "value": "0x0"}, "3136": {"op": "REVERT"}, "3137": {"op": "JUMPDEST"}, "3138": {"op": "PUSH4", "value": "0x4E487B71"}, "3143": {"op": "PUSH1", "value": "0xE0"}, "3145": {"op": "SHL"}, "3146": {"op": "PUSH1", "value": "0x0"}, "3148": {"op": "MSTORE"}, "3149": {"op": "PUSH1", "value": "0x41"}, "3151": {"op": "PUSH1", "value": "0x4"}, "3153": {"op": "MSTORE"}, "3154": {"op": "PUSH1", "value": "0x24"}, "3156": {"op": "PUSH1", "value": "0x0"}, "3158": {"op": "REVERT"}}, "sha1": "3421b91e4da2072c0113c0f59265404a64e4c0e8", "source": "//SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.2;\n\nimport \"../../libraries/core/LibRunnerRegistry.sol\";\nimport \"../../libraries/core/LibRunnerDetail.sol\";\nimport \"../../libraries/core/LibJobBoard.sol\";\nimport \"../../libraries/core/LibRunner.sol\";\nimport \"../../libraries/utils/LibAccessControl.sol\";\n\nimport \"../../interfaces/IHubLibraryEvents.sol\";\n\ncontract RunnerRegistry is IHubLibraryEvents {\n    event RegisteredAsRunner(address indexed sender);\n\n    /**\n     * registerRunner registers approved applicants (has passed background check)\n     *\n     * @param _maxMetresPerTrip | unit in metre\n     *\n     * @custom:event RegisteredAsRunner\n     */\n    // TODO: test this not callable for runner switching hives (after registered for second hive)\n    function registerAsRunner(uint256 _maxMetresPerTrip) external {\n        LibRunnerRegistry._requireNotRunner();\n        LibJobBoard._requireNotActive(); // ok use of requireNotActive\n        LibRunnerDetail.StorageRunnerDetail storage s1 = LibRunnerDetail\n            ._storageRunnerDetail();\n        require(\n            bytes(s1.runnerToRunnerDetail[msg.sender].uri).length != 0,\n            \"RunnerRegistry: URI not set\"\n        );\n        require(msg.sender != address(0), \"RunnerRegistry: Zero address\");\n\n        s1.runnerToRunnerDetail[msg.sender].id = LibRunnerRegistry._mint();\n        s1\n            .runnerToRunnerDetail[msg.sender]\n            .maxMetresPerTrip = _maxMetresPerTrip;\n\n        emit RegisteredAsRunner(msg.sender);\n    }\n\n    event MaxMetresUpdated(address indexed sender, uint256 metres);\n\n    /**\n     * updateMaxMetresPerTrip updates maximum metre per trip of runner\n     *\n     * @param _maxMetresPerTrip | unit in metre\n     */\n    function updateMaxMetresPerTrip(uint256 _maxMetresPerTrip) external {\n        LibRunnerRegistry._requireIsRunner();\n        LibJobBoard._requireNotActive(); // ok use of requireNotActive\n        LibRunnerDetail\n            ._storageRunnerDetail()\n            .runnerToRunnerDetail[msg.sender]\n            .maxMetresPerTrip = _maxMetresPerTrip;\n\n        emit MaxMetresUpdated(msg.sender, _maxMetresPerTrip);\n    }\n\n    function approveApplicant(address _runner, string memory _uri) external {\n        LibAccessControl._requireOnlyRole(LibAccessControl.HIVE_ROLE); // hive timelock\n\n        LibRunnerRegistry._approveApplicant(_runner, _uri, msg.sender);\n    }\n\n    // note: in case URI set wrongly\n    function resetURI(address _runner, string memory _uri) external {\n        LibAccessControl._requireOnlyRole(LibAccessControl.HIVE_ROLE); // hive timelock\n\n        LibRunnerDetail\n            ._storageRunnerDetail()\n            .runnerToRunnerDetail[_runner]\n            .uri = _uri;\n    }\n\n    event LeftHive(address indexed sender, address hive);\n\n    function leaveHive() external {\n        LibRunnerRegistry._requireIsRunner();\n        LibJobBoard._requireNotActive(); // ok use of requireNotActive\n\n        LibRunnerDetail.StorageRunnerDetail storage s1 = LibRunnerDetail\n            ._storageRunnerDetail();\n\n        address hive = s1.runnerToRunnerDetail[msg.sender].hive;\n        require(hive != address(0), \"RunnerRegistry: caller not in hive\");\n\n        s1.runnerToRunnerDetail[msg.sender].hive = address(0);\n\n        emit LeftHive(msg.sender, hive);\n    }\n}\n", "sourceMap": "361:2934:57:-:0;;;;;;;;;;;;;;;;;;;", "sourcePath": "contracts/hub/facets/core/RunnerRegistry.sol", "type": "contract", "deployment": {"address": "0x866382773188bcdaFf4414dCb5443Ea72ADF8b90", "chainid": "80001", "blockHeight": 26007172}}